{"Category":"WebBrowser Agent","SubCategory":"Travel Planning","Task":"Return a JSON object representing the agent's process of planning a weekend getaway based on user preferences","Schema":{"type":"object","properties":{"TravelPlanning":{"type":"object","properties":{"destination":{"type":"string"},"departure_date":{"type":"string","format":"date"},"return_date":{"type":"string","format":"date"},"accommodation_preference":{"type":"string"},"activities":{"type":"array","items":{"type":"string"}}}},"required":["destination","departure_date","return_date","accommodation_preference","activities"]}},"required":["TravelPlanning"]}
{"Category":"WebBrowser Agent","SubCategory":"Fitness Tracking","Task":"Return a JSON object representing the agent's process of tracking and recommending fitness routines based on user health goals","Schema":{"type":"object","properties":{"FitnessTracking":{"type":"object","properties":{"current_health_status":{"type":"object","properties":{"weight":{"type":"number"},"height":{"type":"number"},"heart_rate":{"type":"number"}},"required":["weight","height","heart_rate"]},"health_goals":{"type":"array","items":{"type":"string"}},"recommended_routines":{"type":"array","items":{"type":"string"}}}},"required":["current_health_status","health_goals","recommended_routines"]}},"required":["FitnessTracking"]}
{"Category":"WebBrowser Agent","SubCategory":"Book Recommendations","Task":"Return a JSON object representing the agent's process of suggesting books based on user reading preferences","Schema":{"type":"object","properties":{"BookRecommendations":{"type":"object","properties":{"favorite_genres":{"type":"array","items":{"type":"string"}},"reading_history":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string"},"author":{"type":"string"},"genre":{"type":"string"}},"required":["title","author","genre"]}},"suggested_books":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string"},"author":{"type":"string"},"genre":{"type":"string"}},"required":["title","author","genre"]}}}},"required":["favorite_genres","reading_history","suggested_books"]}},"required":["BookRecommendations"]}
{"Category":"WebBrowser Agent","SubCategory":"Home Improvement","Task":"Return a JSON object representing the agent's process of providing DIY home improvement ideas based on user interests","Schema":{"type":"object","properties":{"HomeImprovement":{"type":"object","properties":{"room_interest":{"type":"string"},"budget":{"type":"number"},"preferred_style":{"type":"string"},"project_ideas":{"type":"array","items":{"type":"string"}}}},"required":["room_interest","budget","preferred_style","project_ideas"]}},"required":["HomeImprovement"]}
{"Category":"WebBrowser Agent","SubCategory":"Language Learning","Task":"Return a JSON object representing the agent's process of creating a personalized language learning plan for the user","Schema":{"type":"object","properties":{"LanguageLearning":{"type":"object","properties":{"target_language":{"type":"string"},"current_proficiency":{"type":"string"},"learning_goals":{"type":"array","items":{"type":"string"}},"recommended_resources":{"type":"array","items":{"type":"string"}}}},"required":["target_language","current_proficiency","learning_goals","recommended_resources"]}},"required":["LanguageLearning"]}
{"Category":"WebBrowser Agent","SubCategory":"Budget Management","Task":"Return a JSON object representing the agent's process of creating a monthly budget based on user income and expenses","Schema":{"type":"object","properties":{"BudgetManagement":{"type":"object","properties":{"monthly_income":{"type":"number"},"expenses":{"type":"array","items":{"type":"object","properties":{"category":{"type":"string"},"amount":{"type":"number"}},"required":["category","amount"]}},"savings_goal":{"type":"number"}}},"required":["monthly_income","expenses","savings_goal"]}},"required":["BudgetManagement"]}
{"Category":"WebBrowser Agent","SubCategory":"Event Planning","Task":"Return a JSON object representing the agent's process of organizing a birthday party based on user preferences","Schema":{"type":"object","properties":{"EventPlanning":{"type":"object","properties":{"party_theme":{"type":"string"},"guest_list":{"type":"array","items":{"type":"string"}},"budget":{"type":"number"},"venue":{"type":"string"},"entertainment_options":{"type":"array","items":{"type":"string"}}}},"required":["party_theme","guest_list","budget","venue","entertainment_options"]}},"required":["EventPlanning"]}
{"Category":"WebBrowser Agent","SubCategory":"Recipe Recommendations","Task":"Return a JSON object representing the agent's process of suggesting recipes based on user dietary preferences and restrictions","Schema":{"type":"object","properties":{"RecipeRecommendations":{"type":"object","properties":{"cuisine_preference":{"type":"string"},"dietary_restrictions":{"type":"array","items":{"type":"string"}},"favorite_ingredients":{"type":"array","items":{"type":"string"}},"suggested_recipes":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string"},"ingredients":{"type":"array","items":{"type":"string"}},"instructions":{"type":"string"}},"required":["title","ingredients","instructions"]}}}},"required":["cuisine_preference","dietary_restrictions","favorite_ingredients","suggested_recipes"]}},"required":["RecipeRecommendations"]}
{"Category":"WebBrowser Agent","SubCategory":"Job Search","Task":"Return a JSON object representing the agent's process of searching for job opportunities based on user qualifications and preferences","Schema":{"type":"object","properties":{"JobSearch":{"type":"object","properties":{"job_title":{"type":"string"},"preferred_industry":{"type":"string"},"experience_level":{"type":"string"},"desired_salary":{"type":"number"},"recommended_jobs":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string"},"company":{"type":"string"},"location":{"type":"string"}},"required":["title","company","location"]}}}},"required":["job_title","preferred_industry","experience_level","desired_salary","recommended_jobs"]}},"required":["JobSearch"]}
{"Category":"WebBrowser Agent","SubCategory":"Weather Updates","Task":"Return a JSON object representing the agent's process of providing weather updates based on user location and preferences","Schema":{"type":"object","properties":{"WeatherUpdates":{"type":"object","properties":{"current_location":{"type":"string"},"preferred_units":{"type":"string"},"weather_forecast":{"type":"string"},"recommended_activities":{"type":"array","items":{"type":"string"}}}},"required":["current_location","preferred_units","weather_forecast","recommended_activities"]}},"required":["WeatherUpdates"]}
{"Category":"WebBrowser Agent","SubCategory":"Dinner Scheduling","Task":"Return a JSON object representing the agent's process of scheduling a dinner based on user chat history","Schema":{"type":"object","properties":{"Dinner Scheduling":{"type":"object","properties":{"initial_request":{"type":"string"},"allergy_considerations":{"type":"array","items":{"type":"string"}},"location_consensus":{"type":"string"},"cuisine_preference":{"type":"string"},"final_decision":{"type":"string"},"restaurant_options":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"}},"required":["title"]}}},"required":["initial_request","allergy_considerations","location_consensus","cuisine_preference","final_decision","restaurant_options"]}},"required":["Dinner Scheduling"]}}
{"Category":"JSON Schema","SubCategory":"Address Schema","Task":"Create a JSON schema representing an address with properties for post office box, street address, locality, region, postal code, and country name. The schema should enforce that locality, region, and country name are required, and if post office box or extended address is provided, street address must also be provided.","Schema": {"description": "An address similar to http://microformats.org/wiki/h-card", "type": "object", "properties": {"postOfficeBox": {"type": "string"}, "extendedAddress": {"type": "string"}, "streetAddress": {"type": "string"}, "locality": {"type": "string"}, "region": {"type": "string"}, "postalCode": {"type": "string"}, "countryName": {"type": "string"}}, "required": ["locality", "region", "countryName"], "dependentRequired": {"postOfficeBox": ["streetAddress"], "extendedAddress": ["streetAddress"]}}}
{"Category":"JSON Schema","SubCategory":"Blog Post Schema","Task":"Create a JSON schema representing a blog post with properties for title, content, published date, author, and tags. The schema should enforce that title, content, and author are required.","Schema": {"description": "A representation of a blog post", "type": "object", "required": ["title", "content", "author"], "properties": {"title": {"type": "string"}, "content": {"type": "string"}, "publishedDate": {"type": "string", "format": "date-time"}, "author": {"$ref": "https://example.com/user-profile.schema.json"}, "tags": {"type": "array", "items": {"type": "string"}}}}}
{"Category":"JSON Schema","SubCategory":"Calendar Event Schema","Task":"Create a JSON schema representing an event in a calendar with properties for start date, end date, summary, location, recurrence date, and category. The schema should enforce that start date and summary are required.","Schema": {"description": "A representation of an event", "type": "object", "required": ["startDate", "summary"], "properties": {"startDate": {"type": "string", "description": "Event starting time"}, "endDate": {"type": "string", "description": "Event ending time"}, "summary": {"type": "string"}, "location": {"type": "string"}, "url": {"type": "string"}, "duration": {"type": "string", "description": "Event duration"}, "recurrenceDate": {"type": "string", "description": "Recurrence date"}, "recurrenceRule": {"type": "string", "description": "Recurrence rule"}, "category": {"type": "string"}, "description": {"type": "string"}, "geo": {"$ref": "https://example.com/geographical-location.schema.json"}}}}
{"Category":"JSON Schema","SubCategory":"Device Type Schema","Task":"Create a JSON schema representing electronic devices with a property for device type. Depending on the device type (smartphone or laptop), enforce specific properties such as brand, model, and screen size for smartphones, and brand, model, processor, and RAM size for laptops.","Schema":{"type":"object","properties":{"deviceType":{"type":"string"}},"required":["deviceType"],"oneOf":[{"properties":{"deviceType":{"const":"smartphone"}},"$ref":"https://example.com/smartphone.schema.json"},{"properties":{"deviceType":{"const":"laptop"}},"$ref":"https://example.com/laptop.schema.json"}]}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Create a JSON schema representing an ecommerce system with definitions for product and order schemas. Enforce properties such as name and price for products, and order ID and items for orders.","Schema":{"$defs":{"product":{"$anchor":"ProductSchema","type":"object","properties":{"name":{"type":"string"},"price":{"type":"number","minimum":0}}},"order":{"$anchor":"OrderSchema","type":"object","properties":{"orderId":{"type":"string"},"items":{"type":"array","items":{"$ref":"#ProductSchema"}}}}}}}
{"Category":"JSON Schema","SubCategory":"Geographical Location Schema","Task":"Create a JSON schema representing geographical coordinates with latitude and longitude values within specified ranges.","Schema":{"title":"Longitude and Latitude Values","description":"A geographical coordinate.","required":["latitude","longitude"],"type":"object","properties":{"latitude":{"type":"number","minimum":-90,"maximum":90},"longitude":{"type":"number","minimum":-180,"maximum":180}}}}
{"Category":"JSON Schema","SubCategory":"Minimum Viable Schema","Task":"Create a simple JSON schema with properties for person's first name, last name and age.","Schema":{"title":"Person","type":"object","properties":{"firstName":{"type":"string","description":"The person's first name."},"lastName":{"type":"string","description":"The person's last name."},"age":{"description":"Age in years which must be equal to or greater than zero.","type":"integer","minimum":0}}}}
{"Category":"JSON Schema","SubCategory":"Array Validation","Task":"Create a JSON schema to validate an array of strings and an array of objects.","Schema":{"description":"Array validation","type":"object","properties":{"fruits":{"type":"array","items":{"type":"string"}},"vegetables":{"type":"array","items":{"$ref":"#/$defs/veggie"}}},"$defs":{"veggie":{"type":"object","required":["veggieName","veggieLike"],"properties":{"veggieName":{"type":"string","description":"The name of the vegetable."},"veggieLike":{"type":"boolean","description":"Do I like this vegetable?"}}}}}}
{"Category":"JSON Schema","SubCategory":"Enumeration","Task": "Create a JSON schema to allow integer, string, null, and array data types.", "Schema": {"title": "Enumerated Values", "type": "object", "properties": {"data": {"oneOf": [{"type": "integer"}, {"type": "string"}, {"type": "null"}, {"type": "array", "items": {"type": "integer"}}]}}}}
{"Category":"JSON Schema","SubCategory":"Regex Pattern","Task":"Create a JSON schema to validate a code string against a regex pattern.","Schema":{"title":"Regular Expression Pattern","type":"object","properties":{"code":{"type":"string","pattern":"^[A-Z]{3}-\\d{3}$"}}}}
{"Category":"JSON Schema","SubCategory":"Complex Object","Task":"Create a JSON schema for a complex object with nested properties and array.","Schema":{"title":"Complex Object","type":"object","properties":{"name":{"type":"string"},"age":{"type":"integer","minimum":0},"address":{"type":"object","properties":{"street":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"postalCode":{"type":"string","pattern":"\\d{5}"}},"required":["street","city","state","postalCode"]},"hobbies":{"type":"array","items":{"type":"string"}}},"required":["name","age"]}}
{"Category":"JSON Schema","SubCategory":"Dependent Required","Task":"Create a JSON schema with dependent required validation.","Schema":{"title":"Conditional Validation with dependentRequired","type":"object","properties":{"foo":{"type":"boolean"},"bar":{"type":"string"}},"dependentRequired":{"foo":["bar"]}}}
{"Category":"JSON Schema","SubCategory":"Dependent Schemas","Task":"Create a JSON schema with dependent schemas for conditional validation.","Schema":{"title":"Conditional Validation with dependentSchemas","type":"object","properties":{"foo":{"type":"boolean"},"propertiesCount":{"type":"integer","minimum":0}},"dependentSchemas":{"foo":{"required":["propertiesCount"],"properties":{"propertiesCount":{"minimum":7}}}}}}
{"Category":"JSON Schema","SubCategory":"Conditional Validation","Task":"Create a JSON schema with if-else conditions to apply different validations.","Schema":{"title":"Conditional Validation with If-Else","type":"object","properties":{"isMember":{"type":"boolean"},"membershipNumber":{"type":"string"}},"required":["isMember"],"if":{"properties":{"isMember":{"const":"true"}}},"then":{"properties":{"membershipNumber":{"type":"string","minLength":10,"maxLength":10}}},"else":{"properties":{"membershipNumber":{"type":"string","minLength":15}}}}}
{"Category":"Modeling a file system with JSON Schema","SubCategory":"Creating the fstab schema","Task":"Build a JSON Schema that mirrors the structure of an /etc/fstab file.","Schema":{"$id":"https://example.com/fstab","$schema":"https://json-schema.org/draft/2020-12/schema","type":"object","required":["/"],"properties":{"/":{}},"patternProperties":{"^(/[^/]+)+$":{}},"additionalProperties":"false"}}
{"Category":"Modeling a file system with JSON Schema","SubCategory":"Starting the entry schema","Task":"Define a JSON Schema for an fstab entry.","Schema":{"$id":"https://example.com/entry-schema","$schema":"https://json-schema.org/draft/2020-12/schema","description":"JSON Schema for an fstab entry","type":"object","required":["storage"],"properties":{"storage":{"type":"object","oneOf":[{"$ref":"#/definitions/diskDevice"},{"$ref":"#/definitions/diskUUID"},{"$ref":"#/definitions/nfs"},{"$ref":"#/definitions/tmpfs"}]}},"$defs":{"diskDevice":{},"diskUUID":{},"nfs":{},"tmpfs":{}}}}
{"Category":"Modeling a file system with JSON Schema","SubCategory":"Constraining an entry","Task":"Extend the entry schema with constraints for properties like fstype, options, and readonly.","Schema":{"$id":"https://example.com/entry-schema","$schema":"https://json-schema.org/draft/2020-12/schema","description":"JSON Schema for an fstab entry","type":"object","required":["storage"],"properties":{"storage":{},"fstype":{"enum":["ext3","ext4","btrfs"]},"options":{},"readonly":{"type":"boolean"}},"$defs":{}}}
{"Category":"Modeling a file system with JSON Schema","SubCategory":"Creating the fstab schema","Task":"Build a JSON Schema that mirrors the structure of an /etc/fstab file.","Schema":{"$id":"https://example.com/fstab","$schema":"https://json-schema.org/draft/2020-12/schema","type":"object","required":["/"],"properties":{"/":{}},"patternProperties":{"^(/[^/]+)+$":{}},"additionalProperties":"false"}}
{"Category":"Modeling a file system with JSON Schema","SubCategory":"The diskUUID definition","Task":"Define JSON Schema for diskUUID.","Schema":{"diskUUID":{"properties":{"type":{"enum":["disk"]},"label":{"type":"string","pattern":"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"}},"required":["type","label"],"additionalProperties":"false"}}}
{"Category":"Modeling a file system with JSON Schema","SubCategory":"The nfs definition","Task":"Define JSON Schema for nfs.","Schema":{"nfs":{"properties":{"type":{"enum":["nfs"]},"remotePath":{"type":"string","pattern":"^(/[^/]+)+$"},"server":{"type":"string","oneOf":[{"format":"hostname"},{"format":"ipv4"},{"format":"ipv6"}]}},"required":["type","server","remotePath"],"additionalProperties":"false"}}}
{"Category":"Modeling a file system with JSON Schema","SubCategory":"The tmpfs definition","Task":"Define JSON Schema for tmpfs.","Schema":{"tmpfs":{"properties":{"type":{"enum":["tmpfs"]},"sizeInMB":{"type":"integer","minimum":16,"maximum":512}},"required":["type","sizeInMB"],"additionalProperties":"false"}}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Oil & Gas Drilling", "Schema": {"properties": {"drillingCompany": {"title": "Drilling Company", "type": "string"}, "location": {"title": "Location", "type": "string"}, "depth": {"title": "Depth", "type": "number"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "oilType": {"title": "Oil Type", "type": "string"}, "gasType": {"title": "Gas Type", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Active", "Inactive", "Completed", "Abandoned"]}}, "required": ["drillingCompany", "location", "depth", "startDate", "status"], "title": "OilGasDrilling", "type": "object"}}
{"Category": "Finance", "SubCategory": "Investment Banking & Brokerage", "Task": "Stock Transaction Record", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "stockSymbol": {"title": "Stock Symbol", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["Buy", "Sell"]}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date-time"}, "pricePerShare": {"title": "Price Per Share", "type": "number"}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["transactionId", "stockSymbol", "quantity", "transactionType", "transactionDate", "pricePerShare"], "title": "StockTransaction", "type": "object"}}
{"Category": "Technology", "SubCategory": "Software & Services", "Task": "User Login Event", "Schema": {"properties": {"userId": {"title": "User ID", "type": "string"}, "username": {"title": "Username", "type": "string"}, "loginTime": {"title": "Login Time", "type": "string", "format": "date-time"}, "ipAddress": {"title": "IP Address", "type": "string"}, "device": {"title": "Device", "type": "string"}, "location": {"title": "Location", "type": "string"}, "successful": {"title": "Successful", "type": "boolean"}}, "required": ["userId", "username", "loginTime", "ipAddress", "successful"], "title": "UserLoginEvent", "type": "object"}}
{"Category": "Healthcare", "SubCategory": "Pharmaceuticals", "Task": "Medication Inventory Update", "Schema": {"properties": {"medicationId": {"title": "Medication ID", "type": "string"}, "medicationName": {"title": "Medication Name", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}, "restockLevel": {"title": "Restock Level", "type": "integer"}, "supplier": {"title": "Supplier", "type": "string"}, "lastRestockDate": {"title": "Last Restock Date", "type": "string", "format": "date"}}, "required": ["medicationId", "medicationName", "quantityInStock", "restockLevel"], "title": "MedicationInventory", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Education Services", "Task": "Student Enrollment Record", "Schema": {"properties": {"studentId": {"title": "Student ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "enrollmentDate": {"title": "Enrollment Date", "type": "string", "format": "date"}, "program": {"title": "Program", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Enrolled", "Suspended", "Graduated", "Withdrawn"]}, "creditsEarned": {"title": "Credits Earned", "type": "integer"}}, "required": ["studentId", "fullName", "enrollmentDate", "program", "status"], "title": "StudentEnrollment", "type": "object"}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Create a JSON schema representing an ecommerce system with definitions for product and order schemas. Enforce properties such as name and price for products, and order ID and items for orders.","Schema":{"$defs":{"product":{"$anchor":"ProductSchema","type":"object","properties":{"name":{"type":"string"},"price":{"type":"number","minimum":0}}},"order":{"$anchor":"OrderSchema","type":"object","properties":{"orderId":{"type":"string"},"items":{"type":"array","items":{"$ref":"#ProductSchema"}}}}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Generate a JSON object representing a product with properties including name and price.","Schema":{"type":"object","properties":{"name":{"type":"string"},"price":{"type":"number","minimum":0}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Create a JSON object for an order with properties such as order ID and items.","Schema":{"type":"object","properties":{"orderId":{"type":"string"},"items":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"price":{"type":"number","minimum":0}}}}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Develop a JSON object for a customer profile with properties like name, email, and shipping address.","Schema":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"shippingAddress":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Construct a JSON object for a shopping cart, including properties like items, quantities, and total price.","Schema":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"price":{"type":"number","minimum":0}}}},"quantities":{"type":"array","items":{"type":"number","minimum":0}},"totalPrice":{"type":"number","minimum":0}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Design a JSON object for a product category with properties such as category ID and name.","Schema":{"type":"object","properties":{"categoryId":{"type":"string"},"name":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Generate a JSON object representing a discount coupon with properties like code, discount percentage, and expiration date.","Schema":{"type":"object","properties":{"code":{"type":"string"},"discountPercentage":{"type":"number","minimum":0,"maximum":100},"expirationDate":{"type":"string","format":"date"}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Create a JSON object for a user review of a product, including properties such as rating, comment, and timestamp.","Schema":{"type":"object","properties":{"rating":{"type":"number","minimum":1,"maximum":5},"comment":{"type":"string"},"timestamp":{"type":"string","format":"date-time"}}}}
{"Category":"JSON Schema","SubCategory":"Ecommerce System Schema","Task":"Develop a JSON object for a wishlist, including properties like user ID and array of product IDs.","Schema":{"type":"object","properties":{"userId":{"type":"string"},"productIds":{"type":"array","items":{"type":"string"}}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Create a JSON schema representing a patient's health record, including properties such as patientName, dateOfBirth, bloodType, allergies, conditions, medications, procedures, ICD codes, CPT codes, NDC, SNOMED, and emergencyContact.","Schema":{"type":"object","required":["patientName","dateOfBirth","bloodType"],"properties":{"patientName":{"type":"string"},"dateOfBirth":{"type":"string","format":"date"},"bloodType":{"type":"string"},"allergies":{"type":"array","items":{"type":"string"}},"conditions":{"type":"array","items":{"type":"string"}},"medications":{"type":"array","items":{"type":"string"}},"procedures":{"type":"array","items":{"type":"string"}},"icdCodes":{"type":"array","items":{"type":"string"}},"cptCodes":{"type":"array","items":{"type":"string"}},"ndc":{"type":"string"},"snomed":{"type":"string"},"emergencyContact":{"$ref":"https://example.com/user-profile.schema.json"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Generate a JSON object representing a patient's health record with properties including patientName, dateOfBirth, bloodType, allergies, conditions, medications, procedures, ICD codes, CPT codes, NDC, SNOMED, and emergencyContact.","Schema":"type":"object","required":["patientName","dateOfBirth","bloodType"],"properties":{"patientName":{"type":"string"},"dateOfBirth":{"type":"string","format":"date"},"bloodType":{"type":"string"},"allergies":{"type":"array","items":{"type":"string"}},"conditions":{"type":"array","items":{"type":"string"}},"medications":{"type":"array","items":{"type":"string"}},"procedures":{"type":"array","items":{"type":"string"}},"icdCodes":{"type":"array","items":{"type":"string"}},"cptCodes":{"type":"array","items":{"type":"string"}},"ndc":{"type":"string"},"snomed":{"type":"string"},"emergencyContact":{"$ref":"https://example.com/user-profile.schema.json"}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Create a JSON object for storing patient allergies, with properties like allergyName, severity, and associated ICD codes.","Schema":{"type":"object","properties":{"allergyName":{"type":"string"},"severity":{"type":"string"},"icdCodes":{"type":"array","items":{"type":"string"}}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Develop a JSON schema for representing a medical condition with properties such as conditionName, diagnosisDate, treatment, and associated ICD codes.","Schema":{"type":"object","properties":{"conditionName":{"type":"string"},"diagnosisDate":{"type":"string","format":"date"},"treatment":{"type":"string"},"icdCodes":{"type":"array","items":{"type":"string"}}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Construct a JSON object representing a medication, including properties like medicationName, dosage, frequency, NDC, and associated SNOMED.","Schema":{"type":"object","properties":{"medicationName":{"type":"string"},"dosage":{"type":"string"},"frequency":{"type":"string"},"ndc":{"type":"string"},"snomed":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Design a JSON object for an emergency contact profile, including properties such as contactName, relationship, phone, email, and any relevant ICD codes.","Schema":{"type":"object","properties":{"contactName":{"type":"string"},"relationship":{"type":"string"},"phone":{"type":"string"},"email":{"type":"string"},"icdCodes":{"type":"array","items":{"type":"string"}}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Generate a JSON object representing a patient's medical history, including properties like previous surgeries, vaccinations, family medical history, ICD codes, and CPT codes.","Schema":{"type":"object","properties":{"previousSurgeries":{"type":"array","items":{"type":"string"}},"vaccinations":{"type":"array","items":{"type":"string"}},"familyMedicalHistory":{"type":"array","items":{"type":"string"}},"icdCodes":{"type":"array","items":{"type":"string"}},"cptCodes":{"type":"array","items":{"type":"string"}}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Create a JSON object for recording vital signs, including properties like temperature, blood pressure, heart rate, and any associated SNOMED.","Schema":{"type":"object","properties":{"temperature":{"type":"string"},"bloodPressure":{"type":"string"},"heartRate":{"type":"string"},"snomed":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Develop a JSON schema for representing a doctor's prescription, including properties such as patientID, medication, dosage, instructions, and any relevant NDC.","Schema":{"type":"object","properties":{"patientID":{"type":"string"},"medication":{"type":"string"},"dosage":{"type":"string"},"instructions":{"type":"string"},"ndc":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Construct a JSON object representing a laboratory test result, including properties like testType, result, date, and any associated SNOMED.","Schema":{"type":"object","properties":{"testType":{"type":"string"},"result":{"type":"string"},"date":{"type":"string","format":"date"},"snomed":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Create a JSON schema representing a drug with properties including active ingredient, administration route, precautions related to alcohol consumption, dosage form, and interactions with other drugs.","Schema":{"$id":"https://schema.org/Drug","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing a drug","type":"object","properties":{"activeIngredient":{"type":"string"},"administrationRoute":{"type":"string"},"precautionsAlcohol":{"type":"string"},"dosageForm":{"type":"string"},"interactions":{"type":"array","items":{"$ref":"#Drug"}}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Develop a JSON schema for representing a drug strength with properties such as dosage strength value and unit.","Schema":{"$id":"https://schema.org/DrugStrength","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug strength","type":"object","properties":{"value":{"type":"number"},"unit":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Design a JSON schema for representing drug dose schedules for a given population, including observed, recommended, or maximum dose.","Schema":{"$id":"https://schema.org/DoseSchedule","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug dose schedules","type":"object","properties":{"population":{"type":"string"},"observedDose":{"$ref":"#DrugStrength"},"recommendedDose":{"$ref":"#DrugStrength"},"maximumDose":{"$ref":"#DrugStrength"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Construct a JSON schema for representing drug classes with properties such as class name.","Schema":{"$id":"https://schema.org/DrugClass","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug classes","type":"object","properties":{"className":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Develop a JSON schema representing health insurance plans that cover a drug with properties such as plan name and coverage details.","Schema":{"$id":"https://schema.org/HealthInsurancePlan","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing health insurance plans","type":"object","properties":{"planName":{"type":"string"},"coverageDetails":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Create a JSON schema for representing drug interactions with properties such as interacting drug name and impact.","Schema":{"$id":"https://schema.org/DrugInteraction","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug interactions","type":"object","properties":{"interactingDrugName":{"type":"string"},"impact":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Generate a JSON schema representing drug legal status with properties such as status code and description.","Schema":{"$id":"https://schema.org/DrugLegalStatus","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug legal status","type":"object","properties":{"statusCode":{"type":"string"},"description":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Develop a JSON schema for representing drug pregnancy categories with properties such as category code and description.","Schema":{"$id":"https://schema.org/DrugPregnancyCategory","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug pregnancy categories","type":"object","properties":{"categoryCode":{"type":"string"},"description":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Design a JSON schema for representing drug prescription status with properties such as status code and description.","Schema":{"$id":"https://schema.org/DrugPrescriptionStatus","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug prescription status","type":"object","properties":{"statusCode":{"type":"string"},"description":{"type":"string"}}}}
{"Category":"JSON Schema","SubCategory":"Healthcare System Schema","Task":"Create a JSON schema for representing drug overdose information with properties such as signs/symptoms, treatments, and emergency contact details.","Schema":{"$id":"https://schema.org/DrugOverdose","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Schema for representing drug overdose information","type":"object","properties":{"signsSymptoms":{"type":"string"},"treatments":{"type":"string"},"emergencyContact":{"type":"string"}}}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Create a JSON object for querying the status of an oil drilling site, including properties like siteID, operationalStatus, and lastInspectionDate.", "Schema": {"properties": {"siteID": {"title": "Site ID", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["Active", "Inactive", "Maintenance", "Closed"]}, "lastInspectionDate": {"title": "Last Inspection Date", "type": "string", "format": "date"}}, "required": ["siteID", "operationalStatus", "lastInspectionDate"], "title": "OilDrillingSiteStatus", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Generate a JSON object for a new drilling equipment inventory entry, including properties like equipmentID, type, manufacturer, and dateAcquired.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "dateAcquired": {"title": "Date Acquired", "type": "string", "format": "date"}}, "required": ["equipmentID", "type", "manufacturer", "dateAcquired"], "title": "DrillingEquipmentInventory", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Construct a JSON object for logging a maintenance report, with properties such as reportID, equipmentID, maintenanceDate, and details.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date-time"}, "details": {"title": "Details", "type": "string"}}, "required": ["reportID", "equipmentID", "maintenanceDate", "details"], "title": "MaintenanceReport", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Design a JSON object for tracking fuel consumption, including properties like recordID, siteID, fuelType, quantityUsed, and dateLogged.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "siteID": {"title": "Site ID", "type": "string"}, "fuelType": {"title": "Fuel Type", "type": "string"}, "quantityUsed": {"title": "Quantity Used", "type": "number"}, "dateLogged": {"title": "Date Logged", "type": "string", "format": "date"}}, "required": ["recordID", "siteID", "fuelType", "quantityUsed", "dateLogged"], "title": "FuelConsumptionRecord", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Formulate a JSON object for an API call to retrieve a list of active drilling projects, including properties like projectID, projectName, and estimatedCompletionDate.", "Schema": {"properties": {"projectID": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "estimatedCompletionDate": {"title": "Estimated Completion Date", "type": "string", "format": "date"}}, "required": ["projectID", "projectName", "estimatedCompletionDate"], "title": "ActiveDrillingProjects", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Create a JSON object for storing information about a drilling contractor, including properties like contractorName, rigCount, and servicesOffered.", "Schema": {"properties": {"contractorName": {"title": "Contractor Name", "type": "string"}, "rigCount": {"title": "Rig Count", "type": "integer"}, "servicesOffered": {"items": {"type": "string"}, "title": "Services Offered", "type": "array"}}, "required": ["contractorName", "rigCount", "servicesOffered"], "title": "DrillingContractorInfo", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Develop a JSON schema for representing a drilling rig's specifications, including properties such as rigID, type, depthCapacity, and operationalStatus.", "Schema": {"properties": {"rigID": {"title": "Rig ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "depthCapacity": {"title": "Depth Capacity", "type": "number"}, "operationalStatus": {"title": "Operational Status", "type": "string"}}, "required": ["rigID", "type", "depthCapacity", "operationalStatus"], "title": "DrillingRigSpecs", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Construct a JSON object for logging a drilling operation, including properties like operationID, contractor, location, startDate, and endDate.", "Schema": {"properties": {"operationID": {"title": "Operation ID", "type": "string"}, "contractor": {"title": "Contractor", "type": "string"}, "location": {"title": "Location", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}}, "required": ["operationID", "contractor", "location", "startDate", "endDate"], "title": "DrillingOperationLog", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Design a JSON object for tracking the maintenance history of a drilling rig, including properties such as rigID, maintenanceDate, maintenanceType, and notes.", "Schema": {"properties": {"rigID": {"title": "Rig ID", "type": "string"}, "maintenanceDate": {"format": "date", "title": "Maintenance Date", "type": "string"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "notes": {"title": "Notes", "type": "string"}}, "required": ["rigID", "maintenanceDate", "maintenanceType"], "title": "DrillingRigMaintenanceHistory", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Generate a JSON object representing a well drilling report, including properties like reportID, wellName, drillingStartDate, drillingEndDate, and totalDepth.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "wellName": {"title": "Well Name", "type": "string"}, "drillingStartDate": {"format": "date", "title": "Drilling Start Date", "type": "string"}, "drillingEndDate": {"format": "date", "title": "Drilling End Date", "type": "string"}, "totalDepth": {"title": "Total Depth", "type": "number"}}, "required": ["reportID", "wellName", "drillingStartDate", "drillingEndDate", "totalDepth"], "title": "WellDrillingReport", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Create a JSON object for querying available oil & gas equipment inventory, including properties like equipmentID, equipmentType, quantityAvailable, and locationID.", "Schema": {"properties": {"equipmentID": {"title": "EquipmentID", "type": "string"}, "equipmentType": {"title": "EquipmentType", "type": "string"}, "quantityAvailable": {"title": "QuantityAvailable", "type": "integer"}, "locationID": {"title": "LocationID", "type": "string"}}, "required": ["equipmentID", "equipmentType", "quantityAvailable", "locationID"], "title": "EquipmentInventoryQuery", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Construct a JSON object for submitting a service request for oil & gas equipment maintenance, including properties like requestID, equipmentID, serviceType, and scheduledDate.", "Schema": {"properties": {"requestID": {"title": "RequestID", "type": "string"}, "equipmentID": {"title": "EquipmentID", "type": "string"}, "serviceType": {"title": "ServiceType", "type": "string"}, "scheduledDate": {"format": "date", "title": "ScheduledDate", "type": "string"}}, "required": ["requestID", "equipmentID", "serviceType", "scheduledDate"], "title": "ServiceRequest", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Generate a JSON object for tracking oil & gas equipment rental agreements, including properties like agreementID, customerID, equipmentID, rentalPeriod, and rentalCost.", "Schema": {"properties": {"agreementID": {"title": "AgreementID", "type": "string"}, "customerID": {"title": "CustomerID", "type": "string"}, "equipmentID": {"title": "EquipmentID", "type": "string"}, "rentalPeriod": {"title": "RentalPeriod", "type": "string"}, "rentalCost": {"title": "RentalCost", "type": "number"}}, "required": ["agreementID", "customerID", "equipmentID", "rentalPeriod", "rentalCost"], "title": "RentalAgreement", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Design a JSON object for reporting oil & gas equipment malfunctions, including properties like reportID, equipmentID, malfunctionDetails, reportDate, and reporterID.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "equipmentID": {"title": "EquipmentID", "type": "string"}, "malfunctionDetails": {"title": "MalfunctionDetails", "type": "string"}, "reportDate": {"format": "date-time", "title": "ReportDate", "type": "string"}, "reporterID": {"title": "ReporterID", "type": "string"}}, "required": ["reportID", "equipmentID", "malfunctionDetails", "reportDate", "reporterID"], "title": "MalfunctionReport", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Formulate a JSON object for oil & gas equipment procurement requests, including properties like procurementID, requestedEquipmentType, quantityRequested, and estimatedBudget.", "Schema": {"properties": {"procurementID": {"title": "ProcurementID", "type": "string"}, "requestedEquipmentType": {"title": "RequestedEquipmentType", "type": "string"}, "quantityRequested": {"title": "QuantityRequested", "type": "integer"}, "estimatedBudget": {"title": "EstimatedBudget", "type": "number"}}, "required": ["procurementID", "requestedEquipmentType", "quantityRequested", "estimatedBudget"], "title": "ProcurementRequest", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Create a JSON object for storing oil rig sensor data, including properties like sensorID, timestamp, pressure, temperature, and status codes.", "Schema": {"properties": {"sensorID": {"title": "Sensor ID", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "pressure": {"title": "Pressure", "type": "number"}, "temperature": {"title": "Temperature", "type": "number"}, "statusCodes": {"items": {"type": "string"}, "title": "Status Codes", "type": "array"}}, "required": ["sensorID", "timestamp", "pressure", "temperature", "statusCodes"], "title": "Oil Rig Sensor Data", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Develop a JSON schema for a maintenance report, including properties such as reportID, equipmentID, maintenanceDate, technician, and findings.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "technician": {"title": "Technician", "type": "string"}, "findings": {"title": "Findings", "type": "string"}}, "required": ["reportID", "equipmentID", "maintenanceDate", "technician", "findings"], "title": "Maintenance Report", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Construct a JSON object for tracking fuel inventory levels, with properties like fuelType, storageTankID, currentVolume, and reorderThreshold.", "Schema": {"properties": {"fuelType": {"title": "Fuel Type", "type": "string"}, "storageTankID": {"title": "Storage Tank ID", "type": "string"}, "currentVolume": {"title": "Current Volume", "type": "number"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "number"}}, "required": ["fuelType", "storageTankID", "currentVolume", "reorderThreshold"], "title": "Fuel Inventory Level", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Design a JSON object for logging drilling activity, including properties such as activityID, wellID, startDate, endDate, and activityType.", "Schema": {"properties": {"activityID": {"title": "Activity ID", "type": "string"}, "wellID": {"title": "Well ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "activityType": {"title": "Activity Type", "type": "string"}}, "required": ["activityID", "wellID", "startDate", "endDate", "activityType"], "title": "Drilling Activity Log", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Generate a JSON object for an energy production report, including properties like reportID, productionDate, producedEnergy, energyType, and plantID.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "producedEnergy": {"title": "Produced Energy", "type": "number"}, "energyType": {"title": "Energy Type", "type": "string"}, "plantID": {"title": "Plant ID", "type": "string"}}, "required": ["reportID", "productionDate", "producedEnergy", "energyType", "plantID"], "title": "Energy Production Report", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for querying an integrated oil and gas company's production data, including fields like productionDate, location, oilVolume, gasVolume, and status.", "Schema": {"properties": {"productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "location": {"title": "Location", "type": "string"}, "oilVolume": {"title": "Oil Volume", "type": "number"}, "gasVolume": {"title": "Gas Volume", "type": "number"}, "status": {"title": "Status", "type": "string", "enum": ["active", "inactive", "maintenance"]}}, "required": ["productionDate", "location", "oilVolume", "gasVolume", "status"], "title": "ProductionDataQuery", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON object for an API call to retrieve inventory levels of consumable fuels, including properties like fuelType, quantity, warehouseLocation, and lastUpdated.", "Schema": {"properties": {"fuelType": {"title": "Fuel Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "warehouseLocation": {"title": "Warehouse Location", "type": "string"}, "lastUpdated": {"title": "Last Updated", "type": "string", "format": "date-time"}}, "required": ["fuelType", "quantity", "warehouseLocation", "lastUpdated"], "title": "InventoryLevels", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object to submit a maintenance request for oil and gas equipment, including fields like equipmentId, issueDescription, urgency, and requestedBy.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgency": {"title": "Urgency", "type": "string", "enum": ["low", "medium", "high"]}, "requestedBy": {"title": "Requested By", "type": "string"}}, "required": ["equipmentId", "issueDescription", "urgency", "requestedBy"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for tracking the transportation of oil and gas, including properties like shipmentId, origin, destination, estimatedArrival, and carrier.", "Schema": {"properties": {"shipmentId": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}, "carrier": {"title": "Carrier", "type": "string"}}, "required": ["shipmentId", "origin", "destination", "estimatedArrival", "carrier"], "title": "TransportationTracking", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object for a dashboard displaying real-time pricing data of various consumable fuels, including fields like fuelType, currentPrice, priceChange, and timestamp.", "Schema": {"properties": {"fuelType": {"title": "Fuel Type", "type": "string"}, "currentPrice": {"title": "Current Price", "type": "number"}, "priceChange": {"title": "Price Change", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["fuelType", "currentPrice", "priceChange", "timestamp"], "title": "RealTimePricingData", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Create a JSON object for storing drilling equipment details, with properties like equipmentID, equipmentName, manufacturer, and operationalStatus.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "equipmentName": {"title": "Equipment Name", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["operational", "maintenance", "decommissioned"]}}, "required": ["equipmentID", "equipmentName", "manufacturer", "operationalStatus"], "title": "DrillingEquipmentDetails", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Develop a JSON schema for a service report, including properties such as serviceID, equipmentID, serviceDate, technician, and serviceNotes.", "Schema": {"properties": {"serviceID": {"title": "Service ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "serviceDate": {"format": "date", "title": "Service Date", "type": "string"}, "technician": {"title": "Technician", "type": "string"}, "serviceNotes": {"title": "Service Notes", "type": "string"}}, "required": ["serviceID", "equipmentID", "serviceDate", "technician"], "title": "ServiceReport", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Construct a JSON object representing a well evaluation, including properties like wellID, evaluationDate, depth, and evaluationResults.", "Schema": {"properties": {"wellID": {"title": "Well ID", "type": "string"}, "evaluationDate": {"format": "date", "title": "Evaluation Date", "type": "string"}, "depth": {"title": "Depth", "type": "number"}, "evaluationResults": {"title": "Evaluation Results", "type": "string"}}, "required": ["wellID", "evaluationDate", "depth", "evaluationResults"], "title": "WellEvaluation", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Design a JSON object for tracking supply orders, including properties such as orderID, supplierName, orderDate, items, and deliveryStatus.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "orderDate": {"format": "date", "title": "Order Date", "type": "string"}, "items": {"type": "array", "items": {"type": "object", "properties": {"itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemName", "quantity"]}, "title": "Items"}, "deliveryStatus": {"title": "Delivery Status", "type": "string", "enum": ["pending", "shipped", "delivered", "backordered"]}}, "required": ["orderID", "supplierName", "orderDate", "items", "deliveryStatus"], "title": "SupplyOrderTracking", "type": "object"}}
{"Category": "Energy", "SubCategory": "Energy Equipment & Services", "Task": "Generate a JSON object representing a maintenance schedule, including properties like scheduleID, equipmentID, maintenanceDate, tasks, and maintenanceTechnician.", "Schema": {"properties": {"scheduleID": {"title": "Schedule ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "maintenanceDate": {"format": "date", "title": "Maintenance Date", "type": "string"}, "tasks": {"type": "array", "items": {"type": "string"}, "title": "Tasks"}, "maintenanceTechnician": {"title": "Maintenance Technician", "type": "string"}}, "required": ["scheduleID", "equipmentID", "maintenanceDate", "tasks", "maintenanceTechnician"], "title": "MaintenanceSchedule", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for querying the current price of a specific type of coal, including properties like coalType, pricePerTon, and region.", "Schema": {"properties": {"coalType": {"title": "Coal Type", "type": "string"}, "pricePerTon": {"title": "Price Per Ton", "type": "number"}, "region": {"title": "Region", "type": "string"}}, "required": ["coalType", "pricePerTon", "region"], "title": "CoalPriceQuery", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON object for storing fuel transaction data, including properties such as transactionId, fuelType, quantity, and price.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "fuelType": {"title": "Fuel Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "price": {"title": "Price", "type": "number"}}, "required": ["transactionId", "fuelType", "quantity", "price"], "title": "FuelTransaction", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object for an API call to retrieve the latest gas inventory levels, including properties like inventoryId, gasType, and currentVolume.", "Schema": {"properties": {"inventoryId": {"title": "Inventory ID", "type": "string"}, "gasType": {"title": "Gas Type", "type": "string"}, "currentVolume": {"title": "Current Volume", "type": "number"}}, "required": ["inventoryId", "gasType", "currentVolume"], "title": "GasInventoryQuery", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for tracking oil drilling operations, including properties such as operationId, location, depth, and oilGrade.", "Schema": {"properties": {"operationId": {"title": "Operation ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "depth": {"title": "Depth", "type": "number"}, "oilGrade": {"title": "Oil Grade", "type": "string"}}, "required": ["operationId", "location", "depth", "oilGrade"], "title": "OilDrillingOperation", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object for a dashboard displaying various energy sources and their current production rates, including properties like energySource, productionRate, and unit.", "Schema": {"properties": {"energySource": {"title": "Energy Source", "type": "string"}, "productionRate": {"title": "Production Rate", "type": "number"}, "unit": {"title": "Unit", "type": "string"}}, "required": ["energySource", "productionRate", "unit"], "title": "EnergyProductionDashboard", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying commodity chemical prices, including properties like chemicalName, marketPrice, and priceDate.", "Schema": {"properties": {"chemicalName": {"title": "Chemical Name", "type": "string"}, "marketPrice": {"title": "Market Price", "type": "number", "format": "float"}, "priceDate": {"title": "Price Date", "type": "string", "format": "date"}}, "required": ["chemicalName", "marketPrice", "priceDate"], "title": "CommodityChemicalPriceQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON object for tracking chemical inventory levels, including properties like chemicalID, quantity, and storageLocation.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "storageLocation": {"title": "Storage Location", "type": "string"}}, "required": ["chemicalID", "quantity", "storageLocation"], "title": "ChemicalInventoryTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for a chemical safety data sheet, including properties like chemicalName, hazardInformation, and handlingInstructions.", "Schema": {"properties": {"chemicalName": {"title": "Chemical Name", "type": "string"}, "hazardInformation": {"title": "Hazard Information", "type": "string"}, "handlingInstructions": {"title": "Handling Instructions", "type": "string"}}, "required": ["chemicalName", "hazardInformation", "handlingInstructions"], "title": "ChemicalSafetyDataSheet", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for chemical order requests, including properties like orderID, chemicalName, quantity, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "chemicalName": {"title": "Chemical Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "chemicalName", "quantity", "deliveryDate"], "title": "ChemicalOrderRequest", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for chemical production batch records, including properties like batchNumber, productionDate, and qualityTestsResults.", "Schema": {"properties": {"batchNumber": {"title": "Batch Number", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "qualityTestsResults": {"title": "Quality Tests Results", "type": "array", "items": {"type": "object", "properties": {"testName": {"title": "Test Name", "type": "string"}, "testResult": {"title": "Test Result", "type": "string"}}, "required": ["testName", "testResult"]}}}, "required": ["batchNumber", "productionDate", "qualityTestsResults"], "title": "ChemicalProductionBatchRecord", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for querying oil storage capacity, including properties like facilityId, capacity, currentVolume, and location.", "Schema": {"properties": {"facilityId": {"title": "Facility ID", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "currentVolume": {"title": "Current Volume", "type": "number"}, "location": {"title": "Location", "type": "string"}}, "required": ["facilityId", "capacity", "currentVolume", "location"], "title": "OilStorageQuery", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON object for tracking gas pipeline flow rates, with properties such as pipelineId, flowRate, timestamp, and status.", "Schema": {"properties": {"pipelineId": {"title": "Pipeline ID", "type": "string"}, "flowRate": {"title": "Flow Rate", "type": "number"}, "timestamp": {"format": "date-time", "title": "Timestamp", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["operational", "maintenance", "halted"]}}, "required": ["pipelineId", "flowRate", "timestamp", "status"], "title": "GasPipelineFlowRate", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object for a consumable fuels inventory report, including properties like productCode, quantityAvailable, reorderLevel, and supplier.", "Schema": {"properties": {"productCode": {"title": "Product Code", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "number"}, "reorderLevel": {"title": "Reorder Level", "type": "number"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["productCode", "quantityAvailable", "reorderLevel", "supplier"], "title": "ConsumableFuelsInventory", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for monitoring oil drilling operations, with properties such as drillId, depth, operationStatus, and extractionRate.", "Schema": {"properties": {"drillId": {"title": "Drill ID", "type": "string"}, "depth": {"title": "Depth", "type": "number"}, "operationStatus": {"title": "Operation Status", "type": "string", "enum": ["active", "paused", "completed"]}, "extractionRate": {"title": "Extraction Rate", "type": "number"}}, "required": ["drillId", "depth", "operationStatus", "extractionRate"], "title": "OilDrillingMonitoring", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object for gas station inventory management, including properties like stationId, fuelTypes, prices, and lastRestockDate.", "Schema": {"properties": {"stationId": {"title": "Station ID", "type": "string"}, "fuelTypes": {"title": "Fuel Types", "type": "array", "items": {"type": "string"}}, "prices": {"title": "Prices", "type": "object", "additionalProperties": {"type": "number"}}, "lastRestockDate": {"format": "date", "title": "Last Restock Date", "type": "string"}}, "required": ["stationId", "fuelTypes", "prices", "lastRestockDate"], "title": "GasStationInventory", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for querying the current inventory levels of various fuel types, including properties like fuelType, quantity, and location.", "Schema": {"properties": {"fuelType": {"title": "Fuel Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "location": {"title": "Location", "type": "string"}}, "required": ["fuelType", "quantity", "location"], "title": "InventoryQuery", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON object for submitting a new drilling report, including properties such as reportId, date, drillingDepth, and coordinates.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "drillingDepth": {"title": "Drilling Depth", "type": "number"}, "coordinates": {"title": "Coordinates", "type": "object", "properties": {"latitude": {"type": "number"}, "longitude": {"type": "number"}}}}, "required": ["reportId", "date", "drillingDepth", "coordinates"], "title": "DrillingReport", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object for tracking shipment of fuel orders, with properties like orderId, shipmentDate, quantity, destination, and carrier.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "shipmentDate": {"title": "Shipment Date", "type": "string", "format": "date-time"}, "quantity": {"title": "Quantity", "type": "number"}, "destination": {"title": "Destination", "type": "string"}, "carrier": {"title": "Carrier", "type": "string"}}, "required": ["orderId", "shipmentDate", "quantity", "destination", "carrier"], "title": "FuelShipmentTracking", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for a maintenance request on a refinery unit, including properties such as requestId, unitId, issueDescription, and priorityLevel.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "unitId": {"title": "Unit ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string", "enum": ["Low", "Medium", "High"]}}, "required": ["requestId", "unitId", "issueDescription", "priorityLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object for reporting environmental impact data, with properties like reportId, date, pollutants, and impactLevel.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "pollutants": {"title": "Pollutants", "type": "array", "items": {"type": "string"}}, "impactLevel": {"title": "Impact Level", "type": "string"}}, "required": ["reportId", "date", "pollutants", "impactLevel"], "title": "EnvironmentalImpactReport", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for storing information about coal production metrics, including properties like productionVolume, mineLocation, and energyContent.", "Schema": {"properties": {"productionVolume": {"title": "Production Volume", "type": "number", "description": "The volume of coal produced in metric tons."}, "mineLocation": {"title": "Mine Location", "type": "string", "description": "The geographical location of the coal mine."}, "energyContent": {"title": "Energy Content", "type": "number", "description": "The amount of energy produced per metric ton of coal."}}, "required": ["productionVolume", "mineLocation", "energyContent"], "title": "CoalProductionMetrics", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON schema for tracking oil drilling operations, including properties such as wellName, location, depth, and productionRate.", "Schema": {"properties": {"wellName": {"title": "Well Name", "type": "string", "description": "The name of the oil well."}, "location": {"title": "Location", "type": "string", "description": "The geographical location of the oil well."}, "depth": {"title": "Depth", "type": "number", "description": "The depth of the well in meters."}, "productionRate": {"title": "Production Rate", "type": "number", "description": "The rate of oil production in barrels per day."}}, "required": ["wellName", "location", "depth", "productionRate"], "title": "OilDrillingOperations", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object for a gas distribution network, including properties like networkID, pipelineLength, capacity, and maintenanceSchedule.", "Schema": {"properties": {"networkID": {"title": "Network ID", "type": "string", "description": "The identifier for the gas distribution network."}, "pipelineLength": {"title": "Pipeline Length", "type": "number", "description": "The total length of the pipeline in kilometers."}, "capacity": {"title": "Capacity", "type": "number", "description": "The maximum amount of gas that can be distributed in cubic meters per day."}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string", "description": "The schedule detailing when maintenance activities are to be performed."}}, "required": ["networkID", "pipelineLength", "capacity", "maintenanceSchedule"], "title": "GasDistributionNetwork", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for energy consumption data, including properties such as consumerID, consumptionPeriod, energyType, and amountUsed.", "Schema": {"properties": {"consumerID": {"title": "Consumer ID", "type": "string", "description": "The unique identifier for the consumer."}, "consumptionPeriod": {"title": "Consumption Period", "type": "string", "format": "date-time", "description": "The period over which energy consumption is measured."}, "energyType": {"title": "Energy Type", "type": "string", "description": "The type of energy consumed (e.g., electricity, gas, coal)."}, "amountUsed": {"title": "Amount Used", "type": "number", "description": "The amount of energy used in the specified period."}}, "required": ["consumerID", "consumptionPeriod", "energyType", "amountUsed"], "title": "EnergyConsumptionData", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object representing renewable energy sources, including properties like sourceType, location, capacity, and annualOutput.", "Schema": {"properties": {"sourceType": {"title": "Source Type", "type": "string", "description": "The type of renewable energy source (e.g., solar, wind, hydro)."}, "location": {"title": "Location", "type": "string", "description": "The geographical location of the renewable energy source."}, "capacity": {"title": "Capacity", "type": "number", "description": "The maximum output capacity in megawatts."}, "annualOutput": {"title": "Annual Output", "type": "number", "description": "The annual energy output in megawatt-hours."}}, "required": ["sourceType", "location", "capacity", "annualOutput"], "title": "RenewableEnergySources", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for storing oil well production data, including properties like wellName, dailyProduction, and location coordinates.", "Schema": {"properties": {"wellName": {"title": "Well Name", "type": "string"}, "dailyProduction": {"title": "Daily Production (barrels)", "type": "number"}, "location": {"title": "Location Coordinates", "type": "object", "properties": {"latitude": {"title": "Latitude", "type": "number"}, "longitude": {"title": "Longitude", "type": "number"}}, "required": ["latitude", "longitude"]}}, "required": ["wellName", "dailyProduction", "location"], "title": "OilWellProduction", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON object for tracking gas pipeline integrity, including properties such as pipelineID, inspectionDate, defectType, and repairStatus.", "Schema": {"properties": {"pipelineID": {"title": "Pipeline ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "defectType": {"title": "Defect Type", "type": "string"}, "repairStatus": {"title": "Repair Status", "type": "string", "enum": ["Not Inspected", "Inspected - No Defect", "Defect Found - Repair Scheduled", "Defect Repaired"]}}, "required": ["pipelineID", "inspectionDate", "defectType", "repairStatus"], "title": "GasPipelineIntegrity", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object for a fuel inventory report, including properties like fuelType, quantityInStock, and reorderLevel.", "Schema": {"properties": {"fuelType": {"title": "Fuel Type", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "number"}, "reorderLevel": {"title": "Reorder Level", "type": "number"}}, "required": ["fuelType", "quantityInStock", "reorderLevel"], "title": "FuelInventoryReport", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for recording energy consumption data, with properties such as consumerID, consumptionDate, energyType, and unitsConsumed.", "Schema": {"properties": {"consumerID": {"title": "Consumer ID", "type": "string"}, "consumptionDate": {"title": "Consumption Date", "type": "string", "format": "date"}, "energyType": {"title": "Energy Type", "type": "string", "enum": ["Electricity", "Natural Gas", "Oil"]}, "unitsConsumed": {"title": "Units Consumed", "type": "number"}}, "required": ["consumerID", "consumptionDate", "energyType", "unitsConsumed"], "title": "EnergyConsumptionData", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object for a renewable energy asset, including properties like assetID, energySource, capacity, and operationalStatus.", "Schema": {"properties": {"assetID": {"title": "Asset ID", "type": "string"}, "energySource": {"title": "Energy Source", "type": "string", "enum": ["Solar", "Wind", "Hydro", "Geothermal", "Biomass"]}, "capacity": {"title": "Capacity (MW)", "type": "number"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["Operational", "Under Maintenance", "Decommissioned"]}}, "required": ["assetID", "energySource", "capacity", "operationalStatus"], "title": "RenewableEnergyAsset", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying a database of industrial chemicals, including properties like chemicalID, chemicalName, and safetyDataSheet.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "chemicalName": {"title": "Chemical Name", "type": "string"}, "safetyDataSheet": {"title": "Safety Data Sheet", "type": "string", "format": "uri"}}, "required": ["chemicalID", "chemicalName", "safetyDataSheet"], "title": "IndustrialChemicalQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON object for tracking inventory of basic chemicals, with properties such as productCode, quantityAvailable, and storageLocation.", "Schema": {"properties": {"productCode": {"title": "Product Code", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "storageLocation": {"title": "Storage Location", "type": "string"}}, "required": ["productCode", "quantityAvailable", "storageLocation"], "title": "BasicChemicalInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for a chemical product catalog, including properties like catalogID, productName, productDescription, and price.", "Schema": {"properties": {"catalogID": {"title": "Catalog ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "productDescription": {"title": "Product Description", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["catalogID", "productName", "productDescription", "price"], "title": "ChemicalProductCatalog", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for recording petrochemical shipments, with properties such as shipmentID, origin, destination, and hazardousMaterialInfo.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "hazardousMaterialInfo": {"title": "Hazardous Material Info", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "hazardousMaterialInfo"], "title": "PetrochemicalShipmentRecord", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for managing safety inspections of chemical storage facilities, including properties like inspectionID, facilityID, inspectionDate, and inspectorName.", "Schema": {"properties": {"inspectionID": {"title": "Inspection ID", "type": "string"}, "facilityID": {"title": "Facility ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "inspectorName": {"title": "Inspector Name", "type": "string"}}, "required": ["inspectionID", "facilityID", "inspectionDate", "inspectorName"], "title": "ChemicalStorageSafetyInspection", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for querying the current inventory levels of various fuel types, including properties like fuelType, quantity, and location.", "Schema": {"properties": {"fuelType": {"title": "Fuel Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "location": {"title": "Location", "type": "string"}}, "required": ["fuelType", "quantity", "location"], "title": "InventoryLevels", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON object for tracking shipment of refined products, with properties such as shipmentID, origin, destination, quantity, and estimatedArrival.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "estimatedArrival": {"format": "date-time", "title": "Estimated Arrival", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "quantity", "estimatedArrival"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object for reporting environmental impact data, including properties like reportID, emissionType, emissionQuantity, and reportingDate.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "emissionType": {"title": "Emission Type", "type": "string"}, "emissionQuantity": {"title": "Emission Quantity", "type": "number"}, "reportingDate": {"format": "date", "title": "Reporting Date", "type": "string"}}, "required": ["reportID", "emissionType", "emissionQuantity", "reportingDate"], "title": "EnvironmentalImpact", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for a maintenance request system, including properties such as requestID, equipmentID, issueDescription, priority, and scheduledDate.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High"]}, "scheduledDate": {"format": "date", "title": "Scheduled Date", "type": "string"}}, "required": ["requestID", "equipmentID", "issueDescription", "priority", "scheduledDate"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object for monitoring energy market prices, with properties like marketID, fuelType, pricePerUnit, and timestamp.", "Schema": {"properties": {"marketID": {"title": "Market ID", "type": "string"}, "fuelType": {"title": "Fuel Type", "type": "string"}, "pricePerUnit": {"title": "Price Per Unit", "type": "number"}, "timestamp": {"format": "date-time", "title": "Timestamp", "type": "string"}}, "required": ["marketID", "fuelType", "pricePerUnit", "timestamp"], "title": "EnergyMarketPrices", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for storing oil well production data, including properties like wellName, dailyProduction, and location coordinates.", "Schema": {"properties": {"wellName": {"title": "Well Name", "type": "string"}, "dailyProduction": {"title": "Daily Production (barrels)", "type": "number"}, "location": {"title": "Location Coordinates", "type": "object", "properties": {"latitude": {"title": "Latitude", "type": "number"}, "longitude": {"title": "Longitude", "type": "number"}}, "required": ["latitude", "longitude"]}}, "required": ["wellName", "dailyProduction", "location"], "title": "OilWellProduction", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON schema for a gas station inventory, including properties such as fuelType, quantityAvailable, and reorderLevel.", "Schema": {"properties": {"fuelType": {"title": "Fuel Type", "type": "string"}, "quantityAvailable": {"title": "Quantity Available (liters)", "type": "number"}, "reorderLevel": {"title": "Reorder Level (liters)", "type": "number"}}, "required": ["fuelType", "quantityAvailable", "reorderLevel"], "title": "GasStationInventory", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object representing a refinery's daily output, including properties like refineryName, products, and productionVolumes.", "Schema": {"properties": {"refineryName": {"title": "Refinery Name", "type": "string"}, "products": {"title": "Products", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "volume": {"title": "Volume (barrels)", "type": "number"}}, "required": ["productName", "volume"]}}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}}, "required": ["refineryName", "products", "productionDate"], "title": "RefineryDailyOutput", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for tracking transportation of oil and gas, including properties such as transportId, origin, destination, and cargoDetails.", "Schema": {"properties": {"transportId": {"title": "Transport ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "cargoDetails": {"title": "Cargo Details", "type": "object", "properties": {"cargoType": {"title": "Cargo Type", "type": "string"}, "quantity": {"title": "Quantity (barrels)", "type": "number"}}, "required": ["cargoType", "quantity"]}}, "required": ["transportId", "origin", "destination", "cargoDetails"], "title": "OilGasTransportation", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object representing a chemical analysis of a fuel sample, including properties like sampleId, chemicalComposition, and analysisDate.", "Schema": {"properties": {"sampleId": {"title": "Sample ID", "type": "string"}, "chemicalComposition": {"title": "Chemical Composition", "type": "array", "items": {"type": "object", "properties": {"compound": {"title": "Compound", "type": "string"}, "percentage": {"title": "Percentage", "type": "number"}}, "required": ["compound", "percentage"]}}, "analysisDate": {"title": "Analysis Date", "type": "string", "format": "date"}}, "required": ["sampleId", "chemicalComposition", "analysisDate"], "title": "FuelSampleAnalysis", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying a chemical inventory, including properties like chemicalID, name, quantity, and storageLocation.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "storageLocation": {"title": "Storage Location", "type": "string"}}, "required": ["chemicalID", "name", "quantity", "storageLocation"], "title": "ChemicalInventoryQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON object for submitting a new chemical substance to the database, with properties such as substanceName, CASNumber, and safetyDataSheet.", "Schema": {"properties": {"substanceName": {"title": "Substance Name", "type": "string"}, "CASNumber": {"title": "CAS Number", "type": "string"}, "safetyDataSheet": {"title": "Safety Data Sheet", "type": "string"}}, "required": ["substanceName", "CASNumber", "safetyDataSheet"], "title": "NewChemicalSubmission", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for updating chemical safety information, including properties like chemicalID, newSafetyRating, and updatedBy.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "newSafetyRating": {"title": "New Safety Rating", "type": "string"}, "updatedBy": {"title": "Updated By", "type": "string"}}, "required": ["chemicalID", "newSafetyRating", "updatedBy"], "title": "ChemicalSafetyUpdate", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for a chemical disposal request, including properties such as requestID, chemicalID, quantity, and disposalMethod.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "chemicalID": {"title": "Chemical ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "disposalMethod": {"title": "Disposal Method", "type": "string"}}, "required": ["requestID", "chemicalID", "quantity", "disposalMethod"], "title": "ChemicalDisposalRequest", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for tracking chemical shipments, with properties like shipmentID, origin, destination, and expectedDeliveryDate.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "expectedDeliveryDate": {"title": "Expected Delivery Date", "type": "string", "format": "date"}}, "required": ["shipmentID", "origin", "destination", "expectedDeliveryDate"], "title": "ChemicalShipmentTracking", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for storing oil well production data, including properties like wellName, productionDate, barrelsProduced, and associated region.", "Schema": {"properties": {"wellName": {"title": "Well Name", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "barrelsProduced": {"title": "Barrels Produced", "type": "integer"}, "region": {"title": "Region", "type": "string"}}, "required": ["wellName", "productionDate", "barrelsProduced", "region"], "title": "OilWellProduction", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON schema for a gas station inventory, including properties such as stationID, fuelTypes, quantities, and lastRestockDate.", "Schema": {"properties": {"stationID": {"title": "Station ID", "type": "string"}, "fuelTypes": {"title": "Fuel Types", "type": "array", "items": {"type": "string"}}, "quantities": {"title": "Quantities", "type": "array", "items": {"type": "integer"}}, "lastRestockDate": {"title": "Last Restock Date", "type": "string", "format": "date"}}, "required": ["stationID", "fuelTypes", "quantities", "lastRestockDate"], "title": "GasStationInventory", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object representing a fuel transaction, including properties like transactionID, stationID, fuelType, quantity, and transactionDate.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "stationID": {"title": "Station ID", "type": "string"}, "fuelType": {"title": "Fuel Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date-time"}}, "required": ["transactionID", "stationID", "fuelType", "quantity", "transactionDate"], "title": "FuelTransaction", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for an oil and gas lease agreement, including properties such as leaseID, lessee, lessor, leaseStartDate, and leaseEndDate.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "lessee": {"title": "Lessee", "type": "string"}, "lessor": {"title": "Lessor", "type": "string"}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEndDate": {"title": "Lease End Date", "type": "string", "format": "date"}}, "required": ["leaseID", "lessee", "lessor", "leaseStartDate", "leaseEndDate"], "title": "OilGasLeaseAgreement", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object representing a consumable fuel order, including properties like orderID, customerID, fuelType, quantityOrdered, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "fuelType": {"title": "Fuel Type", "type": "string"}, "quantityOrdered": {"title": "Quantity Ordered", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "customerID", "fuelType", "quantityOrdered", "deliveryDate"], "title": "ConsumableFuelOrder", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Create a JSON object for tracking oil transportation shipments, including properties like shipmentID, origin, destination, quantity, and shipmentDate.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "shipmentDate": {"format": "date", "title": "Shipment Date", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "quantity", "shipmentDate"], "title": "OilTransportationShipment", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Develop a JSON object for a gas storage facility, detailing properties such as facilityID, location, capacity, currentVolume, and safetyInspectionDate.", "Schema": {"properties": {"facilityID": {"title": "Facility ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "currentVolume": {"title": "Current Volume", "type": "number"}, "safetyInspectionDate": {"format": "date", "title": "Safety Inspection Date", "type": "string"}}, "required": ["facilityID", "location", "capacity", "currentVolume", "safetyInspectionDate"], "title": "GasStorageFacility", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Construct a JSON object representing refined product inventory levels, with properties like productID, productName, quantityAvailable, and lastUpdated.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "number"}, "lastUpdated": {"format": "date-time", "title": "Last Updated", "type": "string"}}, "required": ["productID", "productName", "quantityAvailable", "lastUpdated"], "title": "RefinedProductInventory", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Design a JSON object for logging oil & gas shipping vessel details, including properties such as vesselID, vesselName, capacity, operator, and flagCountry.", "Schema": {"properties": {"vesselID": {"title": "Vessel ID", "type": "string"}, "vesselName": {"title": "Vessel Name", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "operator": {"title": "Operator", "type": "string"}, "flagCountry": {"title": "Flag Country", "type": "string"}}, "required": ["vesselID", "vesselName", "capacity", "operator", "flagCountry"], "title": "ShippingVesselDetails", "type": "object"}}
{"Category": "Energy", "SubCategory": "Oil, Gas & Consumable Fuels", "Task": "Generate a JSON object for monitoring coal slurry pipeline operations, with properties such as pipelineID, throughput, startLocation, endLocation, and maintenanceSchedule.", "Schema": {"properties": {"pipelineID": {"title": "Pipeline ID", "type": "string"}, "throughput": {"title": "Throughput", "type": "number"}, "startLocation": {"title": "Start Location", "type": "string"}, "endLocation": {"title": "End Location", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["pipelineID", "throughput", "startLocation", "endLocation", "maintenanceSchedule"], "title": "CoalSlurryPipelineOperations", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Create a JSON object for querying available cement types, including properties like brand, grade, and price per bag.", "Schema": {"properties": {"brand": {"title": "Brand", "type": "string"}, "grade": {"title": "Grade", "type": "string"}, "pricePerBag": {"title": "PricePerBag", "type": "number"}}, "required": ["brand", "grade", "pricePerBag"], "title": "CementQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Develop a JSON object for retrieving steel rod inventory, with properties such as diameter, length, quantity, and supplier.", "Schema": {"properties": {"diameter": {"title": "Diameter", "type": "number"}, "length": {"title": "Length", "type": "number"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["diameter", "length", "quantity", "supplier"], "title": "SteelRodInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Construct a JSON object for a paint supply request, including properties like color, volume, type, and vendor.", "Schema": {"properties": {"color": {"title": "Color", "type": "string"}, "volume": {"title": "Volume", "type": "number"}, "type": {"title": "Type", "type": "string"}, "vendor": {"title": "Vendor", "type": "string"}}, "required": ["color", "volume", "type", "vendor"], "title": "PaintSupplyRequest", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Design a JSON object for tracking brick shipments, with properties such as shipmentID, brickType, quantity, and expectedDeliveryDate.", "Schema": {"properties": {"shipmentID": {"title": "ShipmentID", "type": "string"}, "brickType": {"title": "BrickType", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "expectedDeliveryDate": {"title": "ExpectedDeliveryDate", "type": "string", "format": "date"}}, "required": ["shipmentID", "brickType", "quantity", "expectedDeliveryDate"], "title": "BrickShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Generate a JSON object for electrical wiring specifications, including properties like wireLength, insulationType, voltageRating, and manufacturer.", "Schema": {"properties": {"wireLength": {"title": "WireLength", "type": "number"}, "insulationType": {"title": "InsulationType", "type": "string"}, "voltageRating": {"title": "VoltageRating", "type": "number"}, "manufacturer": {"title": "Manufacturer", "type": "string"}}, "required": ["wireLength", "insulationType", "voltageRating", "manufacturer"], "title": "ElectricalWiringSpecs", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying a database of fertilizers, including properties like productID, name, nutrientContents, and usageInstructions.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "nutrientContents": {"title": "Nutrient Contents", "type": "object", "properties": {"nitrogen": {"type": "number"}, "phosphorus": {"type": "number"}, "potassium": {"type": "number"}}, "required": ["nitrogen", "phosphorus", "potassium"]}, "usageInstructions": {"title": "Usage Instructions", "type": "string"}}, "required": ["productID", "name", "nutrientContents"], "title": "FertilizerQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON object for an API call to retrieve agricultural chemical safety data, including properties like chemicalID, safetySheetURL, and handlingGuidelines.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "safetySheetURL": {"title": "Safety Sheet URL", "type": "string", "format": "uri"}, "handlingGuidelines": {"title": "Handling Guidelines", "type": "string"}}, "required": ["chemicalID", "safetySheetURL"], "title": "ChemicalSafetyData", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object to submit a new agricultural chemical product to a regulatory database, including properties like productName, activeIngredients, targetPests, and approvalStatus.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "activeIngredients": {"title": "Active Ingredients", "type": "array", "items": {"type": "string"}}, "targetPests": {"title": "Target Pests", "type": "array", "items": {"type": "string"}}, "approvalStatus": {"title": "Approval Status", "type": "string", "enum": ["pending", "approved", "rejected"]}}, "required": ["productName", "activeIngredients", "targetPests"], "title": "NewChemicalProductSubmission", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for a user query to find alternative chemicals based on a given chemical's properties, including properties like chemicalName, desiredProperties, and exclusionCriteria.", "Schema": {"properties": {"chemicalName": {"title": "Chemical Name", "type": "string"}, "desiredProperties": {"title": "Desired Properties", "type": "array", "items": {"type": "string"}}, "exclusionCriteria": {"title": "Exclusion Criteria", "type": "array", "items": {"type": "string"}}}, "required": ["chemicalName", "desiredProperties"], "title": "AlternativeChemicalsQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for tracking the inventory of agricultural chemicals in a warehouse, including properties like inventoryID, chemicalDetails, quantityAvailable, and storageLocation.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "chemicalDetails": {"title": "Chemical Details", "type": "object", "properties": {"chemicalID": {"type": "string"}, "name": {"type": "string"}, "purity": {"type": "string"}}, "required": ["chemicalID", "name"]}, "quantityAvailable": {"title": "Quantity Available", "type": "number"}, "storageLocation": {"title": "Storage Location", "type": "string"}}, "required": ["inventoryID", "chemicalDetails", "quantityAvailable"], "title": "ChemicalInventoryTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for storing chemical product details, including properties like productName, CASNumber, and safetyDataSheet.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "CASNumber": {"title": "CAS Number", "type": "string"}, "safetyDataSheet": {"title": "Safety Data Sheet", "type": "string", "format": "uri"}}, "required": ["productName", "CASNumber", "safetyDataSheet"], "title": "ChemicalProductDetails", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON schema for a chemical inventory list, with properties such as inventoryID, chemicalProducts, and storageLocation.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "chemicalProducts": {"type": "array", "items": {"$ref": "#/$defs/ChemicalProductDetails"}}, "storageLocation": {"title": "Storage Location", "type": "string"}}, "required": ["inventoryID", "chemicalProducts", "storageLocation"], "title": "ChemicalInventoryList", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for tracking chemical shipments, including properties like shipmentID, origin, destination, and chemicalDetails.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "chemicalDetails": {"type": "array", "items": {"$ref": "#/$defs/ChemicalProductDetails"}}}, "required": ["shipmentID", "origin", "destination", "chemicalDetails"], "title": "ChemicalShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for a chemical reaction process, including properties such as reactionID, reactants, products, and conditions.", "Schema": {"properties": {"reactionID": {"title": "Reaction ID", "type": "string"}, "reactants": {"type": "array", "items": {"type": "string"}}, "products": {"type": "array", "items": {"type": "string"}}, "conditions": {"title": "Conditions", "type": "object", "properties": {"temperature": {"title": "Temperature", "type": "number"}, "pressure": {"title": "Pressure", "type": "number"}, "duration": {"title": "Duration", "type": "string"}}}}, "required": ["reactionID", "reactants", "products", "conditions"], "title": "ChemicalReactionProcess", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object representing a laboratory test result, including properties like testID, chemicalTested, results, and dateOfTest.", "Schema": {"properties": {"testID": {"title": "Test ID", "type": "string"}, "chemicalTested": {"title": "Chemical Tested", "type": "string"}, "results": {"title": "Results", "type": "object", "properties": {"pH": {"title": "pH Level", "type": "number"}, "viscosity": {"title": "Viscosity", "type": "number"}, "boilingPoint": {"title": "Boiling Point", "type": "number"}}}, "dateOfTest": {"title": "Date of Test", "type": "string", "format": "date"}}, "required": ["testID", "chemicalTested", "results", "dateOfTest"], "title": "LaboratoryTestResult", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying a database of specialty chemicals, including properties like chemicalID, name, formula, and safety information.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "formula": {"title": "Formula", "type": "string"}, "safetyInformation": {"title": "Safety Information", "type": "string"}}, "required": ["chemicalID", "name", "formula", "safetyInformation"], "title": "SpecialtyChemicalQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON object for submitting a new specialty chemical to an inventory system, with properties such as chemicalID, name, quantity, and storage location.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "storageLocation": {"title": "Storage Location", "type": "string"}}, "required": ["chemicalID", "name", "quantity", "storageLocation"], "title": "NewChemicalSubmission", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for updating the safety information of a specialty chemical, including properties like chemicalID, updatedSafetyInfo, and updateTimestamp.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "updatedSafetyInfo": {"title": "Updated Safety Information", "type": "string"}, "updateTimestamp": {"title": "Update Timestamp", "format": "date-time", "type": "string"}}, "required": ["chemicalID", "updatedSafetyInfo", "updateTimestamp"], "title": "SafetyInfoUpdate", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for a chemical usage report, with properties such as reportID, chemicalID, usageAmount, and usageDate.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "chemicalID": {"title": "Chemical ID", "type": "string"}, "usageAmount": {"title": "Usage Amount", "type": "number"}, "usageDate": {"title": "Usage Date", "format": "date", "type": "string"}}, "required": ["reportID", "chemicalID", "usageAmount", "usageDate"], "title": "ChemicalUsageReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for tracking chemical shipments, including properties like shipmentID, chemicalID, quantityShipped, and shipmentDate.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "chemicalID": {"title": "Chemical ID", "type": "string"}, "quantityShipped": {"title": "Quantity Shipped", "type": "number"}, "shipmentDate": {"title": "Shipment Date", "format": "date", "type": "string"}}, "required": ["shipmentID", "chemicalID", "quantityShipped", "shipmentDate"], "title": "ChemicalShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for storing fertilizer product details, including properties like productName, chemicalComposition, NPK ratio, and safetyInstructions.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "chemicalComposition": {"title": "Chemical Composition", "type": "string"}, "npkRatio": {"title": "NPK Ratio", "type": "string"}, "safetyInstructions": {"title": "Safety Instructions", "type": "string"}}, "required": ["productName", "chemicalComposition", "npkRatio", "safetyInstructions"], "title": "FertilizerProductDetails", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON schema for a pesticide product, capturing details such as productID, activeIngredients, targetPests, and applicationGuidelines.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "activeIngredients": {"title": "Active Ingredients", "type": "array", "items": {"type": "string"}}, "targetPests": {"title": "Target Pests", "type": "array", "items": {"type": "string"}}, "applicationGuidelines": {"title": "Application Guidelines", "type": "string"}}, "required": ["productID", "activeIngredients", "targetPests", "applicationGuidelines"], "title": "PesticideProduct", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for tracking potash inventory, including properties like batchNumber, weight, purityLevel, and storageLocation.", "Schema": {"properties": {"batchNumber": {"title": "Batch Number", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "purityLevel": {"title": "Purity Level", "type": "string"}, "storageLocation": {"title": "Storage Location", "type": "string"}}, "required": ["batchNumber", "weight", "purityLevel", "storageLocation"], "title": "PotashInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for an agriculture-related chemical safety report, including properties such as reportID, chemicalName, incidentDetails, and preventiveMeasures.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "chemicalName": {"title": "Chemical Name", "type": "string"}, "incidentDetails": {"title": "Incident Details", "type": "string"}, "preventiveMeasures": {"title": "Preventive Measures", "type": "string"}}, "required": ["reportID", "chemicalName", "incidentDetails", "preventiveMeasures"], "title": "ChemicalSafetyReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for a chemical product order, including properties like orderID, customerDetails, productDetails, quantity, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerName", "address"]}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}}, "required": ["productName", "productID"]}, "quantity": {"title": "Quantity", "type": "number"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "customerDetails", "productDetails", "quantity", "deliveryDate"], "title": "ChemicalProductOrder", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Create a JSON object for querying a database of construction material suppliers, including properties like supplierName, materialType, and location.", "Schema": {"properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "materialType": {"title": "Material Type", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["supplierName", "materialType", "location"], "title": "SupplierQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Develop a JSON schema for an API call to retrieve pricing information on construction materials, including properties like materialID, price, and currency.", "Schema": {"properties": {"materialID": {"title": "Material ID", "type": "string"}, "price": {"title": "Price", "type": "number"}, "currency": {"title": "Currency", "type": "string"}}, "required": ["materialID", "price", "currency"], "title": "PriceInformation", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Construct a JSON object for submitting a new construction material to a product catalog, including properties like productName, description, and specifications.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "description": {"title": "Description", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"dimensions": {"title": "Dimensions", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "material": {"title": "Material", "type": "string"}}}}, "required": ["productName", "description", "specifications"], "title": "NewMaterialSubmission", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Design a JSON object for a construction material inventory check, including properties like materialID, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"materialID": {"title": "Material ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["materialID", "quantityAvailable", "reorderThreshold"], "title": "InventoryCheck", "type": "object"}}
{"Category": "Materials", "SubCategory": "Construction Materials", "Task": "Generate a JSON object for tracking the shipment of construction materials, including properties like shipmentID, origin, destination, and estimatedArrival.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["shipmentID", "origin", "destination", "estimatedArrival"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying a database of high value-added chemicals, including properties like chemicalID, name, type, and applications.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "applications": {"title": "Applications", "type": "array", "items": {"type": "string"}}}, "required": ["chemicalID", "name", "type", "applications"], "title": "ChemicalQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON object for adding a new specialty paint product to the inventory, including properties like productID, color, viscosity, and safetyDataSheet.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "color": {"title": "Color", "type": "string"}, "viscosity": {"title": "Viscosity", "type": "string"}, "safetyDataSheet": {"title": "Safety Data Sheet", "type": "string"}}, "required": ["productID", "color", "viscosity", "safetyDataSheet"], "title": "NewPaintProduct", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for tracking the shipment of adhesives, including properties like shipmentID, contents, destination, and estimatedArrival.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "contents": {"title": "Contents", "type": "array", "items": {"type": "string"}}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["shipmentID", "contents", "destination", "estimatedArrival"], "title": "AdhesiveShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for a chemical inventory audit, including properties like auditID, auditorName, date, and findings.", "Schema": {"properties": {"auditID": {"title": "Audit ID", "type": "string"}, "auditorName": {"title": "Auditor Name", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "findings": {"title": "Findings", "type": "array", "items": {"type": "string"}}}, "required": ["auditID", "auditorName", "date", "findings"], "title": "ChemicalInventoryAudit", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for a customer order of specialty chemicals, including properties like orderID, customerDetails, orderedProducts, and deliveryInstructions.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "address", "contact"]}, "orderedProducts": {"title": "Ordered Products", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productID", "quantity"]}}, "deliveryInstructions": {"title": "Delivery Instructions", "type": "string"}}, "required": ["orderID", "customerDetails", "orderedProducts", "deliveryInstructions"], "title": "CustomerOrder", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying a database of industrial gas manufacturers, including properties like manufacturerName, location, and productRange.", "Schema": {"properties": {"manufacturerName": {"title": "Manufacturer Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "productRange": {"items": {"type": "string"}, "title": "Product Range", "type": "array"}}, "required": ["manufacturerName", "location", "productRange"], "title": "IndustrialGasManufacturerQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON schema for an API call to retrieve safety data sheets for chemicals, including properties like chemicalName, sdsUrl, and hazardIdentification.", "Schema": {"properties": {"chemicalName": {"title": "Chemical Name", "type": "string"}, "sdsUrl": {"format": "uri", "title": "SDS URL", "type": "string"}, "hazardIdentification": {"title": "Hazard Identification", "type": "string"}}, "required": ["chemicalName", "sdsUrl", "hazardIdentification"], "title": "SafetyDataSheetAPI", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for submitting a chemical inventory report, including properties like reportId, facilityName, chemicalList, and reportDate.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "facilityName": {"title": "Facility Name", "type": "string"}, "chemicalList": {"items": {"type": "string"}, "title": "Chemical List", "type": "array"}, "reportDate": {"format": "date", "title": "Report Date", "type": "string"}}, "required": ["reportId", "facilityName", "chemicalList", "reportDate"], "title": "ChemicalInventoryReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for a chemical order request, including properties like orderId, customerDetails, orderedChemicals, and deliveryInstructions.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerName", "address"]}, "orderedChemicals": {"items": {"type": "object", "properties": {"chemicalName": {"title": "Chemical Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}}, "required": ["chemicalName", "quantity"]}, "title": "Ordered Chemicals", "type": "array"}, "deliveryInstructions": {"title": "Delivery Instructions", "type": "string"}}, "required": ["orderId", "customerDetails", "orderedChemicals"], "title": "ChemicalOrderRequest", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for tracking chemical shipments, including properties like shipmentId, origin, destination, and trackingStatus.", "Schema": {"properties": {"shipmentId": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "trackingStatus": {"title": "Tracking Status", "type": "string"}}, "required": ["shipmentId", "origin", "destination", "trackingStatus"], "title": "ChemicalShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Create a JSON object for storing information about metal containers, including properties like containerID, materialType, capacity, and manufacturer details.", "Schema": {"properties": {"containerID": {"title": "Container ID", "type": "string"}, "materialType": {"title": "Material Type", "type": "string", "enum": ["Metal", "Glass", "Plastic"]}, "capacity": {"title": "Capacity", "type": "number"}, "manufacturer": {"title": "Manufacturer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["name", "location"]}}, "required": ["containerID", "materialType", "capacity", "manufacturer"], "title": "MetalContainerInfo", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Develop a JSON schema for tracking glass container shipments, including properties such as shipmentID, containerDetails, quantity, and destination.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "containerDetails": {"title": "Container Details", "type": "array", "items": {"type": "object", "properties": {"containerID": {"title": "Container ID", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}}, "required": ["containerID", "capacity"]}}, "quantity": {"title": "Quantity", "type": "integer"}, "destination": {"title": "Destination", "type": "string"}}, "required": ["shipmentID", "containerDetails", "quantity", "destination"], "title": "GlassContainerShipment", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Construct a JSON object for a plastic container product catalog, including properties like productCode, dimensions, color, and price.", "Schema": {"properties": {"productCode": {"title": "Product Code", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "object", "properties": {"length": {"title": "Length", "type": "number"}, "width": {"title": "Width", "type": "number"}, "height": {"title": "Height", "type": "number"}}, "required": ["length", "width", "height"]}, "color": {"title": "Color", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["productCode", "dimensions", "color", "price"], "title": "PlasticContainerCatalog", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Design a JSON object for recording packaging material inventory, including properties such as inventoryID, materialType, stockLevel, and reorderThreshold.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "materialType": {"title": "Material Type", "type": "string", "enum": ["Cardboard", "Foam", "Plastic", "Metal"]}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["inventoryID", "materialType", "stockLevel", "reorderThreshold"], "title": "PackagingMaterialInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Generate a JSON object for a container quality inspection report, including properties like reportID, inspectorName, containerID, inspectionDate, and defects.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "containerID": {"title": "Container ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "defects": {"title": "Defects", "type": "array", "items": {"type": "string"}}}, "required": ["reportID", "inspectorName", "containerID", "inspectionDate"], "title": "ContainerQualityInspectionReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for storing aluminum product details, including properties like productID, productName, weight, and bauxiteOrigin.", "Schema": {"properties": {"productID": {"title": "ProductID", "type": "string"}, "productName": {"title": "Productname", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "bauxiteOrigin": {"title": "Bauxiteorigin", "type": "string"}}, "required": ["productID", "productName", "weight", "bauxiteOrigin"], "title": "AluminumProductDetails", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON schema for a mining operation report, including properties such as reportID, mineLocation, extractedMaterial, and date.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "mineLocation": {"title": "Minelocation", "type": "string"}, "extractedMaterial": {"title": "Extractedmaterial", "type": "string"}, "date": {"format": "date", "title": "Date", "type": "string"}}, "required": ["reportID", "mineLocation", "extractedMaterial", "date"], "title": "MiningOperationReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for tracking aluminum recycling input, including properties like inputID, source, quantity, and dateReceived.", "Schema": {"properties": {"inputID": {"title": "InputID", "type": "string"}, "source": {"title": "Source", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "dateReceived": {"format": "date", "title": "Datereceived", "type": "string"}}, "required": ["inputID", "source", "quantity", "dateReceived"], "title": "AluminumRecyclingInput", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for an aluminum building product, including properties such as productCode, dimensions, alloyType, and usage.", "Schema": {"properties": {"productCode": {"title": "Productcode", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "string"}, "alloyType": {"title": "Alloytype", "type": "string"}, "usage": {"title": "Usage", "type": "string"}}, "required": ["productCode", "dimensions", "alloyType", "usage"], "title": "AluminumBuildingProduct", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object representing a bauxite mining site, including properties like siteID, location, operationalStatus, and annualOutput.", "Schema": {"properties": {"siteID": {"title": "SiteID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "operationalStatus": {"title": "Operationalstatus", "type": "string"}, "annualOutput": {"title": "Annualoutput", "type": "number"}}, "required": ["siteID", "location", "operationalStatus", "annualOutput"], "title": "BauxiteMiningSite", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Create a JSON object for querying the availability of a specific industrial gas, including properties like gasName, requiredQuantity, and deliveryDate.", "Schema": {"properties": {"gasName": {"title": "Gas Name", "type": "string"}, "requiredQuantity": {"title": "Required Quantity", "type": "number"}, "deliveryDate": {"format": "date", "title": "Delivery Date", "type": "string"}}, "required": ["gasName", "requiredQuantity", "deliveryDate"], "title": "IndustrialGasAvailabilityQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Develop a JSON object for submitting a chemical hazard report, including properties like chemicalID, hazardDetails, incidentDate, and reporterContactInfo.", "Schema": {"properties": {"chemicalID": {"title": "Chemical ID", "type": "string"}, "hazardDetails": {"title": "Hazard Details", "type": "string"}, "incidentDate": {"format": "date-time", "title": "Incident Date", "type": "string"}, "reporterContactInfo": {"title": "Reporter Contact Info", "type": "object", "properties": {"name": {"type": "string"}, "phone": {"type": "string"}, "email": {"format": "email", "type": "string"}}, "required": ["name", "phone", "email"]}}, "required": ["chemicalID", "hazardDetails", "incidentDate", "reporterContactInfo"], "title": "ChemicalHazardReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Construct a JSON object for tracking chemical inventory, including properties like chemicalName, currentStock, reorderLevel, and supplierDetails.", "Schema": {"properties": {"chemicalName": {"title": "Chemical Name", "type": "string"}, "currentStock": {"title": "Current Stock", "type": "number"}, "reorderLevel": {"title": "Reorder Level", "type": "number"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"type": "string"}, "contact": {"type": "string"}, "address": {"type": "string"}}, "required": ["supplierName", "contact", "address"]}}, "required": ["chemicalName", "currentStock", "reorderLevel", "supplierDetails"], "title": "ChemicalInventoryTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Design a JSON object for a chemical order request, including properties like orderID, customerDetails, orderedChemicals, and expectedDelivery.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"type": "string"}, "contact": {"type": "string"}, "address": {"type": "string"}}, "required": ["customerName", "contact", "address"]}, "orderedChemicals": {"title": "Ordered Chemicals", "type": "array", "items": {"type": "object", "properties": {"chemicalName": {"type": "string"}, "quantity": {"type": "number"}}, "required": ["chemicalName", "quantity"]}}, "expectedDelivery": {"format": "date", "title": "Expected Delivery", "type": "string"}}, "required": ["orderID", "customerDetails", "orderedChemicals", "expectedDelivery"], "title": "ChemicalOrderRequest", "type": "object"}}
{"Category": "Materials", "SubCategory": "Chemicals", "Task": "Generate a JSON object for chemical waste disposal records, including properties like wasteID, chemicalComposition, quantity, disposalMethod, and disposalDate.", "Schema": {"properties": {"wasteID": {"title": "Waste ID", "type": "string"}, "chemicalComposition": {"title": "Chemical Composition", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "disposalMethod": {"title": "Disposal Method", "type": "string"}, "disposalDate": {"format": "date", "title": "Disposal Date", "type": "string"}}, "required": ["wasteID", "chemicalComposition", "quantity", "disposalMethod", "disposalDate"], "title": "ChemicalWasteDisposalRecord", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for a mining equipment inventory, including properties like equipmentID, type, model, status, and location.", "Schema": {"properties": {"equipmentID": {"title": "EquipmentID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "model": {"title": "Model", "type": "string"}, "status": {"title": "Status", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["equipmentID", "type", "model", "status", "location"], "title": "MiningEquipmentInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for tracking ore extraction, with properties such as extractionDate, oreType, weight, and purity level.", "Schema": {"properties": {"extractionDate": {"format": "date", "title": "ExtractionDate", "type": "string"}, "oreType": {"title": "OreType", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "purityLevel": {"title": "PurityLevel", "type": "string"}}, "required": ["extractionDate", "oreType", "weight", "purityLevel"], "title": "OreExtraction", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for a safety inspection report, including properties like reportID, inspectorName, date, findings, and correctiveActions.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "inspectorName": {"title": "InspectorName", "type": "string"}, "date": {"format": "date", "title": "Date", "type": "string"}, "findings": {"title": "Findings", "type": "string"}, "correctiveActions": {"title": "CorrectiveActions", "type": "string"}}, "required": ["reportID", "inspectorName", "date", "findings", "correctiveActions"], "title": "SafetyInspectionReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for a shipment log, with properties such as shipmentID, origin, destination, weight, contentDescription, and departureDate.", "Schema": {"properties": {"shipmentID": {"title": "ShipmentID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "contentDescription": {"title": "ContentDescription", "type": "string"}, "departureDate": {"format": "date", "title": "DepartureDate", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "weight", "contentDescription", "departureDate"], "title": "ShipmentLog", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object representing a worker's daily activity log, including properties like workerID, date, tasksCompleted, hoursWorked, and safetyIncidents.", "Schema": {"properties": {"workerID": {"title": "WorkerID", "type": "string"}, "date": {"format": "date", "title": "Date", "type": "string"}, "tasksCompleted": {"items": {"type": "string"}, "title": "TasksCompleted", "type": "array"}, "hoursWorked": {"title": "HoursWorked", "type": "number"}, "safetyIncidents": {"items": {"type": "string"}, "title": "SafetyIncidents", "type": "array"}}, "required": ["workerID", "date", "tasksCompleted", "hoursWorked", "safetyIncidents"], "title": "WorkerDailyActivityLog", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying aluminum product specifications, including properties like productID, alloyGrade, dimensions, and weight.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "alloyGrade": {"title": "Alloy Grade", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "object", "properties": {"length": {"title": "Length", "type": "number"}, "width": {"title": "Width", "type": "number"}, "height": {"title": "Height", "type": "number"}}, "required": ["length", "width", "height"]}, "weight": {"title": "Weight", "type": "number"}}, "required": ["productID", "alloyGrade", "dimensions", "weight"], "title": "AluminumProductSpecifications", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for a mining equipment inventory, including properties like equipmentID, type, manufacturer, and status.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["operational", "maintenance", "decommissioned"]}}, "required": ["equipmentID", "type", "manufacturer", "status"], "title": "MiningEquipmentInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for tracking ore extraction data, including properties like extractionDate, location, oreType, and quantityExtracted.", "Schema": {"properties": {"extractionDate": {"title": "Extraction Date", "type": "string", "format": "date"}, "location": {"title": "Location", "type": "string"}, "oreType": {"title": "Ore Type", "type": "string"}, "quantityExtracted": {"title": "Quantity Extracted", "type": "number"}}, "required": ["extractionDate", "location", "oreType", "quantityExtracted"], "title": "OreExtractionData", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for a metal futures contract, including properties like contractID, metalType, contractDate, expiryDate, and contractVolume.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "metalType": {"title": "Metal Type", "type": "string"}, "contractDate": {"title": "Contract Date", "type": "string", "format": "date"}, "expiryDate": {"title": "Expiry Date", "type": "string", "format": "date"}, "contractVolume": {"title": "Contract Volume", "type": "number"}}, "required": ["contractID", "metalType", "contractDate", "expiryDate", "contractVolume"], "title": "MetalFuturesContract", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object for reporting environmental impact from mining activities, including properties like reportID, mineID, impactType, description, and mitigationMeasures.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "mineID": {"title": "Mine ID", "type": "string"}, "impactType": {"title": "Impact Type", "type": "string"}, "description": {"title": "Description", "type": "string"}, "mitigationMeasures": {"title": "Mitigation Measures", "type": "array", "items": {"type": "string"}}}, "required": ["reportID", "mineID", "impactType", "description", "mitigationMeasures"], "title": "EnvironmentalImpactReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Create a JSON object for a new container product, including properties like productId, materialType, dimensions, and capacity.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "materialType": {"title": "Material Type", "type": "string", "enum": ["metal", "glass", "plastic"]}, "dimensions": {"title": "Dimensions", "type": "object", "properties": {"height": {"title": "Height", "type": "number"}, "diameter": {"title": "Diameter", "type": "number"}}, "required": ["height", "diameter"]}, "capacity": {"title": "Capacity", "type": "number"}}, "required": ["productId", "materialType", "dimensions", "capacity"], "title": "ContainerProduct", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Develop a JSON schema for a packaging order, including properties such as orderId, customerDetails, productItems, and deliveryDate.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "productItems": {"title": "Product Items", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productId", "quantity"]}}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderId", "customerDetails", "productItems", "deliveryDate"], "title": "PackagingOrder", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Construct a JSON object for tracking container inventory, including properties like inventoryId, location, containerType, and quantityAvailable.", "Schema": {"properties": {"inventoryId": {"title": "Inventory ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "containerType": {"title": "Container Type", "type": "string", "enum": ["bottle", "jar", "can", "box"]}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["inventoryId", "location", "containerType", "quantityAvailable"], "title": "ContainerInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Design a JSON object for a container shipment, including properties such as shipmentId, origin, destination, containerDetails, and estimatedArrival.", "Schema": {"properties": {"shipmentId": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "containerDetails": {"title": "Container Details", "type": "array", "items": {"type": "object", "properties": {"containerId": {"title": "Container ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["containerId", "quantity"]}}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["shipmentId", "origin", "destination", "containerDetails", "estimatedArrival"], "title": "ContainerShipment", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Generate a JSON object for a container quality check, including properties like checkId, inspectorName, containerId, defects, and approvalStatus.", "Schema": {"properties": {"checkId": {"title": "Check ID", "type": "string"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "containerId": {"title": "Container ID", "type": "string"}, "defects": {"title": "Defects", "type": "array", "items": {"type": "string"}}, "approvalStatus": {"title": "Approval Status", "type": "string", "enum": ["approved", "rejected"]}}, "required": ["checkId", "inspectorName", "containerId", "approvalStatus"], "title": "ContainerQualityCheck", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying copper production data, including properties like mineName, location, productionVolume, and year.", "Schema": {"properties": {"mineName": {"title": "Mine Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "productionVolume": {"title": "Production Volume", "type": "number"}, "year": {"title": "Year", "type": "integer"}}, "required": ["mineName", "location", "productionVolume", "year"], "title": "CopperProductionQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for tracking metal ore grades, including properties such as mineID, oreType, gradePercentage, and dateSampled.", "Schema": {"properties": {"mineID": {"title": "Mine ID", "type": "string"}, "oreType": {"title": "Ore Type", "type": "string"}, "gradePercentage": {"title": "Grade Percentage", "type": "number"}, "dateSampled": {"title": "Date Sampled", "type": "string", "format": "date"}}, "required": ["mineID", "oreType", "gradePercentage", "dateSampled"], "title": "OreGradeTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for a mining equipment inventory, including properties like equipmentID, type, manufacturer, and status.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["operational", "maintenance", "decommissioned"]}}, "required": ["equipmentID", "type", "manufacturer", "status"], "title": "MiningEquipmentInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for reporting environmental impact assessments, with properties such as reportID, assessmentType, findings, and dateConducted.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "assessmentType": {"title": "Assessment Type", "type": "string"}, "findings": {"title": "Findings", "type": "string"}, "dateConducted": {"title": "Date Conducted", "type": "string", "format": "date"}}, "required": ["reportID", "assessmentType", "findings", "dateConducted"], "title": "EnvironmentalImpactAssessmentReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object for tracking shipment of mined materials, including properties like shipmentID, contentDescription, weight, destination, and shipmentDate.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "contentDescription": {"title": "Content Description", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "destination": {"title": "Destination", "type": "string"}, "shipmentDate": {"title": "Shipment Date", "type": "string", "format": "date"}}, "required": ["shipmentID", "contentDescription", "weight", "destination", "shipmentDate"], "title": "MinedMaterialsShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for storing information about a mining site, including properties like siteName, location, mineralType, and operationalStatus.", "Schema": {"properties": {"siteName": {"title": "Site Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "mineralType": {"title": "Mineral Type", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["Active", "Inactive", "Under Development"]}}, "required": ["siteName", "location", "mineralType", "operationalStatus"], "title": "MiningSite", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON schema for a mining equipment inventory, including properties such as equipmentID, type, manufacturer, model, and operationalStatus.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "model": {"title": "Model", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["Operational", "Maintenance", "Decommissioned"]}}, "required": ["equipmentID", "type", "manufacturer", "model", "operationalStatus"], "title": "MiningEquipmentInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for tracking mineral extraction volumes, including properties like date, siteID, mineralType, and extractedVolume.", "Schema": {"properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "siteID": {"title": "Site ID", "type": "string"}, "mineralType": {"title": "Mineral Type", "type": "string"}, "extractedVolume": {"title": "Extracted Volume", "type": "number"}}, "required": ["date", "siteID", "mineralType", "extractedVolume"], "title": "MineralExtractionVolume", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for a worker safety report, including properties such as reportID, siteID, incidentDate, incidentType, and actionsTaken.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "siteID": {"title": "Site ID", "type": "string"}, "incidentDate": {"title": "Incident Date", "type": "string", "format": "date"}, "incidentType": {"title": "Incident Type", "type": "string"}, "actionsTaken": {"title": "Actions Taken", "type": "string"}}, "required": ["reportID", "siteID", "incidentDate", "incidentType", "actionsTaken"], "title": "WorkerSafetyReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object representing environmental impact assessments, including properties like assessmentID, siteID, assessmentDate, impactDescription, and mitigationMeasures.", "Schema": {"properties": {"assessmentID": {"title": "Assessment ID", "type": "string"}, "siteID": {"title": "Site ID", "type": "string"}, "assessmentDate": {"title": "Assessment Date", "type": "string", "format": "date"}, "impactDescription": {"title": "Impact Description", "type": "string"}, "mitigationMeasures": {"title": "Mitigation Measures", "type": "string"}}, "required": ["assessmentID", "siteID", "assessmentDate", "impactDescription", "mitigationMeasures"], "title": "EnvironmentalImpactAssessment", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Create a JSON object for a new packaging product, including properties like productID, materialType, dimensions, weightCapacity, and recyclable status.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "materialType": {"title": "Material Type", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "object", "properties": {"length": {"title": "Length", "type": "number"}, "width": {"title": "Width", "type": "number"}, "height": {"title": "Height", "type": "number"}}, "required": ["length", "width", "height"]}, "weightCapacity": {"title": "Weight Capacity", "type": "number"}, "recyclable": {"title": "Recyclable Status", "type": "boolean"}}, "required": ["productID", "materialType", "dimensions", "weightCapacity", "recyclable"], "title": "PackagingProduct", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Develop a JSON schema for a packaging order, including properties such as orderID, customerDetails, orderedProducts, quantity, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["name", "address", "contactNumber"]}, "orderedProducts": {"title": "Ordered Products", "type": "array", "items": {"type": "string"}}, "quantity": {"title": "Quantity", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "customerDetails", "orderedProducts", "quantity", "deliveryDate"], "title": "PackagingOrder", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Construct a JSON object for tracking packaging inventory, including properties like inventoryID, productDetails, stockLevel, reorderThreshold, and supplierInfo.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}}, "required": ["productID", "productName"]}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}, "supplierInfo": {"title": "Supplier Info", "type": "object", "properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["supplierID", "supplierName", "contactNumber"]}}, "required": ["inventoryID", "productDetails", "stockLevel", "reorderThreshold", "supplierInfo"], "title": "PackagingInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Design a JSON object for a customer feedback on packaging, including properties such as feedbackID, customerID, productID, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "customerID", "productID", "rating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Generate a JSON object for a supplier audit report, including properties like auditID, supplierID, complianceStatus, issuesFound, and correctiveActions.", "Schema": {"properties": {"auditID": {"title": "Audit ID", "type": "string"}, "supplierID": {"title": "Supplier ID", "type": "string"}, "complianceStatus": {"title": "Compliance Status", "type": "boolean"}, "issuesFound": {"title": "Issues Found", "type": "array", "items": {"type": "string"}}, "correctiveActions": {"title": "Corrective Actions", "type": "array", "items": {"type": "string"}}}, "required": ["auditID", "supplierID", "complianceStatus"], "title": "SupplierAuditReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for storing gold producer details, including properties like producerName, mineLocations, annualOutput, and reserveEstimates.", "Schema": {"properties": {"producerName": {"title": "Producer Name", "type": "string"}, "mineLocations": {"title": "Mine Locations", "type": "array", "items": {"type": "string"}}, "annualOutput": {"title": "Annual Output", "type": "number"}, "reserveEstimates": {"title": "Reserve Estimates", "type": "number"}}, "required": ["producerName", "mineLocations", "annualOutput", "reserveEstimates"], "title": "GoldProducerDetails", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON schema for a mining operation report, including properties such as operationName, location, commoditiesExtracted, and environmentalImpact.", "Schema": {"properties": {"operationName": {"title": "Operation Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "commoditiesExtracted": {"title": "Commodities Extracted", "type": "array", "items": {"type": "string"}}, "environmentalImpact": {"title": "Environmental Impact", "type": "string"}}, "required": ["operationName", "location", "commoditiesExtracted", "environmentalImpact"], "title": "MiningOperationReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for tracking the financial performance of a mining company, including properties like companyName, fiscalYear, revenue, and netIncome.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "fiscalYear": {"title": "Fiscal Year", "type": "string"}, "revenue": {"title": "Revenue", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}}, "required": ["companyName", "fiscalYear", "revenue", "netIncome"], "title": "MiningCompanyFinancialPerformance", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for a mining equipment inventory, including properties such as equipmentId, type, status, and maintenanceSchedule.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "status": {"title": "Status", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["equipmentId", "type", "status", "maintenanceSchedule"], "title": "MiningEquipmentInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object representing the safety record of a mining site, including properties like siteName, incidentsReported, safetyViolations, and correctiveActionsTaken.", "Schema": {"properties": {"siteName": {"title": "Site Name", "type": "string"}, "incidentsReported": {"title": "Incidents Reported", "type": "number"}, "safetyViolations": {"title": "Safety Violations", "type": "number"}, "correctiveActionsTaken": {"title": "Corrective Actions Taken", "type": "array", "items": {"type": "string"}}}, "required": ["siteName", "incidentsReported", "safetyViolations", "correctiveActionsTaken"], "title": "MiningSiteSafetyRecord", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying gold price data, including properties like date, price per ounce, and market.", "Schema": {"properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "pricePerOunce": {"title": "Price Per Ounce", "type": "number"}, "market": {"title": "Market", "type": "string"}}, "required": ["date", "pricePerOunce", "market"], "title": "GoldPriceQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for submitting a gold mining report, including properties such as mineId, productionQuantity, and date.", "Schema": {"properties": {"mineId": {"title": "Mine ID", "type": "string"}, "productionQuantity": {"title": "Production Quantity", "type": "number"}, "date": {"title": "Date", "type": "string", "format": "date"}}, "required": ["mineId", "productionQuantity", "date"], "title": "GoldMiningReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for a gold inventory check, with properties like inventoryId, totalWeight, and lastAuditDate.", "Schema": {"properties": {"inventoryId": {"title": "Inventory ID", "type": "string"}, "totalWeight": {"title": "Total Weight", "type": "number"}, "lastAuditDate": {"title": "Last Audit Date", "type": "string", "format": "date"}}, "required": ["inventoryId", "totalWeight", "lastAuditDate"], "title": "GoldInventoryCheck", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for tracking gold shipment, including properties such as shipmentId, origin, destination, and estimatedArrival.", "Schema": {"properties": {"shipmentId": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["shipmentId", "origin", "destination", "estimatedArrival"], "title": "GoldShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object for a gold trade transaction, with properties like transactionId, buyerId, sellerId, quantity, and transactionDate.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "buyerId": {"title": "Buyer ID", "type": "string"}, "sellerId": {"title": "Seller ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date-time"}}, "required": ["transactionId", "buyerId", "sellerId", "quantity", "transactionDate"], "title": "GoldTradeTransaction", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Create a JSON object for storing information about a new plastic packaging product, including properties like productName, materialType, dimensions, and recyclability.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "materialType": {"title": "Material Type", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "object", "properties": {"length": {"title": "Length", "type": "number"}, "width": {"title": "Width", "type": "number"}, "height": {"title": "Height", "type": "number"}}, "required": ["length", "width", "height"]}, "recyclability": {"title": "Recyclability", "type": "boolean"}}, "required": ["productName", "materialType", "dimensions", "recyclability"], "title": "PlasticPackagingProduct", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Develop a JSON schema for a query to retrieve all paper packaging products that are biodegradable.", "Schema": {"properties": {"queryType": {"title": "Query Type", "type": "string", "const": "biodegradablePaperProducts"}, "materialType": {"title": "Material Type", "type": "string", "const": "paper"}, "biodegradable": {"title": "Biodegradable", "type": "boolean", "const": true}}, "required": ["queryType", "materialType", "biodegradable"], "title": "BiodegradablePaperPackagingQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Construct a JSON object for submitting a new container design, including properties like designName, volumeCapacity, materialComposition, and targetIndustry.", "Schema": {"properties": {"designName": {"title": "Design Name", "type": "string"}, "volumeCapacity": {"title": "Volume Capacity", "type": "number"}, "materialComposition": {"title": "Material Composition", "type": "array", "items": {"type": "string"}}, "targetIndustry": {"title": "Target Industry", "type": "string"}}, "required": ["designName", "volumeCapacity", "materialComposition", "targetIndustry"], "title": "NewContainerDesign", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Design a JSON object for tracking packaging material inventory, including properties such as materialID, quantityAvailable, reorderThreshold, and supplierDetails.", "Schema": {"properties": {"materialID": {"title": "Material ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["supplierName", "contactNumber"]}}, "required": ["materialID", "quantityAvailable", "reorderThreshold", "supplierDetails"], "title": "PackagingMaterialInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Containers & Packaging", "Task": "Generate a JSON object for a customer order of packaging materials, including properties like orderID, customerDetails, orderedProducts, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerName", "address"]}, "orderedProducts": {"title": "Ordered Products", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productName", "quantity"]}}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "customerDetails", "orderedProducts", "deliveryDate"], "title": "CustomerOrderPackagingMaterials", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for storing copper mining company details, including properties like companyName, location, productionVolume, and oreGrade.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "productionVolume": {"title": "Production Volume", "type": "number"}, "oreGrade": {"title": "Ore Grade", "type": "string"}}, "required": ["companyName", "location", "productionVolume", "oreGrade"], "title": "CopperMiningCompany", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON schema for a mining equipment inventory, including properties such as equipmentId, type, status, and maintenanceSchedule.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "status": {"title": "Status", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["equipmentId", "type", "status", "maintenanceSchedule"], "title": "MiningEquipmentInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for tracking ore extraction data, including properties like extractionDate, quantity, and method.", "Schema": {"properties": {"extractionDate": {"title": "Extraction Date", "type": "string", "format": "date"}, "quantity": {"title": "Quantity", "type": "number"}, "method": {"title": "Method", "type": "string"}}, "required": ["extractionDate", "quantity", "method"], "title": "OreExtractionData", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for a mine safety report, including properties such as reportId, incidentDetails, date, and correctiveActions.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "incidentDetails": {"title": "Incident Details", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "correctiveActions": {"title": "Corrective Actions", "type": "string"}}, "required": ["reportId", "incidentDetails", "date", "correctiveActions"], "title": "MineSafetyReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object representing environmental impact data for a mining site, including properties like siteId, pollutants, affectedAreas, and mitigationMeasures.", "Schema": {"properties": {"siteId": {"title": "Site ID", "type": "string"}, "pollutants": {"title": "Pollutants", "type": "array", "items": {"type": "string"}}, "affectedAreas": {"title": "Affected Areas", "type": "array", "items": {"type": "string"}}, "mitigationMeasures": {"title": "Mitigation Measures", "type": "string"}}, "required": ["siteId", "pollutants", "affectedAreas", "mitigationMeasures"], "title": "EnvironmentalImpactData", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying the current market price of silver, including properties like pricePerOunce, market, and timestamp.", "Schema": {"properties": {"pricePerOunce": {"title": "Price Per Ounce", "type": "number", "format": "float"}, "market": {"title": "Market", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["pricePerOunce", "market", "timestamp"], "title": "SilverMarketPrice", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for a mining equipment inventory, including properties like equipmentId, type, status, and lastMaintenanceDate.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "status": {"title": "Status", "type": "string"}, "lastMaintenanceDate": {"title": "Last Maintenance Date", "type": "string", "format": "date"}}, "required": ["equipmentId", "type", "status", "lastMaintenanceDate"], "title": "MiningEquipmentInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for tracking ore extraction, including properties like oreType, weight, extractionDate, and location.", "Schema": {"properties": {"oreType": {"title": "Ore Type", "type": "string"}, "weight": {"title": "Weight", "type": "number", "format": "float"}, "extractionDate": {"title": "Extraction Date", "type": "string", "format": "date"}, "location": {"title": "Location", "type": "string"}}, "required": ["oreType", "weight", "extractionDate", "location"], "title": "OreExtraction", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for a safety inspection report, including properties like reportId, inspectorName, inspectionDate, findings, and actionsTaken.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "findings": {"title": "Findings", "type": "string"}, "actionsTaken": {"title": "Actions Taken", "type": "string"}}, "required": ["reportId", "inspectorName", "inspectionDate", "findings", "actionsTaken"], "title": "SafetyInspectionReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object representing a shipment of metals, including properties like shipmentId, contents, weight, origin, destination, and shipmentDate.", "Schema": {"properties": {"shipmentId": {"title": "Shipment ID", "type": "string"}, "contents": {"title": "Contents", "type": "array", "items": {"type": "string"}}, "weight": {"title": "Weight", "type": "number", "format": "float"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "shipmentDate": {"title": "Shipment Date", "type": "string", "format": "date"}}, "required": ["shipmentId", "contents", "weight", "origin", "destination", "shipmentDate"], "title": "MetalShipment", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for storing information about steel production, including properties like productionDate, steelGrade, quantity, and productionFacility.", "Schema": {"properties": {"productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "steelGrade": {"title": "Steel Grade", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "productionFacility": {"title": "Production Facility", "type": "string"}}, "required": ["productionDate", "steelGrade", "quantity", "productionFacility"], "title": "SteelProduction", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON schema for tracking coking coal mining output, including properties such as mineLocation, extractionDate, coalGrade, and quantityExtracted.", "Schema": {"properties": {"mineLocation": {"title": "Mine Location", "type": "string"}, "extractionDate": {"title": "Extraction Date", "type": "string", "format": "date"}, "coalGrade": {"title": "Coal Grade", "type": "string"}, "quantityExtracted": {"title": "Quantity Extracted", "type": "number"}}, "required": ["mineLocation", "extractionDate", "coalGrade", "quantityExtracted"], "title": "CokingCoalMiningOutput", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for a metallurgical analysis report, including properties like reportId, sampleId, analysisDate, and chemicalComposition.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "sampleId": {"title": "Sample ID", "type": "string"}, "analysisDate": {"title": "Analysis Date", "type": "string", "format": "date"}, "chemicalComposition": {"title": "Chemical Composition", "type": "object", "additionalProperties": {"type": "number"}}}, "required": ["reportId", "sampleId", "analysisDate", "chemicalComposition"], "title": "MetallurgicalAnalysisReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for tracking shipments of mining products, including properties such as shipmentId, origin, destination, productType, and weight.", "Schema": {"properties": {"shipmentId": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "productType": {"title": "Product Type", "type": "string"}, "weight": {"title": "Weight", "type": "number"}}, "required": ["shipmentId", "origin", "destination", "productType", "weight"], "title": "MiningProductShipment", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object representing inventory levels for a metal warehouse, including properties like inventoryId, metalType, quantityAvailable, and lastUpdated.", "Schema": {"properties": {"inventoryId": {"title": "Inventory ID", "type": "string"}, "metalType": {"title": "Metal Type", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "number"}, "lastUpdated": {"title": "Last Updated", "type": "string", "format": "date-time"}}, "required": ["inventoryId", "metalType", "quantityAvailable", "lastUpdated"], "title": "MetalWarehouseInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying a database of companies mining platinum, including properties like companyName, location, and estimated reserves.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "estimatedReserves": {"title": "Estimated Reserves", "type": "number"}}, "required": ["companyName", "location", "estimatedReserves"], "title": "PlatinumMiningCompanyQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for an API call to retrieve the latest metal prices, including properties like metalType, pricePerOunce, and currency.", "Schema": {"properties": {"metalType": {"title": "Metal Type", "type": "string"}, "pricePerOunce": {"title": "Price Per Ounce", "type": "number"}, "currency": {"title": "Currency", "type": "string"}}, "required": ["metalType", "pricePerOunce", "currency"], "title": "MetalPricesQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object to submit data entry for a new mining site, including properties like siteName, coordinates, and operationalStatus.", "Schema": {"properties": {"siteName": {"title": "Site Name", "type": "string"}, "coordinates": {"title": "Coordinates", "type": "object", "properties": {"latitude": {"title": "Latitude", "type": "number"}, "longitude": {"title": "Longitude", "type": "number"}}, "required": ["latitude", "longitude"]}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["operational", "non-operational", "under construction"]}}, "required": ["siteName", "coordinates", "operationalStatus"], "title": "MiningSiteDataEntry", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for a report on mining safety incidents, including properties like incidentDate, incidentType, and affectedEmployees.", "Schema": {"properties": {"incidentDate": {"title": "Incident Date", "type": "string", "format": "date"}, "incidentType": {"title": "Incident Type", "type": "string"}, "affectedEmployees": {"title": "Affected Employees", "type": "array", "items": {"type": "string"}}}, "required": ["incidentDate", "incidentType", "affectedEmployees"], "title": "MiningSafetyIncidentReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object for tracking environmental impact assessments, including properties like assessmentId, siteName, and impactDetails.", "Schema": {"properties": {"assessmentId": {"title": "Assessment ID", "type": "string"}, "siteName": {"title": "Site Name", "type": "string"}, "impactDetails": {"title": "Impact Details", "type": "object", "properties": {"airQuality": {"title": "Air Quality", "type": "string"}, "waterPollution": {"title": "Water Pollution", "type": "string"}, "soilContamination": {"title": "Soil Contamination", "type": "string"}}, "required": ["airQuality", "waterPollution", "soilContamination"]}}, "required": ["assessmentId", "siteName", "impactDetails"], "title": "EnvironmentalImpactAssessment", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying companies primarily mining silver, including properties like companyName, location, and productionVolume.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "productionVolume": {"title": "Production Volume", "type": "number"}}, "required": ["companyName", "location", "productionVolume"], "title": "SilverMiningCompanyQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON schema for an API query to retrieve silver mining companies' stock information, including properties like tickerSymbol, currentPrice, and marketCap.", "Schema": {"properties": {"tickerSymbol": {"title": "Ticker Symbol", "type": "string"}, "currentPrice": {"title": "Current Price", "type": "number"}, "marketCap": {"title": "Market Capitalization", "type": "number"}}, "required": ["tickerSymbol", "currentPrice", "marketCap"], "title": "SilverMiningStockQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for a database entry of a silver mine's operational details, including properties like mineName, operationalStatus, and annualOutput.", "Schema": {"properties": {"mineName": {"title": "Mine Name", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string"}, "annualOutput": {"title": "Annual Output", "type": "number"}}, "required": ["mineName", "operationalStatus", "annualOutput"], "title": "SilverMineOperationalDetails", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for tracking environmental compliance of silver mining companies, including properties like companyName, complianceStatus, and violationReports.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "complianceStatus": {"title": "Compliance Status", "type": "string"}, "violationReports": {"title": "Violation Reports", "type": "array", "items": {"type": "string"}}}, "required": ["companyName", "complianceStatus"], "title": "EnvironmentalComplianceQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object for a user query to find silver mining companies with specific operational metrics, including properties like companyName, costPerOunce, and reserveEstimates.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "costPerOunce": {"title": "Cost Per Ounce", "type": "number"}, "reserveEstimates": {"title": "Reserve Estimates", "type": "number"}}, "required": ["companyName", "costPerOunce", "reserveEstimates"], "title": "OperationalMetricsQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying steel inventory levels, including properties like productID, quantity, location, and lastUpdated timestamp.", "Schema": {"properties": {"productID": {"title": "ProductID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "lastUpdated": {"format": "date-time", "title": "LastUpdated", "type": "string"}}, "required": ["productID", "quantity", "location", "lastUpdated"], "title": "SteelInventoryQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for submitting a new steel order, with properties such as orderID, customerID, productDetails, quantity, and orderDate.", "Schema": {"properties": {"orderID": {"title": "OrderID", "type": "string"}, "customerID": {"title": "CustomerID", "type": "string"}, "productDetails": {"title": "ProductDetails", "type": "object", "properties": {"productID": {"title": "ProductID", "type": "string"}, "productName": {"title": "ProductName", "type": "string"}, "specifications": {"title": "Specifications", "type": "string"}}, "required": ["productID", "productName", "specifications"]}, "quantity": {"title": "Quantity", "type": "integer"}, "orderDate": {"format": "date", "title": "OrderDate", "type": "string"}}, "required": ["orderID", "customerID", "productDetails", "quantity", "orderDate"], "title": "NewSteelOrder", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for a steel production report, including properties like reportID, productionDate, producedQuantity, and defectsCount.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "productionDate": {"format": "date", "title": "ProductionDate", "type": "string"}, "producedQuantity": {"title": "ProducedQuantity", "type": "integer"}, "defectsCount": {"title": "DefectsCount", "type": "integer"}}, "required": ["reportID", "productionDate", "producedQuantity", "defectsCount"], "title": "SteelProductionReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for tracking steel shipment status, with properties such as shipmentID, origin, destination, status, and estimatedArrival.", "Schema": {"properties": {"shipmentID": {"title": "ShipmentID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "status": {"title": "Status", "type": "string"}, "estimatedArrival": {"format": "date-time", "title": "EstimatedArrival", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "status", "estimatedArrival"], "title": "SteelShipmentStatus", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object for a steel quality control check, including properties like checkID, inspectorID, dateChecked, findings, and actionRequired.", "Schema": {"properties": {"checkID": {"title": "CheckID", "type": "string"}, "inspectorID": {"title": "InspectorID", "type": "string"}, "dateChecked": {"format": "date", "title": "DateChecked", "type": "string"}, "findings": {"title": "Findings", "type": "string"}, "actionRequired": {"title": "ActionRequired", "type": "boolean"}}, "required": ["checkID", "inspectorID", "dateChecked", "findings", "actionRequired"], "title": "SteelQualityControlCheck", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Create a JSON object for querying available precious metals inventory, including properties like metalType, weight, purity, and location.", "Schema": {"properties": {"metalType": {"title": "Metal Type", "type": "string", "enum": ["Gold", "Silver", "Platinum", "Palladium"]}, "weight": {"title": "Weight", "type": "number"}, "purity": {"title": "Purity", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["metalType", "weight", "purity", "location"], "title": "Precious Metals Inventory Query", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Develop a JSON object for tracking mineral extraction data, with properties such as mineralType, extractionVolume, extractionDate, and mineLocation.", "Schema": {"properties": {"mineralType": {"title": "Mineral Type", "type": "string"}, "extractionVolume": {"title": "Extraction Volume", "type": "number"}, "extractionDate": {"format": "date", "title": "Extraction Date", "type": "string"}, "mineLocation": {"title": "Mine Location", "type": "string"}}, "required": ["mineralType", "extractionVolume", "extractionDate", "mineLocation"], "title": "Mineral Extraction Data", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Construct a JSON object for a mining equipment inventory, including properties like equipmentName, modelNumber, status, and maintenanceSchedule.", "Schema": {"properties": {"equipmentName": {"title": "Equipment Name", "type": "string"}, "modelNumber": {"title": "Model Number", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Operational", "Under Maintenance", "Decommissioned"]}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["equipmentName", "modelNumber", "status", "maintenanceSchedule"], "title": "Mining Equipment Inventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Design a JSON object for reporting environmental impact assessments, with properties such as assessmentID, reportDate, findings, and recommendedActions.", "Schema": {"properties": {"assessmentID": {"title": "Assessment ID", "type": "string"}, "reportDate": {"format": "date", "title": "Report Date", "type": "string"}, "findings": {"title": "Findings", "type": "string"}, "recommendedActions": {"title": "Recommended Actions", "type": "string"}}, "required": ["assessmentID", "reportDate", "findings", "recommendedActions"], "title": "Environmental Impact Assessment Report", "type": "object"}}
{"Category": "Materials", "SubCategory": "Metals & Mining", "Task": "Generate a JSON object for managing ore processing data, including properties like oreType, processedVolume, processingDate, and processingFacility.", "Schema": {"properties": {"oreType": {"title": "Ore Type", "type": "string"}, "processedVolume": {"title": "Processed Volume", "type": "number"}, "processingDate": {"format": "date", "title": "Processing Date", "type": "string"}, "processingFacility": {"title": "Processing Facility", "type": "string"}}, "required": ["oreType", "processedVolume", "processingDate", "processingFacility"], "title": "Ore Processing Data", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Create a JSON object for querying available inventory of forest products, including properties like productType, quantity, and location.", "Schema": {"properties": {"productType": {"title": "Product Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}}, "required": ["productType", "quantity", "location"], "title": "InventoryQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Develop a JSON object for a new shipment entry of paper products, including properties such as shipmentID, productDetails, and expectedDeliveryDate.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "productDetails": {"title": "Product Details", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productName", "quantity"]}}, "expectedDeliveryDate": {"title": "Expected Delivery Date", "type": "string", "format": "date"}}, "required": ["shipmentID", "productDetails", "expectedDeliveryDate"], "title": "ShipmentEntry", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Construct a JSON object for tracking the sustainability metrics of forest products, including properties like productID, carbonFootprint, and certificationStatus.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "carbonFootprint": {"title": "Carbon Footprint", "type": "number"}, "certificationStatus": {"title": "Certification Status", "type": "string"}}, "required": ["productID", "carbonFootprint", "certificationStatus"], "title": "SustainabilityMetrics", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Design a JSON object for a customer order of paper products, including properties such as orderID, customerDetails, productsOrdered, and deliveryAddress.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["customerName", "contactNumber"]}, "productsOrdered": {"title": "Products Ordered", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productName", "quantity"]}}, "deliveryAddress": {"title": "Delivery Address", "type": "string"}}, "required": ["orderID", "customerDetails", "productsOrdered", "deliveryAddress"], "title": "CustomerOrder", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Generate a JSON object for reporting deforestation impact, including properties like region, totalAreaAffected, and reforestationPlans.", "Schema": {"properties": {"region": {"title": "Region", "type": "string"}, "totalAreaAffected": {"title": "Total Area Affected", "type": "number"}, "reforestationPlans": {"title": "Reforestation Plans", "type": "boolean"}}, "required": ["region", "totalAreaAffected", "reforestationPlans"], "title": "DeforestationImpactReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Create a JSON object for a timber product entry, including properties like productName, dimensions, woodType, and price.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "string"}, "woodType": {"title": "Wood Type", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["productName", "dimensions", "woodType", "price"], "title": "TimberProductEntry", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Develop a JSON schema for a wood product inventory query, including properties like productID, quantityAvailable, and locationID.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "locationID": {"title": "Location ID", "type": "string"}}, "required": ["productID", "quantityAvailable", "locationID"], "title": "WoodProductInventoryQuery", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Construct a JSON object for tracking lumber shipments, including properties such as shipmentID, origin, destination, and estimatedArrival.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "format": "date-time", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "estimatedArrival"], "title": "LumberShipmentTracking", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Design a JSON object for a paper product catalog entry, including properties like catalogID, paperType, size, weight, and pricePerUnit.", "Schema": {"properties": {"catalogID": {"title": "Catalog ID", "type": "string"}, "paperType": {"title": "Paper Type", "type": "string"}, "size": {"title": "Size", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "pricePerUnit": {"title": "Price Per Unit", "type": "number"}}, "required": ["catalogID", "paperType", "size", "weight", "pricePerUnit"], "title": "PaperProductCatalogEntry", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Generate a JSON object for a forest management plan, including properties like planID, areaCovered, speciesManaged, and sustainabilityPractices.", "Schema": {"properties": {"planID": {"title": "Plan ID", "type": "string"}, "areaCovered": {"title": "Area Covered", "type": "number"}, "speciesManaged": {"title": "Species Managed", "type": "array", "items": {"type": "string"}}, "sustainabilityPractices": {"title": "Sustainability Practices", "type": "array", "items": {"type": "string"}}}, "required": ["planID", "areaCovered", "speciesManaged", "sustainabilityPractices"], "title": "ForestManagementPlan", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Create a JSON object for storing information about different paper grades produced by a manufacturer, including properties like gradeName, weight, brightness, and intended use.", "Schema": {"properties": {"gradeName": {"title": "Grade Name", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "brightness": {"title": "Brightness", "type": "number"}, "intendedUse": {"title": "Intended Use", "type": "string"}}, "required": ["gradeName", "weight", "brightness", "intendedUse"], "title": "PaperGrade", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Develop a JSON schema for representing a forest inventory, including properties such as location, treeSpecies, ageRange, and estimated volume.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "treeSpecies": {"title": "Tree Species", "type": "string"}, "ageRange": {"title": "Age Range", "type": "string"}, "estimatedVolume": {"title": "Estimated Volume", "type": "number"}}, "required": ["location", "treeSpecies", "ageRange", "estimatedVolume"], "title": "ForestInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Construct a JSON object for tracking the paper production process, including properties like productionDate, machineId, productionLine, and qualityMetrics.", "Schema": {"properties": {"productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "machineId": {"title": "Machine ID", "type": "string"}, "productionLine": {"title": "Production Line", "type": "string"}, "qualityMetrics": {"title": "Quality Metrics", "type": "object", "properties": {"moistureLevel": {"title": "Moisture Level", "type": "number"}, "thickness": {"title": "Thickness", "type": "number"}}}}, "required": ["productionDate", "machineId", "productionLine", "qualityMetrics"], "title": "PaperProduction", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Design a JSON object for a paper product inventory system, including properties such as productId, productName, stockQuantity, and reorderLevel.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "stockQuantity": {"title": "Stock Quantity", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}}, "required": ["productId", "productName", "stockQuantity", "reorderLevel"], "title": "PaperProductInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Generate a JSON object representing the environmental impact of paper production, including properties like carbonFootprint, waterUsage, deforestationImpact, and recyclingRate.", "Schema": {"properties": {"carbonFootprint": {"title": "Carbon Footprint", "type": "number"}, "waterUsage": {"title": "Water Usage", "type": "number"}, "deforestationImpact": {"title": "Deforestation Impact", "type": "string"}, "recyclingRate": {"title": "Recycling Rate", "type": "number"}}, "required": ["carbonFootprint", "waterUsage", "deforestationImpact", "recyclingRate"], "title": "EnvironmentalImpact", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Create a JSON object for a paper product inventory, including properties like productID, productName, quantity, and supplier details.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierName", "contact"]}}, "required": ["productID", "productName", "quantity", "supplierDetails"], "title": "PaperProductInventory", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Develop a JSON object for tracking paper production batches, with properties such as batchID, productionDate, qualityGrade, and machineID.", "Schema": {"properties": {"batchID": {"title": "Batch ID", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "qualityGrade": {"title": "Quality Grade", "type": "string"}, "machineID": {"title": "Machine ID", "type": "string"}}, "required": ["batchID", "productionDate", "qualityGrade", "machineID"], "title": "PaperProductionBatch", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Construct a JSON object for a deforestation impact report, including properties like reportID, affectedArea, speciesImpacted, and mitigationPlans.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "affectedArea": {"title": "Affected Area", "type": "number"}, "speciesImpacted": {"title": "Species Impacted", "type": "array", "items": {"type": "string"}}, "mitigationPlans": {"title": "Mitigation Plans", "type": "array", "items": {"type": "string"}}}, "required": ["reportID", "affectedArea", "speciesImpacted", "mitigationPlans"], "title": "DeforestationImpactReport", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Design a JSON object for paper product order details, including properties like orderID, customerDetails, orderedProducts, and deliveryStatus.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerName", "address"]}, "orderedProducts": {"title": "Ordered Products", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productName", "quantity"]}}, "deliveryStatus": {"title": "Delivery Status", "type": "string"}}, "required": ["orderID", "customerDetails", "orderedProducts", "deliveryStatus"], "title": "PaperProductOrderDetails", "type": "object"}}
{"Category": "Materials", "SubCategory": "Paper & Forest Products", "Task": "Generate a JSON object for a paper mill's environmental compliance report, including properties like reportID, emissionsData, wasteManagement, and regulatoryBody.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "emissionsData": {"title": "Emissions Data", "type": "object", "properties": {"CO2": {"title": "CO2 Emissions", "type": "number"}, "SO2": {"title": "SO2 Emissions", "type": "number"}}, "required": ["CO2", "SO2"]}, "wasteManagement": {"title": "Waste Management", "type": "string"}, "regulatoryBody": {"title": "Regulatory Body", "type": "string"}}, "required": ["reportID", "emissionsData", "wasteManagement", "regulatoryBody"], "title": "EnvironmentalComplianceReport", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Create a JSON object for storing aircraft maintenance records, including properties like aircraftModel, maintenanceDate, technician, and serviceDetails.", "Schema": {"properties": {"aircraftModel": {"title": "Aircraft Model", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "technician": {"title": "Technician", "type": "string"}, "serviceDetails": {"title": "Service Details", "type": "string"}}, "required": ["aircraftModel", "maintenanceDate", "technician", "serviceDetails"], "title": "AircraftMaintenanceRecord", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Develop a JSON schema for a flight log entry, capturing details such as flightNumber, departureAirport, arrivalAirport, and flightDuration.", "Schema": {"properties": {"flightNumber": {"title": "Flight Number", "type": "string"}, "departureAirport": {"title": "Departure Airport", "type": "string"}, "arrivalAirport": {"title": "Arrival Airport", "type": "string"}, "flightDuration": {"title": "Flight Duration", "type": "string"}}, "required": ["flightNumber", "departureAirport", "arrivalAirport", "flightDuration"], "title": "FlightLogEntry", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Construct a JSON object for tracking defense equipment inventory, including properties like equipmentName, quantity, location, and status.", "Schema": {"properties": {"equipmentName": {"title": "Equipment Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "status": {"title": "Status", "type": "string"}}, "required": ["equipmentName", "quantity", "location", "status"], "title": "DefenseEquipmentInventory", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Design a JSON object for a military operation plan, with properties such as operationName, objectives, resourcesAllocated, and personnelInvolved.", "Schema": {"properties": {"operationName": {"title": "Operation Name", "type": "string"}, "objectives": {"title": "Objectives", "type": "string"}, "resourcesAllocated": {"title": "Resources Allocated", "type": "string"}, "personnelInvolved": {"title": "Personnel Involved", "type": "array", "items": {"type": "string"}}}, "required": ["operationName", "objectives", "resourcesAllocated", "personnelInvolved"], "title": "MilitaryOperationPlan", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Generate a JSON object representing a satellite launch mission, including properties like missionName, launchDate, launchSite, and payloadDetails.", "Schema": {"properties": {"missionName": {"title": "Mission Name", "type": "string"}, "launchDate": {"title": "Launch Date", "type": "string", "format": "date-time"}, "launchSite": {"title": "Launch Site", "type": "string"}, "payloadDetails": {"title": "Payload Details", "type": "string"}}, "required": ["missionName", "launchDate", "launchSite", "payloadDetails"], "title": "SatelliteLaunchMission", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Create a JSON object for storing construction project details, including project ID, name, location, start date, and estimated completion date.", "Schema": {"properties": {"projectId": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "estimatedCompletionDate": {"format": "date", "title": "Estimated Completion Date", "type": "string"}}, "required": ["projectId", "projectName", "location", "startDate", "estimatedCompletionDate"], "title": "ConstructionProjectDetails", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Develop a JSON object for tracking equipment inventory, including equipment ID, name, status, location, and last maintenance date.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "equipmentName": {"title": "Equipment Name", "type": "string"}, "status": {"title": "Status", "type": "string"}, "location": {"title": "Location", "type": "string"}, "lastMaintenanceDate": {"format": "date", "title": "Last Maintenance Date", "type": "string"}}, "required": ["equipmentId", "equipmentName", "status", "location", "lastMaintenanceDate"], "title": "EquipmentInventory", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Construct a JSON object for a worker profile, including worker ID, name, role, certifications, and hours worked.", "Schema": {"properties": {"workerId": {"title": "Worker ID", "type": "string"}, "workerName": {"title": "Worker Name", "type": "string"}, "role": {"title": "Role", "type": "string"}, "certifications": {"items": {"type": "string"}, "title": "Certifications", "type": "array"}, "hoursWorked": {"title": "Hours Worked", "type": "number"}}, "required": ["workerId", "workerName", "role", "certifications", "hoursWorked"], "title": "WorkerProfile", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Design a JSON object for logging safety incidents, including incident ID, date, type, affected individuals, and corrective actions taken.", "Schema": {"properties": {"incidentId": {"title": "Incident ID", "type": "string"}, "date": {"format": "date-time", "title": "Date", "type": "string"}, "type": {"title": "Type", "type": "string"}, "affectedIndividuals": {"items": {"type": "string"}, "title": "Affected Individuals", "type": "array"}, "correctiveActions": {"items": {"type": "string"}, "title": "Corrective Actions", "type": "array"}}, "required": ["incidentId", "date", "type", "affectedIndividuals", "correctiveActions"], "title": "SafetyIncidentLog", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Generate a JSON object for a bid proposal, including proposal ID, project ID, estimated costs, timeline, and resources required.", "Schema": {"properties": {"proposalId": {"title": "Proposal ID", "type": "string"}, "projectId": {"title": "Project ID", "type": "string"}, "estimatedCosts": {"title": "Estimated Costs", "type": "number"}, "timeline": {"title": "Timeline", "type": "string"}, "resourcesRequired": {"items": {"type": "string"}, "title": "Resources Required", "type": "array"}}, "required": ["proposalId", "projectId", "estimatedCosts", "timeline", "resourcesRequired"], "title": "BidProposal", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Create a JSON object for querying a database of building components, including properties like productID, productName, materialType, and manufacturer.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "materialType": {"title": "Material Type", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}}, "required": ["productID", "productName", "materialType", "manufacturer"], "title": "BuildingComponentQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Develop a JSON object for an API call to retrieve home improvement product details, with properties such as sku, category, price, and availability.", "Schema": {"properties": {"sku": {"title": "SKU", "type": "string"}, "category": {"title": "Category", "type": "string"}, "price": {"title": "Price", "type": "number"}, "availability": {"title": "Availability", "type": "boolean"}}, "required": ["sku", "category", "price", "availability"], "title": "ProductDetailsAPI", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Construct a JSON object for submitting a warranty claim on a building product, including properties like warrantyID, customerName, productSerialNumber, and issueDescription.", "Schema": {"properties": {"warrantyID": {"title": "Warranty ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productSerialNumber": {"title": "Product Serial Number", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}}, "required": ["warrantyID", "customerName", "productSerialNumber", "issueDescription"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Design a JSON object for a product inventory update, with fields such as inventoryID, productID, quantityOnHand, and reorderThreshold.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "quantityOnHand": {"title": "Quantity on Hand", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["inventoryID", "productID", "quantityOnHand", "reorderThreshold"], "title": "InventoryUpdate", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Generate a JSON object for a customer feedback form on a building product, including attributes like feedbackID, customerID, productID, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "customerID", "productID", "rating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Create a JSON object for storing construction project details, including project name, location, start date, end date, and budget.", "Schema": {"properties": {"projectName": {"title": "Project Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}, "budget": {"title": "Budget", "type": "number"}}, "required": ["projectName", "location", "startDate", "endDate", "budget"], "title": "ConstructionProjectDetails", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Develop a JSON schema for a construction equipment inventory, including equipment ID, name, type, status, and maintenance schedule.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "status": {"title": "Status", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["equipmentID", "name", "type", "status", "maintenanceSchedule"], "title": "ConstructionEquipmentInventory", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Construct a JSON object for tracking employee certifications and safety training, including employee ID, name, certification details, and training dates.", "Schema": {"properties": {"employeeID": {"title": "Employee ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "certificationDetails": {"items": {"type": "object", "properties": {"certificationName": {"title": "Certification Name", "type": "string"}, "issuedBy": {"title": "Issued By", "type": "string"}, "issueDate": {"format": "date", "title": "Issue Date", "type": "string"}, "expiryDate": {"format": "date", "title": "Expiry Date", "type": "string"}}, "required": ["certificationName", "issuedBy", "issueDate", "expiryDate"]}, "title": "Certification Details", "type": "array"}, "trainingDates": {"items": {"format": "date", "type": "string"}, "title": "Training Dates", "type": "array"}}, "required": ["employeeID", "name", "certificationDetails", "trainingDates"], "title": "EmployeeCertificationsAndSafetyTraining", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Design a JSON object for a construction site inspection report, including report ID, site ID, inspection date, inspector name, and findings.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "siteID": {"title": "Site ID", "type": "string"}, "inspectionDate": {"format": "date", "title": "Inspection Date", "type": "string"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "findings": {"items": {"type": "string"}, "title": "Findings", "type": "array"}}, "required": ["reportID", "siteID", "inspectionDate", "inspectorName", "findings"], "title": "ConstructionSiteInspectionReport", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Construction & Engineering", "Task": "Generate a JSON object for construction bid proposals, including proposal ID, project ID, submitter details, proposed cost, and timeline.", "Schema": {"properties": {"proposalID": {"title": "Proposal ID", "type": "string"}, "projectID": {"title": "Project ID", "type": "string"}, "submitterDetails": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "company": {"title": "Company", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["name", "company", "contactInfo"]}, "proposedCost": {"title": "Proposed Cost", "type": "number"}, "timeline": {"title": "Timeline", "type": "string"}}, "required": ["proposalID", "projectID", "submitterDetails", "proposedCost", "timeline"], "title": "ConstructionBidProposals", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Create a JSON object for querying a database of aerospace components, including properties like componentID, componentName, manufacturer, and specifications.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"dimensions": {"title": "Dimensions", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "material": {"title": "Material", "type": "string"}}, "required": ["dimensions", "weight", "material"]}}, "required": ["componentID", "componentName", "manufacturer", "specifications"], "title": "AerospaceComponentQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Develop a JSON object for storing information about defense contracts, including properties like contractID, governmentAgency, contractor, contractValue, and startDate.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "governmentAgency": {"title": "Government Agency", "type": "string"}, "contractor": {"title": "Contractor", "type": "string"}, "contractValue": {"title": "Contract Value", "type": "number"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}}, "required": ["contractID", "governmentAgency", "contractor", "contractValue", "startDate"], "title": "DefenseContract", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Construct a JSON object for an API call to retrieve a list of military equipment, including properties like equipmentID, equipmentType, inServiceDate, and countryOfOrigin.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "equipmentType": {"title": "Equipment Type", "type": "string"}, "inServiceDate": {"title": "In Service Date", "type": "string", "format": "date"}, "countryOfOrigin": {"title": "Country of Origin", "type": "string"}}, "required": ["equipmentID", "equipmentType", "inServiceDate", "countryOfOrigin"], "title": "MilitaryEquipmentQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Design a JSON object for tracking space mission data, including properties like missionID, missionName, launchDate, missionStatus, and crewDetails.", "Schema": {"properties": {"missionID": {"title": "Mission ID", "type": "string"}, "missionName": {"title": "Mission Name", "type": "string"}, "launchDate": {"title": "Launch Date", "type": "string", "format": "date-time"}, "missionStatus": {"title": "Mission Status", "type": "string"}, "crewDetails": {"title": "Crew Details", "type": "array", "items": {"type": "object", "properties": {"crewMemberID": {"title": "Crew Member ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "role": {"title": "Role", "type": "string"}}, "required": ["crewMemberID", "name", "role"]}}}, "required": ["missionID", "missionName", "launchDate", "missionStatus", "crewDetails"], "title": "SpaceMissionData", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Aerospace & Defense", "Task": "Generate a JSON object for a database entry of an aerospace R&D project, including properties like projectID, projectName, budget, projectLead, and estimatedCompletion.", "Schema": {"properties": {"projectID": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "budget": {"title": "Budget", "type": "number"}, "projectLead": {"title": "Project Lead", "type": "string"}, "estimatedCompletion": {"title": "Estimated Completion", "type": "string", "format": "date"}}, "required": ["projectID", "projectName", "budget", "projectLead", "estimatedCompletion"], "title": "AerospaceResearchProject", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Create a JSON object for storing power turbine specifications, including properties like modelNumber, capacity, turbineType, and associated ISO standards.", "Schema": {"properties": {"modelNumber": {"title": "Model Number", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "turbineType": {"title": "Turbine Type", "type": "string"}, "isoStandards": {"items": {"type": "string"}, "title": "ISO Standards", "type": "array"}}, "required": ["modelNumber", "capacity", "turbineType", "isoStandards"], "title": "Power Turbine Specifications", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Develop a JSON schema for an API query to retrieve heavy electrical machinery details, including properties such as serialNumber, manufacturer, operationalStatus, and maintenanceSchedule.", "Schema": {"properties": {"serialNumber": {"title": "Serial Number", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["serialNumber", "manufacturer", "operationalStatus", "maintenanceSchedule"], "title": "Heavy Electrical Machinery Details", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Construct a JSON object for logging large electrical system installations, including properties like installationDate, systemType, location, and installerDetails.", "Schema": {"properties": {"installationDate": {"format": "date", "title": "Installation Date", "type": "string"}, "systemType": {"title": "System Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "installerDetails": {"properties": {"installerName": {"title": "Installer Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "title": "Installer Details", "type": "object"}}, "required": ["installationDate", "systemType", "location", "installerDetails"], "title": "Electrical System Installation Log", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Design a JSON object for tracking electrical equipment repair tickets, including properties such as ticketNumber, issueDescription, reportedBy, assignedTechnician, and resolutionStatus.", "Schema": {"properties": {"ticketNumber": {"title": "Ticket Number", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "reportedBy": {"title": "Reported By", "type": "string"}, "assignedTechnician": {"title": "Assigned Technician", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["ticketNumber", "issueDescription", "reportedBy", "assignedTechnician", "resolutionStatus"], "title": "Electrical Equipment Repair Ticket", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Generate a JSON object for electrical system compliance checks, including properties like systemId, inspectionDate, complianceStatus, and notes from the inspector.", "Schema": {"properties": {"systemId": {"title": "System ID", "type": "string"}, "inspectionDate": {"format": "date", "title": "Inspection Date", "type": "string"}, "complianceStatus": {"title": "Compliance Status", "type": "string"}, "notes": {"title": "Inspector Notes", "type": "string"}}, "required": ["systemId", "inspectionDate", "complianceStatus", "notes"], "title": "Electrical System Compliance Check", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Create a JSON object for storing heavy duty truck specifications, including properties like model, engineType, horsepower, and VIN.", "Schema": {"properties": {"model": {"title": "Model", "type": "string"}, "engineType": {"title": "EngineType", "type": "string"}, "horsepower": {"title": "Horsepower", "type": "integer"}, "VIN": {"title": "VIN", "type": "string", "pattern": "^[0-9A-HJ-NPR-Z]{17}$"}}, "required": ["model", "engineType", "horsepower", "VIN"], "title": "HeavyDutyTruckSpecs", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Develop a JSON schema for an API query to retrieve rolling machinery inventory, including properties like inventoryId, machineryType, and availabilityStatus.", "Schema": {"properties": {"inventoryId": {"title": "InventoryId", "type": "string"}, "machineryType": {"title": "MachineryType", "type": "string"}, "availabilityStatus": {"title": "AvailabilityStatus", "type": "boolean"}}, "required": ["inventoryId", "machineryType", "availabilityStatus"], "title": "RollingMachineryInventoryQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Construct a JSON object representing construction equipment rental information, including properties like equipmentId, rentalPeriod, and rentalRate.", "Schema": {"properties": {"equipmentId": {"title": "EquipmentId", "type": "string"}, "rentalPeriod": {"title": "RentalPeriod", "type": "string", "pattern": "^[0-9]+(D|W|M|Y)$"}, "rentalRate": {"title": "RentalRate", "type": "number"}}, "required": ["equipmentId", "rentalPeriod", "rentalRate"], "title": "ConstructionEquipmentRental", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Design a JSON object for a non-military shipbuilding project, including properties such as projectId, shipType, estimatedCompletionDate, and budget.", "Schema": {"properties": {"projectId": {"title": "ProjectId", "type": "string"}, "shipType": {"title": "ShipType", "type": "string"}, "estimatedCompletionDate": {"title": "EstimatedCompletionDate", "type": "string", "format": "date"}, "budget": {"title": "Budget", "type": "number"}}, "required": ["projectId", "shipType", "estimatedCompletionDate", "budget"], "title": "ShipbuildingProject", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Generate a JSON object representing a parts manufacturer's product catalog, including properties like partNumber, description, compatibility, and price.", "Schema": {"properties": {"partNumber": {"title": "PartNumber", "type": "string"}, "description": {"title": "Description", "type": "string"}, "compatibility": {"title": "Compatibility", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["partNumber", "description", "compatibility", "price"], "title": "ProductCatalog", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Create a JSON object for storing electrical component specifications, including properties like componentID, componentName, voltageRating, and manufacturer details.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "voltageRating": {"title": "Voltage Rating", "type": "string"}, "manufacturerDetails": {"title": "Manufacturer Details", "type": "object", "properties": {"manufacturerName": {"title": "Manufacturer Name", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "string"}}, "required": ["manufacturerName", "contactInfo"]}}, "required": ["componentID", "componentName", "voltageRating", "manufacturerDetails"], "title": "ElectricalComponentSpecs", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Develop a JSON object for an API query to retrieve a list of electrical equipment, including filters for equipmentType, brand, and required certifications.", "Schema": {"properties": {"equipmentType": {"title": "Equipment Type", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "requiredCertifications": {"title": "Required Certifications", "type": "array", "items": {"type": "string"}}}, "required": ["equipmentType", "brand", "requiredCertifications"], "title": "EquipmentQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Construct a JSON object for logging equipment maintenance records, including properties like recordID, equipmentID, maintenanceDate, and technician details.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "technicianDetails": {"title": "Technician Details", "type": "object", "properties": {"technicianName": {"title": "Technician Name", "type": "string"}, "technicianID": {"title": "Technician ID", "type": "string"}}, "required": ["technicianName", "technicianID"]}}, "required": ["recordID", "equipmentID", "maintenanceDate", "technicianDetails"], "title": "MaintenanceRecord", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Design a JSON object for tracking inventory levels of electrical components, including properties like componentID, currentStock, reorderLevel, and supplier information.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "currentStock": {"title": "Current Stock", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}, "supplierInformation": {"title": "Supplier Information", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "string"}}, "required": ["supplierName", "contactDetails"]}}, "required": ["componentID", "currentStock", "reorderLevel", "supplierInformation"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Generate a JSON object for a new product registration, including properties like productID, productName, specifications, and compliance status.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"dimension": {"title": "Dimension", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "material": {"title": "Material", "type": "string"}}, "required": ["dimension", "weight", "material"]}, "complianceStatus": {"title": "Compliance Status", "type": "boolean"}}, "required": ["productID", "productName", "specifications", "complianceStatus"], "title": "ProductRegistration", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Create a JSON object for storing information about a diversified industrial company, including properties like companyName, sectors, majorityRevenue, and operationalInterest.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "sectors": {"title": "Sectors", "type": "array", "items": {"type": "string"}}, "majorityRevenue": {"title": "Majority Revenue", "type": "boolean"}, "operationalInterest": {"title": "Operational Interest", "type": "string"}}, "required": ["companyName", "sectors", "majorityRevenue", "operationalInterest"], "title": "DiversifiedIndustrialCompany", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Develop a JSON schema for representing the financial summary of an industrial conglomerate, including properties such as fiscalYear, totalRevenue, netIncome, and sectorBreakdown.", "Schema": {"properties": {"fiscalYear": {"title": "Fiscal Year", "type": "integer"}, "totalRevenue": {"title": "Total Revenue", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}, "sectorBreakdown": {"title": "Sector Breakdown", "type": "array", "items": {"type": "object", "properties": {"sectorName": {"title": "Sector Name", "type": "string"}, "revenue": {"title": "Revenue", "type": "number"}}, "required": ["sectorName", "revenue"]}}}, "required": ["fiscalYear", "totalRevenue", "netIncome", "sectorBreakdown"], "title": "FinancialSummary", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Construct a JSON object representing a subsidiary company, including properties like subsidiaryName, parentCompanyName, industry, and controllingStake.", "Schema": {"properties": {"subsidiaryName": {"title": "Subsidiary Name", "type": "string"}, "parentCompanyName": {"title": "Parent Company Name", "type": "string"}, "industry": {"title": "Industry", "type": "string"}, "controllingStake": {"title": "Controlling Stake", "type": "boolean"}}, "required": ["subsidiaryName", "parentCompanyName", "industry", "controllingStake"], "title": "SubsidiaryCompany", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Design a JSON object for an investment profile of an industrial conglomerate, including properties such as investmentId, investmentDate, amount, and expectedROI.", "Schema": {"properties": {"investmentId": {"title": "Investment ID", "type": "string"}, "investmentDate": {"title": "Investment Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "expectedROI": {"title": "Expected ROI", "type": "number"}}, "required": ["investmentId", "investmentDate", "amount", "expectedROI"], "title": "InvestmentProfile", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Generate a JSON object representing the R&D project details of an industrial conglomerate, including properties like projectId, projectName, budget, and projectLead.", "Schema": {"properties": {"projectId": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "budget": {"title": "Budget", "type": "number"}, "projectLead": {"title": "Project Lead", "type": "string"}}, "required": ["projectId", "projectName", "budget", "projectLead"], "title": "RDProjectDetails", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Create a JSON object for querying available building materials, with properties like materialType, quantityAvailable, and supplierID.", "Schema": {"properties": {"materialType": {"title": "Material Type", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["materialType", "quantityAvailable", "supplierID"], "title": "AvailableBuildingMaterialsQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Develop a JSON object for submitting a purchase order, including properties such as orderID, productDetails, quantity, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "productDetails": {"title": "Product Details", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "productCode": {"title": "Product Code", "type": "string"}}, "required": ["productName", "productCode"]}}, "quantity": {"title": "Quantity", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "productDetails", "quantity", "deliveryDate"], "title": "PurchaseOrderSubmission", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Construct a JSON object for a product inventory update, with fields such as productID, newQuantity, and lastUpdatedTimestamp.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "newQuantity": {"title": "New Quantity", "type": "integer"}, "lastUpdatedTimestamp": {"title": "Last Updated Timestamp", "type": "string", "format": "date-time"}}, "required": ["productID", "newQuantity", "lastUpdatedTimestamp"], "title": "ProductInventoryUpdate", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Design a JSON object for tracking shipment status, including properties like shipmentID, currentLocation, status, and estimatedArrival.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "currentLocation": {"title": "Current Location", "type": "string"}, "status": {"title": "Status", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["shipmentID", "currentLocation", "status", "estimatedArrival"], "title": "ShipmentStatusTracking", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Building Products", "Task": "Generate a JSON object for a customer feedback form, with fields such as feedbackID, customerName, productID, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "customerName", "productID", "rating"], "title": "CustomerFeedbackForm", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Create a JSON object for storing heavy electrical equipment details, with properties like equipmentID, manufacturer, model, voltageRating, and installationDate.", "Schema": {"properties": {"equipmentID": {"title": "EquipmentID", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "model": {"title": "Model", "type": "string"}, "voltageRating": {"title": "VoltageRating", "type": "string"}, "installationDate": {"format": "date", "title": "InstallationDate", "type": "string"}}, "required": ["equipmentID", "manufacturer", "model", "voltageRating", "installationDate"], "title": "HeavyElectricalEquipment", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Develop a JSON schema for a maintenance record of electrical equipment, including properties such as recordID, equipmentID, maintenanceDate, technician, and maintenanceDetails.", "Schema": {"properties": {"recordID": {"title": "RecordID", "type": "string"}, "equipmentID": {"title": "EquipmentID", "type": "string"}, "maintenanceDate": {"format": "date-time", "title": "MaintenanceDate", "type": "string"}, "technician": {"title": "Technician", "type": "string"}, "maintenanceDetails": {"title": "MaintenanceDetails", "type": "string"}}, "required": ["recordID", "equipmentID", "maintenanceDate", "technician", "maintenanceDetails"], "title": "MaintenanceRecord", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Construct a JSON object representing an inventory list of electrical components, including properties like componentID, componentName, quantity, supplier, and reorderLevel.", "Schema": {"properties": {"componentID": {"title": "ComponentID", "type": "string"}, "componentName": {"title": "ComponentName", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplier": {"title": "Supplier", "type": "string"}, "reorderLevel": {"title": "ReorderLevel", "type": "integer"}}, "required": ["componentID", "componentName", "quantity", "supplier", "reorderLevel"], "title": "InventoryList", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Design a JSON object for an electrical equipment compliance report, including properties such as reportID, equipmentID, complianceStatus, inspectionDate, and inspector.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "equipmentID": {"title": "EquipmentID", "type": "string"}, "complianceStatus": {"title": "ComplianceStatus", "type": "string"}, "inspectionDate": {"format": "date", "title": "InspectionDate", "type": "string"}, "inspector": {"title": "Inspector", "type": "string"}}, "required": ["reportID", "equipmentID", "complianceStatus", "inspectionDate", "inspector"], "title": "ComplianceReport", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Generate a JSON object representing a warranty claim for electrical equipment, including properties like claimID, equipmentID, claimDate, issueDescription, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "ClaimID", "type": "string"}, "equipmentID": {"title": "EquipmentID", "type": "string"}, "claimDate": {"format": "date", "title": "ClaimDate", "type": "string"}, "issueDescription": {"title": "IssueDescription", "type": "string"}, "claimStatus": {"title": "ClaimStatus", "type": "string"}}, "required": ["claimID", "equipmentID", "claimDate", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Create a JSON object for storing information about different types of electric cables, including properties like cableType, length, voltageRating, and manufacturer details.", "Schema": {"properties": {"cableType": {"title": "Cable Type", "type": "string"}, "length": {"title": "Length", "type": "number"}, "voltageRating": {"title": "Voltage Rating", "type": "number"}, "manufacturer": {"title": "Manufacturer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}}, "required": ["cableType", "length", "voltageRating", "manufacturer"], "title": "ElectricCable", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Develop a JSON schema for an API query to retrieve electrical component specifications, including properties such as componentID, componentName, specs, and supplier information.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "specs": {"title": "Specifications", "type": "object", "properties": {"dimension": {"title": "Dimension", "type": "string"}, "weight": {"title": "Weight", "type": "number"}}, "required": ["dimension", "weight"]}, "supplier": {"title": "Supplier Information", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}}, "required": ["componentID", "componentName", "specs", "supplier"], "title": "ElectricalComponentSpecs", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Construct a JSON object for logging equipment maintenance records, including properties like equipmentID, lastMaintenanceDate, nextScheduledMaintenance, and technician details.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "lastMaintenanceDate": {"title": "Last Maintenance Date", "type": "string", "format": "date"}, "nextScheduledMaintenance": {"title": "Next Scheduled Maintenance", "type": "string", "format": "date"}, "technician": {"title": "Technician Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}}, "required": ["equipmentID", "lastMaintenanceDate", "nextScheduledMaintenance", "technician"], "title": "EquipmentMaintenanceRecord", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Design a JSON object for tracking inventory levels of electrical equipment parts, including properties such as partNumber, description, quantityInStock, and reorderThreshold.", "Schema": {"properties": {"partNumber": {"title": "Part Number", "type": "string"}, "description": {"title": "Description", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["partNumber", "description", "quantityInStock", "reorderThreshold"], "title": "InventoryLevel", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Electrical Equipment", "Task": "Generate a JSON object for a product catalog entry, including properties like productID, productName, category, specifications, and price.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "category": {"title": "Category", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"material": {"title": "Material", "type": "string"}, "color": {"title": "Color", "type": "string"}}, "required": ["material", "color"]}, "price": {"title": "Price", "type": "number"}}, "required": ["productID", "productName", "category", "specifications", "price"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Create a JSON object for querying agricultural machinery inventory, including properties like machineryID, type, brand, and availability status.", "Schema": {"properties": {"machineryID": {"title": "Machinery ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "availabilityStatus": {"title": "Availability Status", "type": "boolean"}}, "required": ["machineryID", "type", "brand", "availabilityStatus"], "title": "AgriculturalMachineryInventoryQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Develop a JSON object for submitting a service request for farm machinery, including properties like serviceRequestID, machineryID, requestedService, and urgency level.", "Schema": {"properties": {"serviceRequestID": {"title": "Service Request ID", "type": "string"}, "machineryID": {"title": "Machinery ID", "type": "string"}, "requestedService": {"title": "Requested Service", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["Low", "Medium", "High"]}}, "required": ["serviceRequestID", "machineryID", "requestedService", "urgencyLevel"], "title": "FarmMachineryServiceRequest", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Construct a JSON object for tracking machinery maintenance records, including properties like recordID, machineryID, maintenanceDate, and maintenanceDetails.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "machineryID": {"title": "Machinery ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "maintenanceDetails": {"title": "Maintenance Details", "type": "string"}}, "required": ["recordID", "machineryID", "maintenanceDate", "maintenanceDetails"], "title": "MachineryMaintenanceRecord", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Design a JSON object for a machinery purchase order, including properties like orderID, buyerDetails, machineryDetails, and orderStatus.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "buyerDetails": {"title": "Buyer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}, "machineryDetails": {"title": "Machinery Details", "type": "object", "properties": {"machineryID": {"title": "Machinery ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["machineryID", "quantity"]}, "orderStatus": {"title": "Order Status", "type": "string", "enum": ["Pending", "Confirmed", "Shipped", "Delivered", "Cancelled"]}}, "required": ["orderID", "buyerDetails", "machineryDetails", "orderStatus"], "title": "MachineryPurchaseOrder", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Generate a JSON object for reporting issues with machinery, including properties like issueReportID, machineryID, issueDescription, and reportDate.", "Schema": {"properties": {"issueReportID": {"title": "Issue Report ID", "type": "string"}, "machineryID": {"title": "Machinery ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "reportDate": {"title": "Report Date", "type": "string", "format": "date-time"}}, "required": ["issueReportID", "machineryID", "issueDescription", "reportDate"], "title": "MachineryIssueReport", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Create a JSON object for storing information about a specific model of agricultural tractor, including properties like modelNumber, enginePower, and price.", "Schema": {"properties": {"modelNumber": {"title": "Model Number", "type": "string"}, "enginePower": {"title": "Engine Power", "type": "number"}, "price": {"title": "Price", "type": "number"}}, "required": ["modelNumber", "enginePower", "price"], "title": "AgriculturalTractor", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Develop a JSON schema for representing a fertilizer spreader, including properties such as spreaderType, capacity, and compatibleTractorModel.", "Schema": {"properties": {"spreaderType": {"title": "Spreader Type", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "compatibleTractorModel": {"title": "Compatible Tractor Model", "type": "string"}}, "required": ["spreaderType", "capacity", "compatibleTractorModel"], "title": "FertilizerSpreader", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Construct a JSON object representing a grain dryer, including properties like dryerModel, efficiency, and throughputCapacity.", "Schema": {"properties": {"dryerModel": {"title": "Dryer Model", "type": "string"}, "efficiency": {"title": "Efficiency", "type": "number"}, "throughputCapacity": {"title": "Throughput Capacity", "type": "number"}}, "required": ["dryerModel", "efficiency", "throughputCapacity"], "title": "GrainDryer", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Design a JSON object for an irrigation system profile, including properties such as systemType, waterSource, and coverageArea.", "Schema": {"properties": {"systemType": {"title": "System Type", "type": "string"}, "waterSource": {"title": "Water Source", "type": "string"}, "coverageArea": {"title": "Coverage Area", "type": "number"}}, "required": ["systemType", "waterSource", "coverageArea"], "title": "IrrigationSystem", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Generate a JSON object representing a farm implement, including properties like implementName, function, and attachmentType.", "Schema": {"properties": {"implementName": {"title": "Implement Name", "type": "string"}, "function": {"title": "Function", "type": "string"}, "attachmentType": {"title": "Attachment Type", "type": "string"}}, "required": ["implementName", "function", "attachmentType"], "title": "FarmImplement", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Create a JSON object for storing construction machinery details, including properties like machineryID, modelName, weight, and operationalStatus.", "Schema": {"properties": {"machineryID": {"title": "Machinery ID", "type": "string"}, "modelName": {"title": "Model Name", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["operational", "maintenance", "decommissioned"]}}, "required": ["machineryID", "modelName", "weight", "operationalStatus"], "title": "ConstructionMachineryDetails", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Develop a JSON schema for heavy transportation equipment tracking, with properties such as equipmentID, location, lastServiceDate, and nextServiceDue.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "lastServiceDate": {"format": "date", "title": "Last Service Date", "type": "string"}, "nextServiceDue": {"format": "date", "title": "Next Service Due", "type": "string"}}, "required": ["equipmentID", "location", "lastServiceDate", "nextServiceDue"], "title": "HeavyTransportationEquipmentTracking", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Construct a JSON object for a machinery maintenance log, including properties like logID, machineryID, serviceDate, and serviceNotes.", "Schema": {"properties": {"logID": {"title": "Log ID", "type": "string"}, "machineryID": {"title": "Machinery ID", "type": "string"}, "serviceDate": {"format": "date-time", "title": "Service Date", "type": "string"}, "serviceNotes": {"title": "Service Notes", "type": "string"}}, "required": ["logID", "machineryID", "serviceDate", "serviceNotes"], "title": "MachineryMaintenanceLog", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Design a JSON object for tracking equipment rental agreements, with properties such as agreementID, customerName, rentalPeriod, and rentalCost.", "Schema": {"properties": {"agreementID": {"title": "Agreement ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "rentalPeriod": {"title": "Rental Period", "type": "string"}, "rentalCost": {"title": "Rental Cost", "type": "number"}}, "required": ["agreementID", "customerName", "rentalPeriod", "rentalCost"], "title": "EquipmentRentalAgreements", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Generate a JSON object representing inventory of spare parts, including properties like partID, partName, quantityAvailable, and compatibleMachinery.", "Schema": {"properties": {"partID": {"title": "Part ID", "type": "string"}, "partName": {"title": "Part Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "compatibleMachinery": {"items": {"type": "string"}, "title": "Compatible Machinery", "type": "array"}}, "required": ["partID", "partName", "quantityAvailable", "compatibleMachinery"], "title": "SparePartsInventory", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Create a JSON object for storing industrial equipment details, including properties like equipmentID, name, type, and maintenance schedule.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "object", "properties": {"lastServiceDate": {"format": "date", "title": "Last Service Date", "type": "string"}, "nextServiceDate": {"format": "date", "title": "Next Service Date", "type": "string"}, "serviceFrequency": {"title": "Service Frequency", "type": "string"}}, "required": ["lastServiceDate", "nextServiceDate", "serviceFrequency"]}}, "required": ["equipmentID", "name", "type", "maintenanceSchedule"], "title": "IndustrialEquipment", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Develop a JSON object for tracking production line efficiency, with properties such as lineID, operationalHours, downtime, and outputRate.", "Schema": {"properties": {"lineID": {"title": "Line ID", "type": "string"}, "operationalHours": {"title": "Operational Hours", "type": "number"}, "downtime": {"title": "Downtime", "type": "number"}, "outputRate": {"title": "Output Rate", "type": "number"}}, "required": ["lineID", "operationalHours", "downtime", "outputRate"], "title": "ProductionLineEfficiency", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Construct a JSON object for inventory management, including properties like itemID, itemName, quantity, reorderLevel, and supplierDetails.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "contactName": {"title": "Contact Name", "type": "string"}, "contactPhone": {"title": "Contact Phone", "type": "string"}}, "required": ["supplierID", "contactName", "contactPhone"]}}, "required": ["itemID", "itemName", "quantity", "reorderLevel", "supplierDetails"], "title": "InventoryManagement", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Design a JSON object for employee safety records, including properties such as employeeID, safetyTrainingDate, incidentReports, and safetyEquipmentIssued.", "Schema": {"properties": {"employeeID": {"title": "Employee ID", "type": "string"}, "safetyTrainingDate": {"format": "date", "title": "Safety Training Date", "type": "string"}, "incidentReports": {"title": "Incident Reports", "type": "array", "items": {"type": "object", "properties": {"date": {"format": "date", "title": "Date", "type": "string"}, "description": {"title": "Description", "type": "string"}}, "required": ["date", "description"]}}, "safetyEquipmentIssued": {"title": "Safety Equipment Issued", "type": "array", "items": {"type": "string"}}}, "required": ["employeeID", "safetyTrainingDate", "incidentReports", "safetyEquipmentIssued"], "title": "EmployeeSafetyRecord", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Industrial Conglomerates", "Task": "Generate a JSON object for a project timeline, including properties like projectID, projectName, milestones, and estimatedCompletionDate.", "Schema": {"properties": {"projectID": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "milestones": {"title": "Milestones", "type": "array", "items": {"type": "object", "properties": {"milestoneName": {"title": "Milestone Name", "type": "string"}, "targetDate": {"format": "date", "title": "Target Date", "type": "string"}}, "required": ["milestoneName", "targetDate"]}}, "estimatedCompletionDate": {"format": "date", "title": "Estimated Completion Date", "type": "string"}}, "required": ["projectID", "projectName", "milestones", "estimatedCompletionDate"], "title": "ProjectTimeline", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for querying environmental services availability, including properties like serviceType, availability, and price range.", "Schema": {"properties": {"serviceType": {"title": "ServiceType", "type": "string"}, "availability": {"title": "Availability", "type": "boolean"}, "priceRange": {"title": "PriceRange", "type": "object", "properties": {"min": {"title": "Min", "type": "number"}, "max": {"title": "Max", "type": "number"}}, "required": ["min", "max"]}}, "required": ["serviceType", "availability", "priceRange"], "title": "EnvironmentalServicesQuery", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON object for facilities service request, including properties like facilityId, requestedServices, and urgency level.", "Schema": {"properties": {"facilityId": {"title": "FacilityId", "type": "string"}, "requestedServices": {"title": "RequestedServices", "type": "array", "items": {"type": "string"}}, "urgencyLevel": {"title": "UrgencyLevel", "type": "string", "enum": ["low", "medium", "high"]}}, "required": ["facilityId", "requestedServices", "urgencyLevel"], "title": "FacilitiesServiceRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for tracking cleaning service schedules, including properties like serviceId, scheduleDates, and assignedTeam.", "Schema": {"properties": {"serviceId": {"title": "ServiceId", "type": "string"}, "scheduleDates": {"title": "ScheduleDates", "type": "array", "items": {"type": "string", "format": "date"}}, "assignedTeam": {"title": "AssignedTeam", "type": "string"}}, "required": ["serviceId", "scheduleDates", "assignedTeam"], "title": "CleaningServiceSchedule", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for a waste management report, including properties like reportId, wasteType, disposalMethod, and volume.", "Schema": {"properties": {"reportId": {"title": "ReportId", "type": "string"}, "wasteType": {"title": "WasteType", "type": "string"}, "disposalMethod": {"title": "DisposalMethod", "type": "string"}, "volume": {"title": "Volume", "type": "number"}}, "required": ["reportId", "wasteType", "disposalMethod", "volume"], "title": "WasteManagementReport", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for a security service feedback form, including properties like feedbackId, serviceDate, rating, and comments.", "Schema": {"properties": {"feedbackId": {"title": "FeedbackId", "type": "string"}, "serviceDate": {"title": "ServiceDate", "type": "string", "format": "date"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackId", "serviceDate", "rating", "comments"], "title": "SecurityServiceFeedback", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Create a JSON object for storing industrial machinery details, including properties like machineID, machineType, manufacturer, and specifications.", "Schema": {"properties": {"machineID": {"title": "Machine ID", "type": "string"}, "machineType": {"title": "Machine Type", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"power": {"title": "Power", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "dimensions": {"title": "Dimensions", "type": "string"}}, "required": ["power", "weight", "dimensions"]}}, "required": ["machineID", "machineType", "manufacturer", "specifications"], "title": "Industrial Machinery Details", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Develop a JSON object for logging machinery maintenance records, with fields such as recordID, machineID, maintenanceDate, performedBy, and maintenanceDetails.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "machineID": {"title": "Machine ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "performedBy": {"title": "Performed By", "type": "string"}, "maintenanceDetails": {"title": "Maintenance Details", "type": "string"}}, "required": ["recordID", "machineID", "maintenanceDate", "performedBy", "maintenanceDetails"], "title": "Machinery Maintenance Record", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Construct a JSON object for tracking machinery sales, including properties like saleID, machineID, saleDate, customerDetails, and price.", "Schema": {"properties": {"saleID": {"title": "Sale ID", "type": "string"}, "machineID": {"title": "Machine ID", "type": "string"}, "saleDate": {"title": "Sale Date", "type": "string", "format": "date"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerID": {"title": "Customer ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["customerID", "customerName", "contactInfo"]}, "price": {"title": "Price", "type": "number"}}, "required": ["saleID", "machineID", "saleDate", "customerDetails", "price"], "title": "Machinery Sales Record", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Design a JSON object for inventory management of machine parts, with attributes such as partID, partName, quantityInStock, reorderLevel, and supplierInfo.", "Schema": {"properties": {"partID": {"title": "Part ID", "type": "string"}, "partName": {"title": "Part Name", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}, "supplierInfo": {"title": "Supplier Info", "type": "object", "properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["supplierID", "supplierName", "contactInfo"]}}, "required": ["partID", "partName", "quantityInStock", "reorderLevel", "supplierInfo"], "title": "Machine Parts Inventory", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Generate a JSON object for a machinery quality assurance checklist, including fields like checklistID, machineID, inspectionDate, inspector, and checklistItems.", "Schema": {"properties": {"checklistID": {"title": "Checklist ID", "type": "string"}, "machineID": {"title": "Machine ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "inspector": {"title": "Inspector", "type": "string"}, "checklistItems": {"title": "Checklist Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Pass", "Fail", "Not Applicable"]}}, "required": ["itemID", "description", "status"]}}}, "required": ["checklistID", "machineID", "inspectionDate", "inspector", "checklistItems"], "title": "Machinery Quality Assurance Checklist", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Create a JSON object for a product inventory entry, including properties like productID, productName, quantity, price, and supplier details.", "Schema": {"properties": {"productID": {"title": "ProductID", "type": "string"}, "productName": {"title": "ProductName", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}, "supplierDetails": {"type": "object", "properties": {"supplierID": {"title": "SupplierID", "type": "string"}, "supplierName": {"title": "SupplierName", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierID", "supplierName", "contact"]}}, "required": ["productID", "productName", "quantity", "price", "supplierDetails"], "title": "ProductInventoryEntry", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Develop a JSON object for a shipment tracking system, with properties such as shipmentID, origin, destination, estimatedArrival, and itemsList.", "Schema": {"properties": {"shipmentID": {"title": "ShipmentID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "EstimatedArrival", "type": "string", "format": "date-time"}, "itemsList": {"type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "ItemID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemID", "quantity"]}}}, "required": ["shipmentID", "origin", "destination", "estimatedArrival", "itemsList"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Construct a JSON object for a customer order, including properties like orderID, customerDetails, orderDate, deliveryAddress, and orderedItems.", "Schema": {"properties": {"orderID": {"title": "OrderID", "type": "string"}, "customerDetails": {"type": "object", "properties": {"customerID": {"title": "CustomerID", "type": "string"}, "customerName": {"title": "CustomerName", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["customerID", "customerName", "contact"]}, "orderDate": {"title": "OrderDate", "type": "string", "format": "date"}, "deliveryAddress": {"title": "DeliveryAddress", "type": "string"}, "orderedItems": {"type": "array", "items": {"type": "object", "properties": {"productID": {"title": "ProductID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productID", "quantity"]}}}, "required": ["orderID", "customerDetails", "orderDate", "deliveryAddress", "orderedItems"], "title": "CustomerOrder", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Design a JSON object for a supplier profile, with properties such as supplierID, companyName, contactInfo, address, and productCatalog.", "Schema": {"properties": {"supplierID": {"title": "SupplierID", "type": "string"}, "companyName": {"title": "CompanyName", "type": "string"}, "contactInfo": {"type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "address": {"title": "Address", "type": "string"}, "productCatalog": {"type": "array", "items": {"type": "object", "properties": {"productID": {"title": "ProductID", "type": "string"}, "productName": {"title": "ProductName", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["productID", "productName", "price"]}}}, "required": ["supplierID", "companyName", "contactInfo", "address", "productCatalog"], "title": "SupplierProfile", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Generate a JSON object for a purchase order, including properties like purchaseOrderID, supplierID, orderDate, deliveryTerms, and itemsOrdered.", "Schema": {"properties": {"purchaseOrderID": {"title": "PurchaseOrderID", "type": "string"}, "supplierID": {"title": "SupplierID", "type": "string"}, "orderDate": {"title": "OrderDate", "type": "string", "format": "date"}, "deliveryTerms": {"title": "DeliveryTerms", "type": "string"}, "itemsOrdered": {"type": "array", "items": {"type": "object", "properties": {"productID": {"title": "ProductID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "unitPrice": {"title": "UnitPrice", "type": "number"}}, "required": ["productID", "quantity", "unitPrice"]}}}, "required": ["purchaseOrderID", "supplierID", "orderDate", "deliveryTerms", "itemsOrdered"], "title": "PurchaseOrder", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Create a JSON object for querying industrial machinery availability, including properties like machineId, availabilityStatus, and location.", "Schema": {"properties": {"machineId": {"title": "Machine ID", "type": "string"}, "availabilityStatus": {"title": "Availability Status", "type": "string", "enum": ["Available", "Unavailable", "Maintenance"]}, "location": {"title": "Location", "type": "string"}}, "required": ["machineId", "availabilityStatus", "location"], "title": "MachineryAvailabilityQuery", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Develop a JSON object for submitting a maintenance request, including properties like requestId, machineId, issueDescription, and priorityLevel.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "machineId": {"title": "Machine ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string", "enum": ["Low", "Medium", "High", "Critical"]}}, "required": ["requestId", "machineId", "issueDescription", "priorityLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Construct a JSON object for tracking machinery parts inventory, including properties like partId, partName, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"partId": {"title": "Part ID", "type": "string"}, "partName": {"title": "Part Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["partId", "partName", "quantityAvailable", "reorderThreshold"], "title": "PartsInventory", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Design a JSON object for a new machinery order, including properties like orderId, customerDetails, orderedMachines, and deliveryDate.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "address", "contact"]}, "orderedMachines": {"title": "Ordered Machines", "type": "array", "items": {"type": "object", "properties": {"machineId": {"title": "Machine ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["machineId", "quantity"]}}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderId", "customerDetails", "orderedMachines", "deliveryDate"], "title": "NewMachineryOrder", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Machinery", "Task": "Generate a JSON object for reporting machinery defects, including properties like reportId, machineId, defectDetails, and reportDate.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "machineId": {"title": "Machine ID", "type": "string"}, "defectDetails": {"title": "Defect Details", "type": "string"}, "reportDate": {"title": "Report Date", "type": "string", "format": "date-time"}}, "required": ["reportId", "machineId", "defectDetails", "reportDate"], "title": "DefectReport", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for a commercial printing order, including properties like orderID, customerDetails, printDetails, quantity, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["customerName", "contactNumber"]}, "printDetails": {"title": "Print Details", "type": "object", "properties": {"documentType": {"title": "Document Type", "type": "string"}, "color": {"title": "Color", "type": "boolean"}, "paperSize": {"title": "Paper Size", "type": "string"}}, "required": ["documentType", "color", "paperSize"]}, "quantity": {"title": "Quantity", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "customerDetails", "printDetails", "quantity", "deliveryDate"], "title": "CommercialPrintingOrder", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for tracking a supply inventory, including properties like itemID, itemName, stockLevel, reorderThreshold, and supplierInfo.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}, "supplierInfo": {"title": "Supplier Info", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierName", "contact"]}}, "required": ["itemID", "itemName", "stockLevel", "reorderThreshold", "supplierInfo"], "title": "SupplyInventory", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for a service request, including properties like requestID, serviceType, clientDetails, urgencyLevel, and expectedCompletion.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "clientDetails": {"title": "Client Details", "type": "object", "properties": {"clientName": {"title": "Client Name", "type": "string"}, "clientID": {"title": "Client ID", "type": "string"}}, "required": ["clientName", "clientID"]}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["Low", "Medium", "High"]}, "expectedCompletion": {"title": "Expected Completion", "type": "string", "format": "date-time"}}, "required": ["requestID", "serviceType", "clientDetails", "urgencyLevel", "expectedCompletion"], "title": "ServiceRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for a client feedback form, including properties like feedbackID, clientID, serviceRating, comments, and submissionDate.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "clientID": {"title": "Client ID", "type": "string"}, "serviceRating": {"title": "Service Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}, "submissionDate": {"title": "Submission Date", "type": "string", "format": "date-time"}}, "required": ["feedbackID", "clientID", "serviceRating", "comments", "submissionDate"], "title": "ClientFeedback", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Formulate a JSON object for a maintenance schedule, including properties like scheduleID, equipmentID, maintenanceType, scheduledDate, and technicianDetails.", "Schema": {"properties": {"scheduleID": {"title": "Schedule ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "scheduledDate": {"title": "Scheduled Date", "type": "string", "format": "date"}, "technicianDetails": {"title": "Technician Details", "type": "object", "properties": {"technicianName": {"title": "Technician Name", "type": "string"}, "technicianID": {"title": "Technician ID", "type": "string"}}, "required": ["technicianName", "technicianID"]}}, "required": ["scheduleID", "equipmentID", "maintenanceType", "scheduledDate", "technicianDetails"], "title": "MaintenanceSchedule", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for querying office supply inventory, including properties like itemID, itemName, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["itemID", "itemName", "quantityAvailable", "reorderThreshold"], "title": "OfficeSupplyInventoryQuery", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON object for submitting a service request, including properties such as requestID, serviceType, urgency, and description.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "urgency": {"title": "Urgency", "type": "string", "enum": ["Low", "Medium", "High"]}, "description": {"title": "Description", "type": "string"}}, "required": ["requestID", "serviceType", "urgency", "description"], "title": "ServiceRequestSubmission", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for tracking office maintenance schedules, with properties like maintenanceID, equipmentName, lastServiceDate, and nextServiceDate.", "Schema": {"properties": {"maintenanceID": {"title": "Maintenance ID", "type": "string"}, "equipmentName": {"title": "Equipment Name", "type": "string"}, "lastServiceDate": {"title": "Last Service Date", "type": "string", "format": "date"}, "nextServiceDate": {"title": "Next Service Date", "type": "string", "format": "date"}}, "required": ["maintenanceID", "equipmentName", "lastServiceDate", "nextServiceDate"], "title": "OfficeMaintenanceSchedule", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for managing vendor contracts, including properties such as contractID, vendorName, startDate, endDate, and terms.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "vendorName": {"title": "Vendor Name", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "terms": {"title": "Terms", "type": "string"}}, "required": ["contractID", "vendorName", "startDate", "endDate", "terms"], "title": "VendorContractManagement", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for recording client interactions, with properties like interactionID, clientName, interactionDate, interactionType, and notes.", "Schema": {"properties": {"interactionID": {"title": "Interaction ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "interactionDate": {"title": "Interaction Date", "type": "string", "format": "date-time"}, "interactionType": {"title": "Interaction Type", "type": "string"}, "notes": {"title": "Notes", "type": "string"}}, "required": ["interactionID", "clientName", "interactionDate", "interactionType", "notes"], "title": "ClientInteractionRecord", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for storing waste management service details, including properties like serviceID, clientName, wasteType, collectionFrequency, and serviceDate.", "Schema": {"properties": {"serviceID": {"title": "Service ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "wasteType": {"title": "Waste Type", "type": "string"}, "collectionFrequency": {"title": "Collection Frequency", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}}, "required": ["serviceID", "clientName", "wasteType", "collectionFrequency", "serviceDate"], "title": "WasteManagementService", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON schema for a facilities management service request, including properties such as requestID, facilityLocation, serviceType, urgencyLevel, and requestDate.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "facilityLocation": {"title": "Facility Location", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string"}, "requestDate": {"title": "Request Date", "type": "string", "format": "date"}}, "required": ["requestID", "facilityLocation", "serviceType", "urgencyLevel", "requestDate"], "title": "FacilitiesManagementRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for tracking pollution control measures, including properties like measureID, implementedBy, pollutantType, reductionTarget, and complianceStatus.", "Schema": {"properties": {"measureID": {"title": "Measure ID", "type": "string"}, "implementedBy": {"title": "Implemented By", "type": "string"}, "pollutantType": {"title": "Pollutant Type", "type": "string"}, "reductionTarget": {"title": "Reduction Target", "type": "string"}, "complianceStatus": {"title": "Compliance Status", "type": "string"}}, "required": ["measureID", "implementedBy", "pollutantType", "reductionTarget", "complianceStatus"], "title": "PollutionControlMeasure", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for a client profile in environmental services, including properties such as clientID, companyName, contactDetails, serviceAgreements, and performanceRatings.", "Schema": {"properties": {"clientID": {"title": "Client ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "serviceAgreements": {"title": "Service Agreements", "type": "array", "items": {"type": "string"}}, "performanceRatings": {"title": "Performance Ratings", "type": "object", "properties": {"rating": {"title": "Rating", "type": "number"}, "date": {"title": "Date", "type": "string", "format": "date"}}, "required": ["rating", "date"]}}, "required": ["clientID", "companyName", "contactDetails", "serviceAgreements", "performanceRatings"], "title": "ClientProfileEnvironmentalServices", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for a pollution control service contract, including properties like contractID, serviceProvider, serviceScope, contractDuration, and termsOfService.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "serviceProvider": {"title": "Service Provider", "type": "string"}, "serviceScope": {"title": "Service Scope", "type": "string"}, "contractDuration": {"title": "Contract Duration", "type": "string"}, "termsOfService": {"title": "Terms of Service", "type": "string"}}, "required": ["contractID", "serviceProvider", "serviceScope", "contractDuration", "termsOfService"], "title": "PollutionControlServiceContract", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for a new office supply product, including properties like productName, productCode, category, price, and supplier information.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productCode": {"title": "Product Code", "type": "string"}, "category": {"title": "Category", "type": "string"}, "price": {"title": "Price", "type": "number"}, "supplier": {"title": "Supplier Information", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}}, "required": ["supplierName", "contactDetails"]}}, "required": ["productName", "productCode", "category", "price", "supplier"], "title": "OfficeSupplyProduct", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON object for a service request, including properties like requestId, serviceType, urgency, clientDetails, and expectedCompletionDate.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "urgency": {"title": "Urgency", "type": "string", "enum": ["Low", "Medium", "High"]}, "clientDetails": {"title": "Client Details", "type": "object", "properties": {"clientName": {"title": "Client Name", "type": "string"}, "clientContact": {"title": "Client Contact", "type": "string"}}, "required": ["clientName", "clientContact"]}, "expectedCompletionDate": {"title": "Expected Completion Date", "type": "string", "format": "date"}}, "required": ["requestId", "serviceType", "urgency", "clientDetails", "expectedCompletionDate"], "title": "ServiceRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for tracking office maintenance requests, including properties like maintenanceId, issueDescription, reportedBy, priority, and status.", "Schema": {"properties": {"maintenanceId": {"title": "Maintenance ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "reportedBy": {"title": "Reported By", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High", "Critical"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["maintenanceId", "issueDescription", "reportedBy", "priority", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for a client contract, including properties like contractId, clientName, serviceDescription, startDate, endDate, and terms.", "Schema": {"properties": {"contractId": {"title": "Contract ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "serviceDescription": {"title": "Service Description", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "terms": {"title": "Terms", "type": "string"}}, "required": ["contractId", "clientName", "serviceDescription", "startDate", "endDate", "terms"], "title": "ClientContract", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for an inventory item, including properties like itemId, itemName, stockLevel, reorderThreshold, and supplierId.", "Schema": {"properties": {"itemId": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}, "supplierId": {"title": "Supplier ID", "type": "string"}}, "required": ["itemId", "itemName", "stockLevel", "reorderThreshold", "supplierId"], "title": "InventoryItem", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Create a JSON object for storing inventory details, including properties like productID, productName, quantity, and supplier details.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierID", "supplierName", "contact"]}}, "required": ["productID", "productName", "quantity", "supplierDetails"], "title": "InventoryItem", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Develop a JSON object for a purchase order, including properties such as orderID, orderDate, items, and totalAmount.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "unitPrice": {"title": "Unit Price", "type": "number"}}, "required": ["productID", "quantity", "unitPrice"]}}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["orderID", "orderDate", "items", "totalAmount"], "title": "PurchaseOrder", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Construct a JSON object for tracking shipment status, with properties like shipmentID, estimatedDelivery, currentLocation, and status.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "estimatedDelivery": {"title": "Estimated Delivery", "type": "string", "format": "date-time"}, "currentLocation": {"title": "Current Location", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Preparing", "Shipped", "In Transit", "Delivered", "Delayed"]}}, "required": ["shipmentID", "estimatedDelivery", "currentLocation", "status"], "title": "ShipmentStatus", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Design a JSON object for a customer profile, including properties such as customerID, companyName, contactDetails, and orderHistory.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "address": {"title": "Address", "type": "string"}}, "required": ["phone", "email", "address"]}, "orderHistory": {"title": "Order History", "type": "array", "items": {"type": "object", "properties": {"orderID": {"title": "Order ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["orderID", "orderDate", "totalAmount"]}}}, "required": ["customerID", "companyName", "contactDetails", "orderHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Capital Goods", "SubCategory": "Trading Companies & Distributors", "Task": "Generate a JSON object for a supplier evaluation, including properties like supplierID, performanceRating, deliveryTimeliness, and qualityCompliance.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "performanceRating": {"title": "Performance Rating", "type": "integer", "minimum": 1, "maximum": 5}, "deliveryTimeliness": {"title": "Delivery Timeliness", "type": "string", "enum": ["On Time", "Late", "Very Late", "Early"]}, "qualityCompliance": {"title": "Quality Compliance", "type": "boolean"}}, "required": ["supplierID", "performanceRating", "deliveryTimeliness", "qualityCompliance"], "title": "SupplierEvaluation", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for a support ticket system, including properties like ticketID, issueDescription, priority, and status.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High", "Urgent"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["ticketID", "issueDescription", "priority", "status"], "title": "SupportTicket", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON object for tracking service requests, including properties like requestID, clientName, serviceType, and completionDate.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "completionDate": {"title": "Completion Date", "type": "string", "format": "date"}}, "required": ["requestID", "clientName", "serviceType", "completionDate"], "title": "ServiceRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for a client profile, including properties like clientID, companyName, contactDetails, and contractTerms.", "Schema": {"properties": {"clientID": {"title": "Client ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "contractTerms": {"title": "Contract Terms", "type": "string"}}, "required": ["clientID", "companyName", "contactDetails", "contractTerms"], "title": "ClientProfile", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for inventory management, including properties like itemID, itemName, quantityInStock, and reorderThreshold.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["itemID", "itemName", "quantityInStock", "reorderThreshold"], "title": "InventoryManagement", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for scheduling maintenance services, including properties like serviceID, equipmentID, scheduledDate, and technician.", "Schema": {"properties": {"serviceID": {"title": "Service ID", "type": "string"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "scheduledDate": {"title": "Scheduled Date", "type": "string", "format": "date-time"}, "technician": {"title": "Technician", "type": "string"}}, "required": ["serviceID", "equipmentID", "scheduledDate", "technician"], "title": "MaintenanceSchedule", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for storing security alarm service details, including properties like serviceId, clientName, serviceType, and installationDate.", "Schema": {"properties": {"serviceId": {"title": "Service ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "installationDate": {"format": "date", "title": "Installation Date", "type": "string"}}, "required": ["serviceId", "clientName", "serviceType", "installationDate"], "title": "SecurityAlarmServiceDetails", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON schema for a maintenance request, including properties such as requestId, serviceId, issueDescription, and priorityLevel.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "serviceId": {"title": "Service ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string"}}, "required": ["requestId", "serviceId", "issueDescription", "priorityLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for tracking inventory of security equipment, with properties like equipmentId, equipmentName, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "equipmentName": {"title": "Equipment Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["equipmentId", "equipmentName", "quantityAvailable", "reorderThreshold"], "title": "SecurityEquipmentInventory", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for client feedback on security services, including properties such as feedbackId, serviceId, clientName, rating, and comments.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "serviceId": {"title": "Service ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackId", "serviceId", "clientName", "rating"], "title": "ClientFeedback", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for a service contract, including properties like contractId, clientName, serviceTerms, startDate, and endDate.", "Schema": {"properties": {"contractId": {"title": "Contract ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "serviceTerms": {"title": "Service Terms", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}}, "required": ["contractId", "clientName", "serviceTerms", "startDate", "endDate"], "title": "ServiceContract", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Create a JSON object for storing employee personal details, including properties like employeeId, fullName, dateOfBirth, and contact information.", "Schema": {"properties": {"employeeId": {"title": "Employee ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "dateOfBirth": {"format": "date", "title": "Date of Birth", "type": "string"}, "contactInformation": {"type": "object", "properties": {"email": {"format": "email", "title": "Email", "type": "string"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}}, "required": ["employeeId", "fullName", "dateOfBirth", "contactInformation"], "title": "EmployeePersonalDetails", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Develop a JSON schema for a job application form, including properties such as jobId, applicantName, coverLetter, and resume.", "Schema": {"properties": {"jobId": {"title": "Job ID", "type": "string"}, "applicantName": {"title": "Applicant Name", "type": "string"}, "coverLetter": {"title": "Cover Letter", "type": "string"}, "resume": {"title": "Resume", "type": "string"}}, "required": ["jobId", "applicantName", "coverLetter", "resume"], "title": "JobApplicationForm", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Construct a JSON object for tracking employee training sessions, including properties like sessionId, employeeId, trainingDate, and trainingTopic.", "Schema": {"properties": {"sessionId": {"title": "Session ID", "type": "string"}, "employeeId": {"title": "Employee ID", "type": "string"}, "trainingDate": {"format": "date", "title": "Training Date", "type": "string"}, "trainingTopic": {"title": "Training Topic", "type": "string"}}, "required": ["sessionId", "employeeId", "trainingDate", "trainingTopic"], "title": "EmployeeTrainingSession", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Design a JSON object for client project details, including properties such as projectId, clientName, projectScope, and deadline.", "Schema": {"properties": {"projectId": {"title": "Project ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "projectScope": {"title": "Project Scope", "type": "string"}, "deadline": {"format": "date-time", "title": "Deadline", "type": "string"}}, "required": ["projectId", "clientName", "projectScope", "deadline"], "title": "ClientProjectDetails", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Generate a JSON object for tracking employee performance reviews, including properties like reviewId, employeeId, reviewDate, and performanceRating.", "Schema": {"properties": {"reviewId": {"title": "Review ID", "type": "string"}, "employeeId": {"title": "Employee ID", "type": "string"}, "reviewDate": {"format": "date", "title": "Review Date", "type": "string"}, "performanceRating": {"title": "Performance Rating", "type": "string"}}, "required": ["reviewId", "employeeId", "reviewDate", "performanceRating"], "title": "EmployeePerformanceReview", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for a commercial printing service order, including properties like orderID, customerDetails, itemDetails, quantity, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerName", "contactNumber", "address"]}, "itemDetails": {"title": "Item Details", "type": "object", "properties": {"itemName": {"title": "Item Name", "type": "string"}, "itemDescription": {"title": "Item Description", "type": "string"}}, "required": ["itemName", "itemDescription"]}, "quantity": {"title": "Quantity", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "customerDetails", "itemDetails", "quantity", "deliveryDate"], "title": "CommercialPrintingServiceOrder", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON object for tracking printing equipment maintenance, including properties like equipmentID, lastServiceDate, nextServiceDate, and serviceNotes.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "lastServiceDate": {"title": "Last Service Date", "type": "string", "format": "date"}, "nextServiceDate": {"title": "Next Service Date", "type": "string", "format": "date"}, "serviceNotes": {"title": "Service Notes", "type": "string"}}, "required": ["equipmentID", "lastServiceDate", "nextServiceDate"], "title": "PrintingEquipmentMaintenance", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for a customer feedback form on printing services, including properties like feedbackID, customerID, serviceRating, comments, and submissionDate.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "serviceRating": {"title": "Service Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}, "submissionDate": {"title": "Submission Date", "type": "string", "format": "date-time"}}, "required": ["feedbackID", "customerID", "serviceRating", "submissionDate"], "title": "CustomerFeedbackForm", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for a print job quote request, including properties like quoteID, requestedBy, jobDetails, estimatedCost, and requestDate.", "Schema": {"properties": {"quoteID": {"title": "Quote ID", "type": "string"}, "requestedBy": {"title": "Requested By", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["name", "email"]}, "jobDetails": {"title": "Job Details", "type": "string"}, "estimatedCost": {"title": "Estimated Cost", "type": "number"}, "requestDate": {"title": "Request Date", "type": "string", "format": "date"}}, "required": ["quoteID", "requestedBy", "jobDetails", "estimatedCost", "requestDate"], "title": "PrintJobQuoteRequest", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for inventory management of printing supplies, including properties like inventoryID, item, currentStock, reorderLevel, and supplierDetails.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "item": {"title": "Item", "type": "string"}, "currentStock": {"title": "Current Stock", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierName", "contact"]}}, "required": ["inventoryID", "item", "currentStock", "reorderLevel", "supplierDetails"], "title": "PrintingSuppliesInventoryManagement", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Create a JSON object for storing job seeker profiles, including properties like fullName, skills, experience, and desired salary range.", "Schema": {"properties": {"fullName": {"title": "Full Name", "type": "string"}, "skills": {"items": {"type": "string"}, "title": "Skills", "type": "array"}, "experience": {"title": "Experience", "type": "number"}, "desiredSalaryRange": {"properties": {"min": {"title": "Minimum Salary", "type": "number"}, "max": {"title": "Maximum Salary", "type": "number"}}, "title": "Desired Salary Range", "type": "object"}}, "required": ["fullName", "skills", "experience", "desiredSalaryRange"], "title": "JobSeekerProfile", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Develop a JSON schema for a job listing, including properties such as jobTitle, company, location, jobDescription, and salaryRange.", "Schema": {"properties": {"jobTitle": {"title": "Job Title", "type": "string"}, "company": {"title": "Company", "type": "string"}, "location": {"title": "Location", "type": "string"}, "jobDescription": {"title": "Job Description", "type": "string"}, "salaryRange": {"properties": {"min": {"title": "Minimum Salary", "type": "number"}, "max": {"title": "Maximum Salary", "type": "number"}}, "title": "Salary Range", "type": "object"}}, "required": ["jobTitle", "company", "location", "jobDescription", "salaryRange"], "title": "JobListing", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Construct a JSON object for employee training records, including properties like employeeId, coursesTaken, skillsAcquired, and trainingCompletionDate.", "Schema": {"properties": {"employeeId": {"title": "Employee ID", "type": "string"}, "coursesTaken": {"items": {"type": "string"}, "title": "Courses Taken", "type": "array"}, "skillsAcquired": {"items": {"type": "string"}, "title": "Skills Acquired", "type": "array"}, "trainingCompletionDate": {"format": "date", "title": "Training Completion Date", "type": "string"}}, "required": ["employeeId", "coursesTaken", "skillsAcquired", "trainingCompletionDate"], "title": "EmployeeTrainingRecord", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Design a JSON object for a payroll entry, including properties such as employeeId, payPeriod, grossPay, taxes, and netPay.", "Schema": {"properties": {"employeeId": {"title": "Employee ID", "type": "string"}, "payPeriod": {"title": "Pay Period", "type": "string"}, "grossPay": {"title": "Gross Pay", "type": "number"}, "taxes": {"title": "Taxes", "type": "number"}, "netPay": {"title": "Net Pay", "type": "number"}}, "required": ["employeeId", "payPeriod", "grossPay", "taxes", "netPay"], "title": "PayrollEntry", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Generate a JSON object representing a corporate recruitment service, including properties like serviceId, serviceName, serviceDescription, and pricingModel.", "Schema": {"properties": {"serviceId": {"title": "Service ID", "type": "string"}, "serviceName": {"title": "Service Name", "type": "string"}, "serviceDescription": {"title": "Service Description", "type": "string"}, "pricingModel": {"title": "Pricing Model", "type": "string"}}, "required": ["serviceId", "serviceName", "serviceDescription", "pricingModel"], "title": "RecruitmentService", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Create a JSON object for a sector change notification, including properties like sectorName, oldCode, newCode, and changeDate.", "Schema": {"properties": {"sectorName": {"title": "Sector Name", "type": "string"}, "oldCode": {"title": "Old Code", "type": "string"}, "newCode": {"title": "New Code", "type": "string"}, "changeDate": {"title": "Change Date", "type": "string", "format": "date"}}, "required": ["sectorName", "oldCode", "newCode", "changeDate"], "title": "SectorChangeNotification", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Develop a JSON object for a new code addition, including properties like code, definition, effectiveDate, and remarks.", "Schema": {"properties": {"code": {"title": "Code", "type": "string"}, "definition": {"title": "Definition", "type": "string"}, "effectiveDate": {"title": "Effective Date", "type": "string", "format": "date"}, "remarks": {"title": "Remarks", "type": "string"}}, "required": ["code", "definition", "effectiveDate"], "title": "NewCodeAddition", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Construct a JSON object for updating a service definition, including properties like serviceId, oldDefinition, newDefinition, and updateDate.", "Schema": {"properties": {"serviceId": {"title": "Service ID", "type": "string"}, "oldDefinition": {"title": "Old Definition", "type": "string"}, "newDefinition": {"title": "New Definition", "type": "string"}, "updateDate": {"title": "Update Date", "type": "string", "format": "date"}}, "required": ["serviceId", "oldDefinition", "newDefinition", "updateDate"], "title": "ServiceDefinitionUpdate", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Design a JSON object for logging outsourced service details, including properties like vendorId, serviceName, contractStart, contractEnd, and serviceLevelAgreement.", "Schema": {"properties": {"vendorId": {"title": "Vendor ID", "type": "string"}, "serviceName": {"title": "Service Name", "type": "string"}, "contractStart": {"title": "Contract Start", "type": "string", "format": "date"}, "contractEnd": {"title": "Contract End", "type": "string", "format": "date"}, "serviceLevelAgreement": {"title": "Service Level Agreement", "type": "string"}}, "required": ["vendorId", "serviceName", "contractStart", "contractEnd"], "title": "OutsourcedServiceDetails", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Generate a JSON object for tracking professional service engagements, including properties like engagementId, clientName, startDate, endDate, and deliverables.", "Schema": {"properties": {"engagementId": {"title": "Engagement ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "deliverables": {"title": "Deliverables", "type": "array", "items": {"type": "string"}}}, "required": ["engagementId", "clientName", "startDate", "endDate"], "title": "ProfessionalServiceEngagement", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Create a JSON object for customer experience management data, including properties like customerID, feedbackScore, and comments.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "feedbackScore": {"title": "Feedback Score", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["customerID", "feedbackScore"], "title": "CustomerExperienceData", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Develop a JSON schema for back-office automation data, including properties such as processID, taskCompleted, and timeTaken.", "Schema": {"properties": {"processID": {"title": "Process ID", "type": "string"}, "taskCompleted": {"title": "Task Completed", "type": "boolean"}, "timeTaken": {"title": "Time Taken", "type": "number"}}, "required": ["processID", "taskCompleted"], "title": "BackOfficeAutomationData", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Construct a JSON object for call center management, including properties like callID, duration, resolutionStatus, and agentID.", "Schema": {"properties": {"callID": {"title": "Call ID", "type": "string"}, "duration": {"title": "Duration", "type": "integer"}, "resolutionStatus": {"title": "Resolution Status", "type": "string", "enum": ["Resolved", "Pending", "Escalated"]}, "agentID": {"title": "Agent ID", "type": "string"}}, "required": ["callID", "duration", "resolutionStatus"], "title": "CallCenterManagementData", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Design a JSON object for investor communications tracking, including properties such as communicationID, investorID, method, and content.", "Schema": {"properties": {"communicationID": {"title": "Communication ID", "type": "string"}, "investorID": {"title": "Investor ID", "type": "string"}, "method": {"title": "Method", "type": "string", "enum": ["Email", "Phone", "Meeting", "Letter"]}, "content": {"title": "Content", "type": "string"}}, "required": ["communicationID", "investorID", "method"], "title": "InvestorCommunicationsData", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Generate a JSON object representing a business process outsourcing (BPO) service interaction, including properties like interactionID, serviceType, clientID, and outcome.", "Schema": {"properties": {"interactionID": {"title": "Interaction ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "clientID": {"title": "Client ID", "type": "string"}, "outcome": {"title": "Outcome", "type": "string"}}, "required": ["interactionID", "serviceType", "clientID"], "title": "BPOServiceInteractionData", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for storing information about commercial cleaning services, including service ID, service type, frequency, and client details.", "Schema": {"properties": {"serviceId": {"title": "Service ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "frequency": {"title": "Frequency", "type": "string"}, "clientDetails": {"title": "Client Details", "type": "object", "properties": {"clientId": {"title": "Client ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["clientId", "clientName", "contact"]}}, "required": ["serviceId", "serviceType", "frequency", "clientDetails"], "title": "CommercialCleaningService", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON schema for equipment repair services, detailing repair ticket information such as ticket ID, equipment type, issue description, and technician assignment.", "Schema": {"properties": {"ticketId": {"title": "Ticket ID", "type": "string"}, "equipmentType": {"title": "Equipment Type", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "technicianAssignment": {"title": "Technician Assignment", "type": "object", "properties": {"technicianId": {"title": "Technician ID", "type": "string"}, "technicianName": {"title": "Technician Name", "type": "string"}}, "required": ["technicianId", "technicianName"]}}, "required": ["ticketId", "equipmentType", "issueDescription", "technicianAssignment"], "title": "EquipmentRepairService", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for a uniform rental service, including uniform ID, size, material, rental period, and client company information.", "Schema": {"properties": {"uniformId": {"title": "Uniform ID", "type": "string"}, "size": {"title": "Size", "type": "string"}, "material": {"title": "Material", "type": "string"}, "rentalPeriod": {"title": "Rental Period", "type": "string"}, "clientCompany": {"title": "Client Company", "type": "object", "properties": {"companyId": {"title": "Company ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}}, "required": ["companyId", "companyName"]}}, "required": ["uniformId", "size", "material", "rentalPeriod", "clientCompany"], "title": "UniformRentalService", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for a storage & warehousing service, capturing details such as storage ID, location, capacity, security features, and client information.", "Schema": {"properties": {"storageId": {"title": "Storage ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "capacity": {"title": "Capacity", "type": "string"}, "securityFeatures": {"title": "Security Features", "type": "array", "items": {"type": "string"}}, "clientInfo": {"title": "Client Information", "type": "object", "properties": {"clientId": {"title": "Client ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}}, "required": ["clientId", "clientName"]}}, "required": ["storageId", "location", "capacity", "securityFeatures", "clientInfo"], "title": "StorageWarehousingService", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for transaction services, including transaction ID, service type, date, amount, and involved parties' details.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "partiesDetails": {"title": "Parties Details", "type": "array", "items": {"type": "object", "properties": {"partyId": {"title": "Party ID", "type": "string"}, "partyName": {"title": "Party Name", "type": "string"}}, "required": ["partyId", "partyName"]}}}, "required": ["transactionId", "serviceType", "date", "amount", "partiesDetails"], "title": "TransactionService", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Create a JSON object for tracking a shipment, including properties like trackingNumber, origin, destination, and status.", "Schema": {"properties": {"trackingNumber": {"title": "Tracking Number", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "in transit", "delivered", "delayed", "lost"]}}, "required": ["trackingNumber", "origin", "destination", "status"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Develop a JSON schema for a cargo manifest, including properties such as manifestID, flightNumber, cargoDetails, and estimated time of arrival.", "Schema": {"properties": {"manifestID": {"title": "Manifest ID", "type": "string"}, "flightNumber": {"title": "Flight Number", "type": "string"}, "cargoDetails": {"title": "Cargo Details", "type": "array", "items": {"type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["description", "weight", "quantity"]}}, "estimatedTimeOfArrival": {"title": "Estimated Time of Arrival", "type": "string", "format": "date-time"}}, "required": ["manifestID", "flightNumber", "cargoDetails", "estimatedTimeOfArrival"], "title": "CargoManifest", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Construct a JSON object for a logistics dashboard, including properties like totalShipments, onTimeDeliveryRate, averageDeliveryTime, and pendingShipments.", "Schema": {"properties": {"totalShipments": {"title": "Total Shipments", "type": "integer"}, "onTimeDeliveryRate": {"title": "On Time Delivery Rate", "type": "number", "minimum": 0, "maximum": 100}, "averageDeliveryTime": {"title": "Average Delivery Time", "type": "number"}, "pendingShipments": {"title": "Pending Shipments", "type": "integer"}}, "required": ["totalShipments", "onTimeDeliveryRate", "averageDeliveryTime", "pendingShipments"], "title": "LogisticsDashboard", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Design a JSON object for a flight schedule, including properties such as flightID, departureTime, arrivalTime, and aircraftType.", "Schema": {"properties": {"flightID": {"title": "Flight ID", "type": "string"}, "departureTime": {"title": "Departure Time", "type": "string", "format": "date-time"}, "arrivalTime": {"title": "Arrival Time", "type": "string", "format": "date-time"}, "aircraftType": {"title": "Aircraft Type", "type": "string"}}, "required": ["flightID", "departureTime", "arrivalTime", "aircraftType"], "title": "FlightSchedule", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Generate a JSON object for an air freight invoice, including properties like invoiceNumber, sender, recipient, itemizedCharges, and totalAmount.", "Schema": {"properties": {"invoiceNumber": {"title": "Invoice Number", "type": "string"}, "sender": {"title": "Sender", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "recipient": {"title": "Recipient", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "itemizedCharges": {"title": "Itemized Charges", "type": "array", "items": {"type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["description", "amount"]}}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["invoiceNumber", "sender", "recipient", "itemizedCharges", "totalAmount"], "title": "AirFreightInvoice", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines (New name)", "Task": "Create a JSON object for storing flight reservation details, including passenger information, flight details, and seat preferences.", "Schema": {"properties": {"passengerInfo": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "passportNumber": {"type": "string"}}, "required": ["firstName", "lastName", "passportNumber"]}, "flightDetails": {"type": "object", "properties": {"flightNumber": {"type": "string"}, "departureAirport": {"type": "string"}, "arrivalAirport": {"type": "string"}, "departureTime": {"type": "string", "format": "date-time"}, "arrivalTime": {"type": "string", "format": "date-time"}}, "required": ["flightNumber", "departureAirport", "arrivalAirport", "departureTime", "arrivalTime"]}, "seatPreferences": {"type": "object", "properties": {"seatType": {"type": "string"}, "additionalRequests": {"type": "array", "items": {"type": "string"}}}, "required": ["seatType"]}}, "required": ["passengerInfo", "flightDetails", "seatPreferences"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines (New name)", "Task": "Develop a JSON object for tracking luggage information, including baggage tag number, weight, and status updates.", "Schema": {"properties": {"baggageTagNumber": {"type": "string"}, "weight": {"type": "number"}, "statusUpdates": {"type": "array", "items": {"type": "object", "properties": {"timestamp": {"type": "string", "format": "date-time"}, "location": {"type": "string"}, "status": {"type": "string"}}, "required": ["timestamp", "location", "status"]}}}, "required": ["baggageTagNumber", "weight", "statusUpdates"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines (New name)", "Task": "Construct a JSON object for a flight manifest, including a list of passengers, crew members, and flight details.", "Schema": {"properties": {"passengers": {"type": "array", "items": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "seatNumber": {"type": "string"}}, "required": ["firstName", "lastName", "seatNumber"]}}, "crewMembers": {"type": "array", "items": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "role": {"type": "string"}}, "required": ["firstName", "lastName", "role"]}}, "flightDetails": {"type": "object", "properties": {"flightNumber": {"type": "string"}, "aircraftType": {"type": "string"}, "departureTime": {"type": "string", "format": "date-time"}, "arrivalTime": {"type": "string", "format": "date-time"}}, "required": ["flightNumber", "aircraftType", "departureTime", "arrivalTime"]}}, "required": ["passengers", "crewMembers", "flightDetails"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines (New name)", "Task": "Design a JSON object for an in-flight service request, including seat number, service type, and any special instructions.", "Schema": {"properties": {"seatNumber": {"type": "string"}, "serviceType": {"type": "string"}, "specialInstructions": {"type": "string"}}, "required": ["seatNumber", "serviceType"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines (New name)", "Task": "Generate a JSON object representing a frequent flyer profile, including member ID, accumulated miles, and tier status.", "Schema": {"properties": {"memberID": {"type": "string"}, "accumulatedMiles": {"type": "number"}, "tierStatus": {"type": "string"}}, "required": ["memberID", "accumulatedMiles", "tierStatus"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Create a JSON object for tracking a shipment, including properties like trackingNumber, origin, destination, and estimated delivery date.", "Schema": {"properties": {"trackingNumber": {"title": "Tracking Number", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedDeliveryDate": {"title": "Estimated Delivery Date", "type": "string", "format": "date"}}, "required": ["trackingNumber", "origin", "destination", "estimatedDeliveryDate"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Develop a JSON schema for a logistics dashboard, including properties such as totalShipments, onTimeDeliveryRate, averageDeliveryTime, and pendingShipments.", "Schema": {"properties": {"totalShipments": {"title": "Total Shipments", "type": "integer"}, "onTimeDeliveryRate": {"title": "On-Time Delivery Rate", "type": "number"}, "averageDeliveryTime": {"title": "Average Delivery Time", "type": "number"}, "pendingShipments": {"title": "Pending Shipments", "type": "integer"}}, "required": ["totalShipments", "onTimeDeliveryRate", "averageDeliveryTime", "pendingShipments"], "title": "LogisticsDashboard", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Construct a JSON object for a courier delivery record, including properties like packageId, sender, receiver, deliveryStatus, and timestamp.", "Schema": {"properties": {"packageId": {"title": "Package ID", "type": "string"}, "sender": {"title": "Sender", "type": "string"}, "receiver": {"title": "Receiver", "type": "string"}, "deliveryStatus": {"title": "Delivery Status", "type": "string", "enum": ["pending", "in transit", "delivered", "delayed", "lost"]}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["packageId", "sender", "receiver", "deliveryStatus", "timestamp"], "title": "CourierDeliveryRecord", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Design a JSON object for customs clearance information, including properties such as declarationNumber, items, totalValue, and clearanceStatus.", "Schema": {"properties": {"declarationNumber": {"title": "Declaration Number", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "value": {"title": "Value", "type": "number"}}, "required": ["description", "quantity", "value"]}}, "totalValue": {"title": "Total Value", "type": "number"}, "clearanceStatus": {"title": "Clearance Status", "type": "string", "enum": ["pending", "cleared", "rejected", "under review"]}}, "required": ["declarationNumber", "items", "totalValue", "clearanceStatus"], "title": "CustomsClearanceInfo", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Air Freight & Logistics", "Task": "Generate a JSON object representing a package's handling instructions, including properties like packageId, fragile, keepUpright, and temperatureSensitive.", "Schema": {"properties": {"packageId": {"title": "Package ID", "type": "string"}, "fragile": {"title": "Fragile", "type": "boolean"}, "keepUpright": {"title": "Keep Upright", "type": "boolean"}, "temperatureSensitive": {"title": "Temperature Sensitive", "type": "boolean"}}, "required": ["packageId", "fragile", "keepUpright", "temperatureSensitive"], "title": "HandlingInstructions", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Create a JSON object for storing client consultation details, including client name, service type, consultation date, and consultant notes.", "Schema": {"properties": {"clientName": {"title": "Client Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "consultationDate": {"format": "date", "title": "Consultation Date", "type": "string"}, "consultantNotes": {"title": "Consultant Notes", "type": "string"}}, "required": ["clientName", "serviceType", "consultationDate", "consultantNotes"], "title": "ClientConsultation", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Develop a JSON schema for a market research report, including properties such as reportTitle, publicationDate, industrySegment, and keyFindings.", "Schema": {"properties": {"reportTitle": {"title": "Report Title", "type": "string"}, "publicationDate": {"format": "date", "title": "Publication Date", "type": "string"}, "industrySegment": {"title": "Industry Segment", "type": "string"}, "keyFindings": {"title": "Key Findings", "type": "array", "items": {"type": "string"}}}, "required": ["reportTitle", "publicationDate", "industrySegment", "keyFindings"], "title": "MarketResearchReport", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Construct a JSON object for a legal case file, including properties like caseNumber, partiesInvolved, caseDetails, and status.", "Schema": {"properties": {"caseNumber": {"title": "Case Number", "type": "string"}, "partiesInvolved": {"title": "Parties Involved", "type": "array", "items": {"type": "string"}}, "caseDetails": {"title": "Case Details", "type": "string"}, "status": {"title": "Status", "type": "string"}}, "required": ["caseNumber", "partiesInvolved", "caseDetails", "status"], "title": "LegalCaseFile", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Design a JSON object for tracking project milestones, including properties such as projectName, milestoneName, dueDate, and completionStatus.", "Schema": {"properties": {"projectName": {"title": "Project Name", "type": "string"}, "milestoneName": {"title": "Milestone Name", "type": "string"}, "dueDate": {"format": "date", "title": "Due Date", "type": "string"}, "completionStatus": {"title": "Completion Status", "type": "string"}}, "required": ["projectName", "milestoneName", "dueDate", "completionStatus"], "title": "ProjectMilestone", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Generate a JSON object for an employee training session, including properties like sessionTitle, trainer, scheduledTime, and attendees.", "Schema": {"properties": {"sessionTitle": {"title": "Session Title", "type": "string"}, "trainer": {"title": "Trainer", "type": "string"}, "scheduledTime": {"format": "date-time", "title": "Scheduled Time", "type": "string"}, "attendees": {"title": "Attendees", "type": "array", "items": {"type": "string"}}}, "required": ["sessionTitle", "trainer", "scheduledTime", "attendees"], "title": "EmployeeTrainingSession", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Create a JSON object for storing details of a security service contract, including properties like contractID, clientName, serviceType, startDate, endDate, and terms.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "terms": {"title": "Terms", "type": "string"}}, "required": ["contractID", "clientName", "serviceType", "startDate", "endDate"], "title": "SecurityServiceContract", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Develop a JSON object for logging a security incident report, with properties such as reportID, incidentDate, incidentType, affectedAreas, and responseActions.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "incidentDate": {"title": "Incident Date", "type": "string", "format": "date-time"}, "incidentType": {"title": "Incident Type", "type": "string"}, "affectedAreas": {"title": "Affected Areas", "type": "array", "items": {"type": "string"}}, "responseActions": {"title": "Response Actions", "type": "string"}}, "required": ["reportID", "incidentDate", "incidentType", "affectedAreas", "responseActions"], "title": "SecurityIncidentReport", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Construct a JSON object for a security personnel profile, including properties like employeeID, fullName, position, certifications, and shiftSchedule.", "Schema": {"properties": {"employeeID": {"title": "Employee ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "position": {"title": "Position", "type": "string"}, "certifications": {"title": "Certifications", "type": "array", "items": {"type": "string"}}, "shiftSchedule": {"title": "Shift Schedule", "type": "object", "properties": {"shiftStart": {"title": "Shift Start", "type": "string", "format": "time"}, "shiftEnd": {"title": "Shift End", "type": "string", "format": "time"}}, "required": ["shiftStart", "shiftEnd"]}}, "required": ["employeeID", "fullName", "position"], "title": "SecurityPersonnelProfile", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Design a JSON object for tracking security equipment inventory, with properties like equipmentID, equipmentName, quantity, location, and maintenanceSchedule.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "equipmentName": {"title": "Equipment Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "array", "items": {"type": "object", "properties": {"maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "technician": {"title": "Technician", "type": "string"}}, "required": ["maintenanceDate", "technician"]}}}, "required": ["equipmentID", "equipmentName", "quantity", "location"], "title": "SecurityEquipmentInventory", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Commercial Services & Supplies", "Task": "Generate a JSON object for a client's security assessment, including properties like assessmentID, clientID, assessmentDate, vulnerabilities, and recommendations.", "Schema": {"properties": {"assessmentID": {"title": "Assessment ID", "type": "string"}, "clientID": {"title": "Client ID", "type": "string"}, "assessmentDate": {"title": "Assessment Date", "type": "string", "format": "date"}, "vulnerabilities": {"title": "Vulnerabilities", "type": "array", "items": {"type": "string"}}, "recommendations": {"title": "Recommendations", "type": "array", "items": {"type": "string"}}}, "required": ["assessmentID", "clientID", "assessmentDate", "vulnerabilities", "recommendations"], "title": "SecurityAssessment", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Create a JSON object for storing ship cargo details, including properties like cargoID, cargoType, weight, and destination port.", "Schema": {"properties": {"cargoID": {"title": "Cargo ID", "type": "string"}, "cargoType": {"title": "Cargo Type", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "destinationPort": {"title": "Destination Port", "type": "string"}}, "required": ["cargoID", "cargoType", "weight", "destinationPort"], "title": "ShipCargoDetails", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Develop a JSON schema for a vessel tracking system, with properties such as vesselID, currentLocation, destination, and estimatedTimeOfArrival.", "Schema": {"properties": {"vesselID": {"title": "Vessel ID", "type": "string"}, "currentLocation": {"title": "Current Location", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedTimeOfArrival": {"title": "Estimated Time of Arrival", "type": "string", "format": "date-time"}}, "required": ["vesselID", "currentLocation", "destination", "estimatedTimeOfArrival"], "title": "VesselTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Construct a JSON object for a port's docking schedule, including properties like dockID, vesselName, arrivalDate, and departureDate.", "Schema": {"properties": {"dockID": {"title": "Dock ID", "type": "string"}, "vesselName": {"title": "Vessel Name", "type": "string"}, "arrivalDate": {"title": "Arrival Date", "type": "string", "format": "date"}, "departureDate": {"title": "Departure Date", "type": "string", "format": "date"}}, "required": ["dockID", "vesselName", "arrivalDate", "departureDate"], "title": "DockingSchedule", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Design a JSON object for a maritime incident report, with properties such as reportID, incidentType, affectedVessels, and incidentDate.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "incidentType": {"title": "Incident Type", "type": "string"}, "affectedVessels": {"title": "Affected Vessels", "type": "array", "items": {"type": "string"}}, "incidentDate": {"title": "Incident Date", "type": "string", "format": "date-time"}}, "required": ["reportID", "incidentType", "affectedVessels", "incidentDate"], "title": "MaritimeIncidentReport", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Generate a JSON object representing a ship's maintenance log, including properties like logID, maintenanceDate, maintenanceType, and performedBy.", "Schema": {"properties": {"logID": {"title": "Log ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "performedBy": {"title": "Performed By", "type": "string"}}, "required": ["logID", "maintenanceDate", "maintenanceType", "performedBy"], "title": "ShipMaintenanceLog", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Create a JSON object for storing client consultation details, including client name, service type, consultation date, and consultant notes.", "Schema": {"properties": {"clientName": {"title": "Client Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "consultationDate": {"title": "Consultation Date", "type": "string", "format": "date"}, "consultantNotes": {"title": "Consultant Notes", "type": "string"}}, "required": ["clientName", "serviceType", "consultationDate", "consultantNotes"], "title": "ClientConsultation", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Develop a JSON schema for a market research survey result, including survey ID, questions, participant demographics, and responses.", "Schema": {"properties": {"surveyId": {"title": "Survey ID", "type": "string"}, "questions": {"title": "Questions", "type": "array", "items": {"type": "string"}}, "participantDemographics": {"title": "Participant Demographics", "type": "object", "properties": {"age": {"title": "Age", "type": "integer"}, "gender": {"title": "Gender", "type": "string"}, "location": {"title": "Location", "type": "string"}}}, "responses": {"title": "Responses", "type": "array", "items": {"type": "object", "properties": {"questionId": {"title": "Question ID", "type": "string"}, "response": {"title": "Response", "type": "string"}}}}}, "required": ["surveyId", "questions", "participantDemographics", "responses"], "title": "MarketResearchSurvey", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Construct a JSON object for an architectural project proposal, including project name, client details, estimated cost, and design specifications.", "Schema": {"properties": {"projectName": {"title": "Project Name", "type": "string"}, "clientDetails": {"title": "Client Details", "type": "object", "properties": {"clientName": {"title": "Client Name", "type": "string"}, "clientContact": {"title": "Client Contact", "type": "string"}}}, "estimatedCost": {"title": "Estimated Cost", "type": "number"}, "designSpecifications": {"title": "Design Specifications", "type": "string"}}, "required": ["projectName", "clientDetails", "estimatedCost", "designSpecifications"], "title": "ArchitecturalProjectProposal", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Design a JSON object for a business information report, including company name, industry, financials, and risk assessment.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "industry": {"title": "Industry", "type": "string"}, "financials": {"title": "Financials", "type": "object", "properties": {"revenue": {"title": "Revenue", "type": "number"}, "profit": {"title": "Profit", "type": "number"}, "assets": {"title": "Assets", "type": "number"}}}, "riskAssessment": {"title": "Risk Assessment", "type": "string"}}, "required": ["companyName", "industry", "financials", "riskAssessment"], "title": "BusinessInformationReport", "type": "object"}}
{"Category": "Commercial & Professional Services", "SubCategory": "Professional Services", "Task": "Generate a JSON object for a testing and certification service record, including test ID, product details, test results, and certification status.", "Schema": {"properties": {"testId": {"title": "Test ID", "type": "string"}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}}}, "testResults": {"title": "Test Results", "type": "string"}, "certificationStatus": {"title": "Certification Status", "type": "string"}}, "required": ["testId", "productDetails", "testResults", "certificationStatus"], "title": "TestingCertificationRecord", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines", "Task": "Create a JSON object for storing flight booking information, including passenger details, flight details, and payment information.", "Schema": {"properties": {"passengerDetails": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "passportNumber": {"type": "string"}}, "required": ["firstName", "lastName", "passportNumber"]}, "flightDetails": {"type": "object", "properties": {"flightNumber": {"type": "string"}, "departureAirport": {"type": "string"}, "arrivalAirport": {"type": "string"}, "departureTime": {"type": "string", "format": "date-time"}, "arrivalTime": {"type": "string", "format": "date-time"}}, "required": ["flightNumber", "departureAirport", "arrivalAirport", "departureTime", "arrivalTime"]}, "paymentInformation": {"type": "object", "properties": {"cardType": {"type": "string"}, "cardNumber": {"type": "string"}, "expiryDate": {"type": "string", "format": "date"}, "securityCode": {"type": "string"}}, "required": ["cardType", "cardNumber", "expiryDate", "securityCode"]}}, "required": ["passengerDetails", "flightDetails", "paymentInformation"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines", "Task": "Develop a JSON object for a flight status query, including properties such as flight number, date, and status information.", "Schema": {"properties": {"flightNumber": {"type": "string"}, "date": {"type": "string", "format": "date"}, "status": {"type": "object", "properties": {"statusCode": {"type": "string"}, "statusMessage": {"type": "string"}}, "required": ["statusCode", "statusMessage"]}}, "required": ["flightNumber", "date", "status"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines", "Task": "Construct a JSON object for a passenger check-in process, including seat selection, baggage information, and boarding pass details.", "Schema": {"properties": {"seatSelection": {"type": "object", "properties": {"seatNumber": {"type": "string"}, "class": {"type": "string"}}, "required": ["seatNumber", "class"]}, "baggageInformation": {"type": "object", "properties": {"checkedBags": {"type": "integer"}, "carryOnBags": {"type": "integer"}}, "required": ["checkedBags", "carryOnBags"]}, "boardingPassDetails": {"type": "object", "properties": {"passengerName": {"type": "string"}, "flightNumber": {"type": "string"}, "gate": {"type": "string"}, "boardingTime": {"type": "string", "format": "date-time"}}, "required": ["passengerName", "flightNumber", "gate", "boardingTime"]}}, "required": ["seatSelection", "baggageInformation", "boardingPassDetails"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines", "Task": "Design a JSON object for tracking frequent flyer miles, including member information, miles earned, and redemption options.", "Schema": {"properties": {"memberInformation": {"type": "object", "properties": {"memberId": {"type": "string"}, "memberName": {"type": "string"}, "membershipLevel": {"type": "string"}}, "required": ["memberId", "memberName", "membershipLevel"]}, "milesEarned": {"type": "integer"}, "redemptionOptions": {"type": "array", "items": {"type": "object", "properties": {"optionId": {"type": "string"}, "description": {"type": "string"}, "milesRequired": {"type": "integer"}}, "required": ["optionId", "description", "milesRequired"]}}}, "required": ["memberInformation", "milesEarned", "redemptionOptions"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Passenger Airlines", "Task": "Generate a JSON object for an airline loyalty program application, including personal details, contact information, and preferences.", "Schema": {"properties": {"personalDetails": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "dateOfBirth": {"type": "string", "format": "date"}}, "required": ["firstName", "lastName", "dateOfBirth"]}, "contactInformation": {"type": "object", "properties": {"email": {"type": "string", "format": "email"}, "phoneNumber": {"type": "string"}}, "required": ["email", "phoneNumber"]}, "preferences": {"type": "object", "properties": {"seatPreference": {"type": "string"}, "mealPreference": {"type": "string"}}, "required": ["seatPreference", "mealPreference"]}}, "required": ["personalDetails", "contactInformation", "preferences"], "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for storing rail transportation schedules, including properties like trainNumber, departureTime, arrivalTime, and stations.", "Schema": {"properties": {"trainNumber": {"title": "Train Number", "type": "string"}, "departureTime": {"title": "Departure Time", "type": "string", "format": "time"}, "arrivalTime": {"title": "Arrival Time", "type": "string", "format": "time"}, "stations": {"title": "Stations", "type": "array", "items": {"type": "object", "properties": {"stationName": {"title": "Station Name", "type": "string"}, "arrivalTime": {"title": "Arrival Time", "type": "string", "format": "time"}, "departureTime": {"title": "Departure Time", "type": "string", "format": "time"}}, "required": ["stationName", "arrivalTime", "departureTime"]}}}, "required": ["trainNumber", "departureTime", "arrivalTime", "stations"], "title": "RailSchedule", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for tracking real-time train locations, with properties such as trainNumber, currentStation, nextStation, and estimatedArrival.", "Schema": {"properties": {"trainNumber": {"title": "Train Number", "type": "string"}, "currentStation": {"title": "Current Station", "type": "string"}, "nextStation": {"title": "Next Station", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "time"}}, "required": ["trainNumber", "currentStation", "nextStation", "estimatedArrival"], "title": "RealTimeTrainLocation", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for a train's seating chart, including properties like carriageNumber, seatNumber, classType, and availability.", "Schema": {"properties": {"carriageNumber": {"title": "Carriage Number", "type": "string"}, "seatNumber": {"title": "Seat Number", "type": "string"}, "classType": {"title": "Class Type", "type": "string"}, "availability": {"title": "Availability", "type": "boolean"}}, "required": ["carriageNumber", "seatNumber", "classType", "availability"], "title": "TrainSeatingChart", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for train fare information, including properties like route, classType, price, and discounts.", "Schema": {"properties": {"route": {"title": "Route", "type": "string"}, "classType": {"title": "Class Type", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "discounts": {"title": "Discounts", "type": "array", "items": {"type": "object", "properties": {"discountType": {"title": "Discount Type", "type": "string"}, "amount": {"title": "Amount", "type": "number", "format": "float"}}, "required": ["discountType", "amount"]}}}, "required": ["route", "classType", "price"], "title": "TrainFareInfo", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object representing a train maintenance log, with properties like trainNumber, maintenanceDate, issues, and servicePerformed.", "Schema": {"properties": {"trainNumber": {"title": "Train Number", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "issues": {"title": "Issues", "type": "array", "items": {"type": "string"}}, "servicePerformed": {"title": "Service Performed", "type": "array", "items": {"type": "string"}}}, "required": ["trainNumber", "maintenanceDate", "issues", "servicePerformed"], "title": "TrainMaintenanceLog", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for storing rail transportation company details, including properties like companyName, serviceType, and operationalRoutes.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string", "enum": ["goods", "passenger"]}, "operationalRoutes": {"title": "Operational Routes", "type": "array", "items": {"type": "object", "properties": {"routeName": {"title": "Route Name", "type": "string"}, "startPoint": {"title": "Start Point", "type": "string"}, "endPoint": {"title": "End Point", "type": "string"}}, "required": ["routeName", "startPoint", "endPoint"]}}}, "required": ["companyName", "serviceType", "operationalRoutes"], "title": "RailTransportationCompany", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for a rail transportation schedule, including properties like trainNumber, departureTime, arrivalTime, and daysOfOperation.", "Schema": {"properties": {"trainNumber": {"title": "Train Number", "type": "string"}, "departureTime": {"title": "Departure Time", "type": "string", "format": "time"}, "arrivalTime": {"title": "Arrival Time", "type": "string", "format": "time"}, "daysOfOperation": {"title": "Days of Operation", "type": "array", "items": {"type": "string", "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]}}}, "required": ["trainNumber", "departureTime", "arrivalTime", "daysOfOperation"], "title": "RailTransportationSchedule", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for tracking rail cargo, including properties like cargoID, contentsDescription, origin, destination, and estimatedArrival.", "Schema": {"properties": {"cargoID": {"title": "Cargo ID", "type": "string"}, "contentsDescription": {"title": "Contents Description", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["cargoID", "contentsDescription", "origin", "destination", "estimatedArrival"], "title": "RailCargoTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for a passenger ticket, including properties like ticketID, passengerName, journeyDate, seatNumber, and fareDetails.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "passengerName": {"title": "Passenger Name", "type": "string"}, "journeyDate": {"title": "Journey Date", "type": "string", "format": "date"}, "seatNumber": {"title": "Seat Number", "type": "string"}, "fareDetails": {"title": "Fare Details", "type": "object", "properties": {"amount": {"title": "Amount", "type": "number"}, "currency": {"title": "Currency", "type": "string"}}, "required": ["amount", "currency"]}}, "required": ["ticketID", "passengerName", "journeyDate", "seatNumber", "fareDetails"], "title": "PassengerTicket", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object for rail maintenance records, including properties like recordID, maintenanceType, datePerformed, performedBy, and nextScheduledMaintenance.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "datePerformed": {"title": "Date Performed", "type": "string", "format": "date"}, "performedBy": {"title": "Performed By", "type": "string"}, "nextScheduledMaintenance": {"title": "Next Scheduled Maintenance", "type": "string", "format": "date"}}, "required": ["recordID", "maintenanceType", "datePerformed", "performedBy", "nextScheduledMaintenance"], "title": "RailMaintenanceRecord", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for a trucking route, including properties like routeID, startPoint, endPoint, and estimatedTime.", "Schema": {"properties": {"routeID": {"title": "Route ID", "type": "string"}, "startPoint": {"title": "Start Point", "type": "string"}, "endPoint": {"title": "End Point", "type": "string"}, "estimatedTime": {"title": "Estimated Time", "type": "string"}}, "required": ["routeID", "startPoint", "endPoint", "estimatedTime"], "title": "TruckingRoute", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for tracking a vehicle's maintenance history, with properties such as vehicleID, serviceDate, serviceType, and mechanicNotes.", "Schema": {"properties": {"vehicleID": {"title": "Vehicle ID", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "serviceType": {"title": "Service Type", "type": "string"}, "mechanicNotes": {"title": "Mechanic Notes", "type": "string"}}, "required": ["vehicleID", "serviceDate", "serviceType"], "title": "VehicleMaintenance", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for a delivery manifest, including properties like manifestID, driverID, vehicleID, deliveryItems, and deliveryStatus.", "Schema": {"properties": {"manifestID": {"title": "Manifest ID", "type": "string"}, "driverID": {"title": "Driver ID", "type": "string"}, "vehicleID": {"title": "Vehicle ID", "type": "string"}, "deliveryItems": {"title": "Delivery Items", "type": "array", "items": {"type": "string"}}, "deliveryStatus": {"title": "Delivery Status", "type": "string"}}, "required": ["manifestID", "driverID", "vehicleID", "deliveryItems", "deliveryStatus"], "title": "DeliveryManifest", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for a freight bill, including properties such as billID, shipperDetails, receiverDetails, itemizedCharges, and paymentStatus.", "Schema": {"properties": {"billID": {"title": "Bill ID", "type": "string"}, "shipperDetails": {"title": "Shipper Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "receiverDetails": {"title": "Receiver Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "itemizedCharges": {"title": "Itemized Charges", "type": "array", "items": {"type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["description", "amount"]}}, "paymentStatus": {"title": "Payment Status", "type": "string"}}, "required": ["billID", "shipperDetails", "receiverDetails", "itemizedCharges", "paymentStatus"], "title": "FreightBill", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object for a logistics dashboard, with properties like totalShipments, onTimeDeliveryRate, averageDeliveryTime, and incidentReports.", "Schema": {"properties": {"totalShipments": {"title": "Total Shipments", "type": "integer"}, "onTimeDeliveryRate": {"title": "On Time Delivery Rate", "type": "number", "format": "float"}, "averageDeliveryTime": {"title": "Average Delivery Time", "type": "string"}, "incidentReports": {"title": "Incident Reports", "type": "array", "items": {"type": "object", "properties": {"reportID": {"title": "Report ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "resolution": {"title": "Resolution", "type": "string"}}, "required": ["reportID", "description"]}}}, "required": ["totalShipments", "onTimeDeliveryRate", "averageDeliveryTime", "incidentReports"], "title": "LogisticsDashboard", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Create a JSON object for storing ship cargo details, including properties like cargoID, cargoType, weight, and destination port.", "Schema": {"properties": {"cargoID": {"title": "Cargo ID", "type": "string"}, "cargoType": {"title": "Cargo Type", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "destinationPort": {"title": "Destination Port", "type": "string"}}, "required": ["cargoID", "cargoType", "weight", "destinationPort"], "title": "ShipCargoDetails", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Develop a JSON schema for a maritime passenger manifest, including properties such as manifestID, passengerName, cabinNumber, and emergencyContact.", "Schema": {"properties": {"manifestID": {"title": "Manifest ID", "type": "string"}, "passengerName": {"title": "Passenger Name", "type": "string"}, "cabinNumber": {"title": "Cabin Number", "type": "string"}, "emergencyContact": {"title": "Emergency Contact", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["name", "phone"]}}, "required": ["manifestID", "passengerName", "cabinNumber", "emergencyContact"], "title": "MaritimePassengerManifest", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Construct a JSON object for tracking ship maintenance records, including properties like maintenanceID, date, type of maintenance, and cost.", "Schema": {"properties": {"maintenanceID": {"title": "Maintenance ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "typeOfMaintenance": {"title": "Type of Maintenance", "type": "string"}, "cost": {"title": "Cost", "type": "number"}}, "required": ["maintenanceID", "date", "typeOfMaintenance", "cost"], "title": "ShipMaintenanceRecord", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Design a JSON object for a ship's voyage log, capturing details such as voyageID, departureDate, arrivalDate, originPort, and destinationPort.", "Schema": {"properties": {"voyageID": {"title": "Voyage ID", "type": "string"}, "departureDate": {"title": "Departure Date", "type": "string", "format": "date-time"}, "arrivalDate": {"title": "Arrival Date", "type": "string", "format": "date-time"}, "originPort": {"title": "Origin Port", "type": "string"}, "destinationPort": {"title": "Destination Port", "type": "string"}}, "required": ["voyageID", "departureDate", "arrivalDate", "originPort", "destinationPort"], "title": "ShipVoyageLog", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Marine Transportation (New Name)", "Task": "Generate a JSON object for a maritime environmental compliance report, including properties like reportID, inspectionDate, violations, and correctiveActions.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "violations": {"title": "Violations", "type": "array", "items": {"type": "string"}}, "correctiveActions": {"title": "Corrective Actions", "type": "array", "items": {"type": "string"}}}, "required": ["reportID", "inspectionDate", "violations", "correctiveActions"], "title": "MaritimeEnvironmentalComplianceReport", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for storing passenger details for ground transportation bookings, including properties like fullName, pickupLocation, dropoffLocation, and travelDate.", "Schema": {"properties": {"fullName": {"title": "Full Name", "type": "string"}, "pickupLocation": {"title": "Pickup Location", "type": "string"}, "dropoffLocation": {"title": "Dropoff Location", "type": "string"}, "travelDate": {"title": "Travel Date", "type": "string", "format": "date"}}, "required": ["fullName", "pickupLocation", "dropoffLocation", "travelDate"], "title": "PassengerDetails", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for a vehicle tracking system, including properties like vehicleID, currentLocation, destination, and estimatedTimeOfArrival.", "Schema": {"properties": {"vehicleID": {"title": "Vehicle ID", "type": "string"}, "currentLocation": {"title": "Current Location", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedTimeOfArrival": {"title": "Estimated Time of Arrival", "type": "string"}}, "required": ["vehicleID", "currentLocation", "destination", "estimatedTimeOfArrival"], "title": "VehicleTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for a ride-hailing service fare estimate, including properties like distance, duration, baseFare, and surgeMultiplier.", "Schema": {"properties": {"distance": {"title": "Distance", "type": "number"}, "duration": {"title": "Duration", "type": "number"}, "baseFare": {"title": "Base Fare", "type": "number"}, "surgeMultiplier": {"title": "Surge Multiplier", "type": "number"}}, "required": ["distance", "duration", "baseFare", "surgeMultiplier"], "title": "FareEstimate", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for a public transit schedule, including properties like routeNumber, startTime, endTime, and stops.", "Schema": {"properties": {"routeNumber": {"title": "Route Number", "type": "string"}, "startTime": {"title": "Start Time", "type": "string", "format": "time"}, "endTime": {"title": "End Time", "type": "string", "format": "time"}, "stops": {"title": "Stops", "type": "array", "items": {"type": "string"}}}, "required": ["routeNumber", "startTime", "endTime", "stops"], "title": "TransitSchedule", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object for a cargo shipment record, including properties like shipmentID, origin, destination, weight, and contents.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "contents": {"title": "Contents", "type": "array", "items": {"type": "string"}}}, "required": ["shipmentID", "origin", "destination", "weight", "contents"], "title": "CargoShipmentRecord", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for storing vehicle rental information, including properties like vehicleType, rentalDuration, pickupLocation, and dropoffLocation.", "Schema": {"properties": {"vehicleType": {"title": "Vehicle Type", "type": "string"}, "rentalDuration": {"title": "Rental Duration", "type": "integer", "description": "Duration in hours"}, "pickupLocation": {"title": "Pickup Location", "type": "string"}, "dropoffLocation": {"title": "Dropoff Location", "type": "string"}}, "required": ["vehicleType", "rentalDuration", "pickupLocation", "dropoffLocation"], "title": "VehicleRental", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for taxi trip data, including properties such as tripID, driverID, fare, distance, and timestamp.", "Schema": {"properties": {"tripID": {"title": "Trip ID", "type": "string"}, "driverID": {"title": "Driver ID", "type": "string"}, "fare": {"title": "Fare", "type": "number", "format": "float"}, "distance": {"title": "Distance", "type": "number", "format": "float", "description": "Distance in miles"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["tripID", "driverID", "fare", "distance", "timestamp"], "title": "TaxiTrip", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for a passenger profile, including properties like passengerID, name, frequentRoutes, and paymentMethod.", "Schema": {"properties": {"passengerID": {"title": "Passenger ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "frequentRoutes": {"title": "Frequent Routes", "type": "array", "items": {"type": "string"}}, "paymentMethod": {"title": "Payment Method", "type": "string"}}, "required": ["passengerID", "name", "frequentRoutes", "paymentMethod"], "title": "PassengerProfile", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for tracking vehicle maintenance records, with properties such as vehicleID, serviceDate, serviceType, and serviceNotes.", "Schema": {"properties": {"vehicleID": {"title": "Vehicle ID", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "serviceType": {"title": "Service Type", "type": "string"}, "serviceNotes": {"title": "Service Notes", "type": "string"}}, "required": ["vehicleID", "serviceDate", "serviceType", "serviceNotes"], "title": "VehicleMaintenance", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object for a logistics tracking system, including properties like shipmentID, origin, destination, estimatedArrival, and status.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "in transit", "delivered", "delayed", "cancelled"]}}, "required": ["shipmentID", "origin", "destination", "estimatedArrival", "status"], "title": "LogisticsTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for a cargo shipment entry, including properties like shipmentID, origin, destination, weight, and content description.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "contentDescription": {"title": "Content Description", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "weight", "contentDescription"], "title": "CargoShipmentEntry", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for tracking a vehicle's route, including properties such as vehicleID, currentLocation, nextStop, and estimatedArrivalTime.", "Schema": {"properties": {"vehicleID": {"title": "Vehicle ID", "type": "string"}, "currentLocation": {"title": "Current Location", "type": "string"}, "nextStop": {"title": "Next Stop", "type": "string"}, "estimatedArrivalTime": {"title": "Estimated Arrival Time", "type": "string", "format": "date-time"}}, "required": ["vehicleID", "currentLocation", "nextStop", "estimatedArrivalTime"], "title": "VehicleRouteTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for a driver profile, including properties like driverID, name, licenseNumber, and assignedVehicleID.", "Schema": {"properties": {"driverID": {"title": "Driver ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "licenseNumber": {"title": "License Number", "type": "string"}, "assignedVehicleID": {"title": "Assigned Vehicle ID", "type": "string"}}, "required": ["driverID", "name", "licenseNumber", "assignedVehicleID"], "title": "DriverProfile", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for a maintenance report, including properties such as reportID, vehicleID, maintenanceDate, issues, and actionsTaken.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "vehicleID": {"title": "Vehicle ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "issues": {"title": "Issues", "type": "array", "items": {"type": "string"}}, "actionsTaken": {"title": "Actions Taken", "type": "array", "items": {"type": "string"}}}, "required": ["reportID", "vehicleID", "maintenanceDate", "issues", "actionsTaken"], "title": "MaintenanceReport", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object for a fuel log entry, including properties like logID, vehicleID, fuelType, quantity, and fillDate.", "Schema": {"properties": {"logID": {"title": "Log ID", "type": "string"}, "vehicleID": {"title": "Vehicle ID", "type": "string"}, "fuelType": {"title": "Fuel Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "fillDate": {"title": "Fill Date", "type": "string", "format": "date"}}, "required": ["logID", "vehicleID", "fuelType", "quantity", "fillDate"], "title": "FuelLogEntry", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for a freight shipment record, including properties like shipmentID, origin, destination, weight, and estimated delivery date.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "estimatedDeliveryDate": {"format": "date", "title": "Estimated Delivery Date", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "weight", "estimatedDeliveryDate"], "title": "FreightShipmentRecord", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for tracking a vehicle's maintenance history, with properties such as vehicleID, serviceDate, serviceType, and serviceNotes.", "Schema": {"properties": {"vehicleID": {"title": "Vehicle ID", "type": "string"}, "serviceDate": {"format": "date", "title": "Service Date", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "serviceNotes": {"title": "Service Notes", "type": "string"}}, "required": ["vehicleID", "serviceDate", "serviceType"], "title": "VehicleMaintenanceHistory", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for a driver profile, including properties like driverID, fullName, licenseNumber, and drivingHistory.", "Schema": {"properties": {"driverID": {"title": "Driver ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "licenseNumber": {"title": "License Number", "type": "string"}, "drivingHistory": {"title": "Driving History", "type": "array", "items": {"type": "string"}}}, "required": ["driverID", "fullName", "licenseNumber"], "title": "DriverProfile", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for a cargo manifest, including properties such as manifestID, truckID, driverID, cargoItems, and transitStatus.", "Schema": {"properties": {"manifestID": {"title": "Manifest ID", "type": "string"}, "truckID": {"title": "Truck ID", "type": "string"}, "driverID": {"title": "Driver ID", "type": "string"}, "cargoItems": {"title": "Cargo Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemID", "description", "quantity"]}}, "transitStatus": {"title": "Transit Status", "type": "string", "enum": ["loading", "in_transit", "delivered", "delayed"]}}, "required": ["manifestID", "truckID", "driverID", "cargoItems", "transitStatus"], "title": "CargoManifest", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object representing a logistics dashboard, including properties like totalShipments, onTimeDeliveryRate, averageTransitTime, and pendingShipments.", "Schema": {"properties": {"totalShipments": {"title": "Total Shipments", "type": "integer"}, "onTimeDeliveryRate": {"title": "On Time Delivery Rate", "type": "number", "minimum": 0, "maximum": 100}, "averageTransitTime": {"title": "Average Transit Time", "type": "number"}, "pendingShipments": {"title": "Pending Shipments", "type": "integer"}}, "required": ["totalShipments", "onTimeDeliveryRate", "averageTransitTime", "pendingShipments"], "title": "LogisticsDashboard", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Create a JSON object for storing airport information, including properties like airportCode, name, location, and number of runways.", "Schema": {"properties": {"airportCode": {"title": "Airport Code", "type": "string"}, "name": {"title": "Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "numberOfRunways": {"title": "Number of Runways", "type": "integer"}}, "required": ["airportCode", "name", "location", "numberOfRunways"], "title": "AirportInformation", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Develop a JSON schema for representing a flight schedule, with properties such as flightNumber, departureAirport, arrivalAirport, and departureTime.", "Schema": {"properties": {"flightNumber": {"title": "Flight Number", "type": "string"}, "departureAirport": {"title": "Departure Airport", "type": "string"}, "arrivalAirport": {"title": "Arrival Airport", "type": "string"}, "departureTime": {"title": "Departure Time", "type": "string", "format": "date-time"}}, "required": ["flightNumber", "departureAirport", "arrivalAirport", "departureTime"], "title": "FlightSchedule", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Construct a JSON object representing an airline company profile, including properties like airlineCode, companyName, allianceMembership, and fleetSize.", "Schema": {"properties": {"airlineCode": {"title": "Airline Code", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "allianceMembership": {"title": "Alliance Membership", "type": "string"}, "fleetSize": {"title": "Fleet Size", "type": "integer"}}, "required": ["airlineCode", "companyName", "allianceMembership", "fleetSize"], "title": "AirlineCompanyProfile", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Design a JSON object for a cargo shipment record, including properties such as shipmentID, origin, destination, weight, and cargoType.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "cargoType": {"title": "Cargo Type", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "weight", "cargoType"], "title": "CargoShipmentRecord", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Generate a JSON object representing a transportation network map, including properties like networkID, stations, routes, and connectivity.", "Schema": {"properties": {"networkID": {"title": "Network ID", "type": "string"}, "stations": {"title": "Stations", "type": "array", "items": {"type": "string"}}, "routes": {"title": "Routes", "type": "array", "items": {"type": "object", "properties": {"routeID": {"title": "Route ID", "type": "string"}, "startStation": {"title": "Start Station", "type": "string"}, "endStation": {"title": "End Station", "type": "string"}}, "required": ["routeID", "startStation", "endStation"]}}, "connectivity": {"title": "Connectivity", "type": "object", "properties": {"stationID": {"title": "Station ID", "type": "string"}, "connectedStations": {"title": "Connected Stations", "type": "array", "items": {"type": "string"}}}, "required": ["stationID", "connectedStations"]}}, "required": ["networkID", "stations", "routes", "connectivity"], "title": "TransportationNetworkMap", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Create a JSON object for querying airport services, including properties like serviceType, availability, and operatingHours.", "Schema": {"properties": {"serviceType": {"title": "Service Type", "type": "string"}, "availability": {"title": "Availability", "type": "boolean"}, "operatingHours": {"title": "Operating Hours", "type": "string"}}, "required": ["serviceType", "availability", "operatingHours"], "title": "AirportServicesQuery", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Develop a JSON object for airport parking information, including properties such as lotName, capacity, rates, and location.", "Schema": {"properties": {"lotName": {"title": "Lot Name", "type": "string"}, "capacity": {"title": "Capacity", "type": "integer"}, "rates": {"title": "Rates", "type": "object", "properties": {"hourly": {"title": "Hourly Rate", "type": "number"}, "daily": {"title": "Daily Rate", "type": "number"}}}, "location": {"title": "Location", "type": "string"}}, "required": ["lotName", "capacity", "rates", "location"], "title": "AirportParkingInfo", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Construct a JSON object for flight status updates, including properties like flightNumber, departureTime, arrivalTime, and status.", "Schema": {"properties": {"flightNumber": {"title": "Flight Number", "type": "string"}, "departureTime": {"title": "Departure Time", "type": "string", "format": "date-time"}, "arrivalTime": {"title": "Arrival Time", "type": "string", "format": "date-time"}, "status": {"title": "Status", "type": "string", "enum": ["On Time", "Delayed", "Cancelled", "In Flight"]}}, "required": ["flightNumber", "departureTime", "arrivalTime", "status"], "title": "FlightStatusUpdate", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Design a JSON object for airport facility maintenance requests, including properties such as facilityId, issueType, description, and priority level.", "Schema": {"properties": {"facilityId": {"title": "Facility ID", "type": "string"}, "issueType": {"title": "Issue Type", "type": "string"}, "description": {"title": "Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string", "enum": ["Low", "Medium", "High", "Urgent"]}}, "required": ["facilityId", "issueType", "description", "priorityLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Generate a JSON object for airport security incident reporting, including properties like incidentId, location, timeReported, and incidentDetails.", "Schema": {"properties": {"incidentId": {"title": "Incident ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "timeReported": {"title": "Time Reported", "type": "string", "format": "date-time"}, "incidentDetails": {"title": "Incident Details", "type": "string"}}, "required": ["incidentId", "location", "timeReported", "incidentDetails"], "title": "SecurityIncidentReport", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Create a JSON object for storing ride sharing trip details, including properties like tripId, driverId, vehicleId, pickupLocation, dropoffLocation, and fare.", "Schema": {"properties": {"tripId": {"title": "Trip ID", "type": "string"}, "driverId": {"title": "Driver ID", "type": "string"}, "vehicleId": {"title": "Vehicle ID", "type": "string"}, "pickupLocation": {"title": "Pickup Location", "type": "string"}, "dropoffLocation": {"title": "Dropoff Location", "type": "string"}, "fare": {"title": "Fare", "type": "number"}}, "required": ["tripId", "driverId", "vehicleId", "pickupLocation", "dropoffLocation", "fare"], "title": "RideSharingTripDetails", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Develop a JSON object for a vehicle rental reservation, including properties like reservationId, customerId, vehicleType, rentalPeriod, and totalCost.", "Schema": {"properties": {"reservationId": {"title": "Reservation ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "vehicleType": {"title": "Vehicle Type", "type": "string"}, "rentalPeriod": {"title": "Rental Period", "type": "object", "properties": {"start": {"format": "date-time", "title": "Start Date and Time", "type": "string"}, "end": {"format": "date-time", "title": "End Date and Time", "type": "string"}}, "required": ["start", "end"]}, "totalCost": {"title": "Total Cost", "type": "number"}}, "required": ["reservationId", "customerId", "vehicleType", "rentalPeriod", "totalCost"], "title": "VehicleRentalReservation", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Construct a JSON object for a taxi fare calculation, including properties like distanceTraveled, baseFare, timeOfDay, surgeMultiplier, and totalFare.", "Schema": {"properties": {"distanceTraveled": {"title": "Distance Traveled", "type": "number"}, "baseFare": {"title": "Base Fare", "type": "number"}, "timeOfDay": {"title": "Time of Day", "type": "string"}, "surgeMultiplier": {"title": "Surge Multiplier", "type": "number"}, "totalFare": {"title": "Total Fare", "type": "number"}}, "required": ["distanceTraveled", "baseFare", "timeOfDay", "surgeMultiplier", "totalFare"], "title": "TaxiFareCalculation", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Design a JSON object for a bus ticket booking, including properties like ticketId, passengerId, routeId, seatNumber, and journeyDate.", "Schema": {"properties": {"ticketId": {"title": "Ticket ID", "type": "string"}, "passengerId": {"title": "Passenger ID", "type": "string"}, "routeId": {"title": "Route ID", "type": "string"}, "seatNumber": {"title": "Seat Number", "type": "string"}, "journeyDate": {"format": "date", "title": "Journey Date", "type": "string"}}, "required": ["ticketId", "passengerId", "routeId", "seatNumber", "journeyDate"], "title": "BusTicketBooking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Ground Transportation (New Name)", "Task": "Generate a JSON object for a logistics delivery tracking, including properties like trackingId, senderId, receiverId, origin, destination, and deliveryStatus.", "Schema": {"properties": {"trackingId": {"title": "Tracking ID", "type": "string"}, "senderId": {"title": "Sender ID", "type": "string"}, "receiverId": {"title": "Receiver ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "deliveryStatus": {"title": "Delivery Status", "type": "string", "enum": ["pending", "in transit", "delivered", "delayed", "cancelled"]}}, "required": ["trackingId", "senderId", "receiverId", "origin", "destination", "deliveryStatus"], "title": "LogisticsDeliveryTracking", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Create a JSON object for storing highway information, including properties like highwayName, length, toll, and maintenance details.", "Schema": {"properties": {"highwayName": {"title": "Highway Name", "type": "string"}, "length": {"title": "Length", "type": "number", "description": "Length in miles"}, "toll": {"title": "Toll", "type": "boolean", "description": "Indicates if the highway has a toll"}, "maintenanceDetails": {"title": "Maintenance Details", "type": "object", "properties": {"lastInspectionDate": {"title": "Last Inspection Date", "type": "string", "format": "date"}, "maintenanceFrequency": {"title": "Maintenance Frequency", "type": "string", "description": "Frequency of maintenance activities"}}, "required": ["lastInspectionDate", "maintenanceFrequency"]}}, "required": ["highwayName", "length", "toll", "maintenanceDetails"], "title": "Highway Information", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Develop a JSON object for rail track segments, including properties such as segmentId, operationalStatus, length, and lastMaintenanceDate.", "Schema": {"properties": {"segmentId": {"title": "Segment ID", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["Operational", "Under Maintenance", "Closed"]}, "length": {"title": "Length", "type": "number", "description": "Length in kilometers"}, "lastMaintenanceDate": {"title": "Last Maintenance Date", "type": "string", "format": "date"}}, "required": ["segmentId", "operationalStatus", "length", "lastMaintenanceDate"], "title": "Rail Track Segment", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Construct a JSON object for a transportation hub, including properties like hubName, hubType, location, and capacity.", "Schema": {"properties": {"hubName": {"title": "Hub Name", "type": "string"}, "hubType": {"title": "Hub Type", "type": "string", "enum": ["Airport", "Seaport", "Train Station", "Bus Station"]}, "location": {"title": "Location", "type": "object", "properties": {"address": {"title": "Address", "type": "string"}, "city": {"title": "City", "type": "string"}, "state": {"title": "State", "type": "string"}, "country": {"title": "Country", "type": "string"}}, "required": ["address", "city", "state", "country"]}, "capacity": {"title": "Capacity", "type": "integer", "description": "Maximum number of vehicles or passengers the hub can handle"}}, "required": ["hubName", "hubType", "location", "capacity"], "title": "Transportation Hub", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Design a JSON object for a public transit route, including properties such as routeId, startLocation, endLocation, stops, and schedule.", "Schema": {"properties": {"routeId": {"title": "Route ID", "type": "string"}, "startLocation": {"title": "Start Location", "type": "string"}, "endLocation": {"title": "End Location", "type": "string"}, "stops": {"title": "Stops", "type": "array", "items": {"type": "string"}}, "schedule": {"title": "Schedule", "type": "object", "properties": {"weekdays": {"title": "Weekdays", "type": "array", "items": {"type": "string", "format": "time"}}, "weekends": {"title": "Weekends", "type": "array", "items": {"type": "string", "format": "time"}}}, "required": ["weekdays", "weekends"]}}, "required": ["routeId", "startLocation", "endLocation", "stops", "schedule"], "title": "Public Transit Route", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Generate a JSON object representing a traffic management system, including properties like systemId, sensors, signalPlan, and incidentResponsePlan.", "Schema": {"properties": {"systemId": {"title": "System ID", "type": "string"}, "sensors": {"title": "Sensors", "type": "array", "items": {"type": "object", "properties": {"sensorId": {"title": "Sensor ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["sensorId", "type", "location"]}}, "signalPlan": {"title": "Signal Plan", "type": "object", "properties": {"planId": {"title": "Plan ID", "type": "string"}, "signals": {"title": "Signals", "type": "array", "items": {"type": "object", "properties": {"signalId": {"title": "Signal ID", "type": "string"}, "timing": {"title": "Timing", "type": "integer", "description": "Timing in seconds"}}, "required": ["signalId", "timing"]}}}, "required": ["planId", "signals"]}, "incidentResponsePlan": {"title": "Incident Response Plan", "type": "object", "properties": {"planId": {"title": "Plan ID", "type": "string"}, "responseSteps": {"title": "Response Steps", "type": "array", "items": {"type": "string"}}}, "required": ["planId", "responseSteps"]}}, "required": ["systemId", "sensors", "signalPlan", "incidentResponsePlan"], "title": "Traffic Management System", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Create a JSON object for storing automobile part details, including partName, partNumber, manufacturer, and compatibility.", "Schema": {"properties": {"partName": {"title": "Part Name", "type": "string"}, "partNumber": {"title": "Part Number", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "compatibility": {"title": "Compatibility", "type": "array", "items": {"type": "string"}}}, "required": ["partName", "partNumber", "manufacturer", "compatibility"], "title": "AutomobilePartDetails", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Develop a JSON schema for a motorcycle accessory catalog entry, including accessoryName, accessoryType, price, and compatibleModels.", "Schema": {"properties": {"accessoryName": {"title": "Accessory Name", "type": "string"}, "accessoryType": {"title": "Accessory Type", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "compatibleModels": {"title": "Compatible Models", "type": "array", "items": {"type": "string"}}}, "required": ["accessoryName", "accessoryType", "price", "compatibleModels"], "title": "MotorcycleAccessoryCatalogEntry", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Construct a JSON object for tracking inventory of automobile components, including componentID, quantityAvailable, location, and reorderThreshold.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["componentID", "quantityAvailable", "location", "reorderThreshold"], "title": "AutomobileComponentInventory", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Design a JSON object for a vehicle maintenance record, including vehicleID, serviceDate, serviceType, and serviceNotes.", "Schema": {"properties": {"vehicleID": {"title": "Vehicle ID", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "serviceType": {"title": "Service Type", "type": "string"}, "serviceNotes": {"title": "Service Notes", "type": "string"}}, "required": ["vehicleID", "serviceDate", "serviceType", "serviceNotes"], "title": "VehicleMaintenanceRecord", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Generate a JSON object for a customer's vehicle purchase history, including customerID, purchaseDate, vehicleModel, and purchasePrice.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "vehicleModel": {"title": "Vehicle Model", "type": "string"}, "purchasePrice": {"title": "Purchase Price", "type": "number", "format": "float"}}, "required": ["customerID", "purchaseDate", "vehicleModel", "purchasePrice"], "title": "CustomerVehiclePurchaseHistory", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Create a JSON object for storing tire specifications, including properties like brand, model, size, and pressure rating.", "Schema": {"properties": {"brand": {"title": "Brand", "type": "string"}, "model": {"title": "Model", "type": "string"}, "size": {"title": "Size", "type": "string"}, "pressureRating": {"title": "Pressure Rating", "type": "string"}}, "required": ["brand", "model", "size", "pressureRating"], "title": "TireSpecifications", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Develop a JSON schema for a car battery, including properties such as type, voltage, capacity, and dimensions.", "Schema": {"properties": {"type": {"title": "Type", "type": "string"}, "voltage": {"title": "Voltage", "type": "number"}, "capacity": {"title": "Capacity", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "string"}}, "required": ["type", "voltage", "capacity", "dimensions"], "title": "CarBattery", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Construct a JSON object for a vehicle's brake system, detailing properties like brake type, pad material, rotor size, and ABS compatibility.", "Schema": {"properties": {"brakeType": {"title": "Brake Type", "type": "string"}, "padMaterial": {"title": "Pad Material", "type": "string"}, "rotorSize": {"title": "Rotor Size", "type": "string"}, "absCompatibility": {"title": "ABS Compatibility", "type": "boolean"}}, "required": ["brakeType", "padMaterial", "rotorSize", "absCompatibility"], "title": "VehicleBrakeSystem", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Design a JSON object for an automotive air filter, including properties such as filter type, dimensions, compatibility, and replacement interval.", "Schema": {"properties": {"filterType": {"title": "Filter Type", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "string"}, "compatibility": {"title": "Compatibility", "type": "string"}, "replacementInterval": {"title": "Replacement Interval", "type": "string"}}, "required": ["filterType", "dimensions", "compatibility", "replacementInterval"], "title": "AutomotiveAirFilter", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Generate a JSON object representing a car's suspension system, with properties like suspension type, spring rate, damping coefficient, and load capacity.", "Schema": {"properties": {"suspensionType": {"title": "Suspension Type", "type": "string"}, "springRate": {"title": "Spring Rate", "type": "string"}, "dampingCoefficient": {"title": "Damping Coefficient", "type": "string"}, "loadCapacity": {"title": "Load Capacity", "type": "number"}}, "required": ["suspensionType", "springRate", "dampingCoefficient", "loadCapacity"], "title": "CarSuspensionSystem", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Create a JSON object for storing tire specifications, including properties like brand, model, size, and pressure rating.", "Schema": {"properties": {"brand": {"title": "Brand", "type": "string"}, "model": {"title": "Model", "type": "string"}, "size": {"title": "Size", "type": "string"}, "pressureRating": {"title": "Pressure Rating", "type": "string"}}, "required": ["brand", "model", "size", "pressureRating"], "title": "TireSpecifications", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Develop a JSON schema for a car battery, including properties such as brand, model, voltage, and warranty period.", "Schema": {"properties": {"brand": {"title": "Brand", "type": "string"}, "model": {"title": "Model", "type": "string"}, "voltage": {"title": "Voltage", "type": "string"}, "warrantyPeriod": {"title": "Warranty Period", "type": "string"}}, "required": ["brand", "model", "voltage", "warrantyPeriod"], "title": "CarBattery", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Construct a JSON object representing a vehicle's brake system, including properties like type, brand, model, and compatibility.", "Schema": {"properties": {"type": {"title": "Type", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "model": {"title": "Model", "type": "string"}, "compatibility": {"title": "Compatibility", "type": "string"}}, "required": ["type", "brand", "model", "compatibility"], "title": "BrakeSystem", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Design a JSON object for an automotive air filter, including properties such as filter type, dimensions, brand, and model number.", "Schema": {"properties": {"filterType": {"title": "Filter Type", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "modelNumber": {"title": "Model Number", "type": "string"}}, "required": ["filterType", "dimensions", "brand", "modelNumber"], "title": "AutomotiveAirFilter", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Generate a JSON object representing an automotive lighting system, including properties like light type, voltage, brand, and model.", "Schema": {"properties": {"lightType": {"title": "Light Type", "type": "string"}, "voltage": {"title": "Voltage", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "model": {"title": "Model", "type": "string"}}, "required": ["lightType", "voltage", "brand", "model"], "title": "AutomotiveLightingSystem", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Create a JSON object for querying available docking times at a marine port, including properties like portName, date, and time slots.", "Schema": {"properties": {"portName": {"title": "Port Name", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "timeSlots": {"title": "Time Slots", "type": "array", "items": {"type": "string", "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"}}}, "required": ["portName", "date", "timeSlots"], "title": "DockingTimeQuery", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Develop a JSON object for reporting a maintenance issue at a marine port, including properties such as issueId, description, reportedBy, and urgency level.", "Schema": {"properties": {"issueId": {"title": "Issue ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "reportedBy": {"title": "Reported By", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["Low", "Medium", "High", "Critical"]}}, "required": ["issueId", "description", "reportedBy", "urgencyLevel"], "title": "MaintenanceIssueReport", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Construct a JSON object for a cargo manifest at a marine port, including properties like vesselName, arrivalDate, cargoDetails, and customsStatus.", "Schema": {"properties": {"vesselName": {"title": "Vessel Name", "type": "string"}, "arrivalDate": {"title": "Arrival Date", "type": "string", "format": "date-time"}, "cargoDetails": {"title": "Cargo Details", "type": "array", "items": {"type": "object", "properties": {"cargoId": {"title": "Cargo ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}}, "required": ["cargoId", "description", "quantity"]}}, "customsStatus": {"title": "Customs Status", "type": "string", "enum": ["Pending", "Cleared", "Inspection Required"]}}, "required": ["vesselName", "arrivalDate", "cargoDetails", "customsStatus"], "title": "CargoManifest", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Design a JSON object for tracking vessel movements within a marine port, including properties such as vesselId, currentPosition, destination, and estimatedTimeOfArrival.", "Schema": {"properties": {"vesselId": {"title": "Vessel ID", "type": "string"}, "currentPosition": {"title": "Current Position", "type": "object", "properties": {"latitude": {"title": "Latitude", "type": "number"}, "longitude": {"title": "Longitude", "type": "number"}}, "required": ["latitude", "longitude"]}, "destination": {"title": "Destination", "type": "string"}, "estimatedTimeOfArrival": {"title": "Estimated Time of Arrival", "type": "string", "format": "date-time"}}, "required": ["vesselId", "currentPosition", "destination", "estimatedTimeOfArrival"], "title": "VesselMovementTracker", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Generate a JSON object for scheduling port services, including properties like serviceId, serviceName, vesselId, scheduledTime, and serviceStatus.", "Schema": {"properties": {"serviceId": {"title": "Service ID", "type": "string"}, "serviceName": {"title": "Service Name", "type": "string"}, "vesselId": {"title": "Vessel ID", "type": "string"}, "scheduledTime": {"title": "Scheduled Time", "type": "string", "format": "date-time"}, "serviceStatus": {"title": "Service Status", "type": "string", "enum": ["Scheduled", "In Progress", "Completed", "Cancelled"]}}, "required": ["serviceId", "serviceName", "vesselId", "scheduledTime", "serviceStatus"], "title": "PortServiceScheduler", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Create a JSON object for storing automobile manufacturer details, including properties like manufacturerName, countryOfOrigin, and activeModels.", "Schema": {"properties": {"manufacturerName": {"title": "Manufacturer Name", "type": "string"}, "countryOfOrigin": {"title": "Country of Origin", "type": "string"}, "activeModels": {"items": {"type": "string"}, "title": "Active Models", "type": "array"}}, "required": ["manufacturerName", "countryOfOrigin", "activeModels"], "title": "AutomobileManufacturerDetails", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Develop a JSON schema for a vehicle inventory system, including properties such as model, year, color, VIN, and dealership location.", "Schema": {"properties": {"model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer", "format": "int32"}, "color": {"title": "Color", "type": "string"}, "VIN": {"title": "Vehicle Identification Number", "type": "string"}, "dealershipLocation": {"title": "Dealership Location", "type": "string"}}, "required": ["model", "year", "color", "VIN", "dealershipLocation"], "title": "VehicleInventory", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Construct a JSON object for a car maintenance record, including properties like serviceDate, serviceType, mileage, and serviceCenter.", "Schema": {"properties": {"serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "serviceType": {"title": "Service Type", "type": "string"}, "mileage": {"title": "Mileage", "type": "integer"}, "serviceCenter": {"title": "Service Center", "type": "string"}}, "required": ["serviceDate", "serviceType", "mileage", "serviceCenter"], "title": "CarMaintenanceRecord", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Design a JSON object for tracking vehicle sales, including properties such as saleDate, vehicleModel, salePrice, and customerDetails.", "Schema": {"properties": {"saleDate": {"title": "Sale Date", "type": "string", "format": "date"}, "vehicleModel": {"title": "Vehicle Model", "type": "string"}, "salePrice": {"title": "Sale Price", "type": "number", "format": "float"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["customerName", "contactInfo"]}}, "required": ["saleDate", "vehicleModel", "salePrice", "customerDetails"], "title": "VehicleSalesRecord", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Generate a JSON object for a vehicle specification sheet, including properties like engineType, horsepower, torque, and fuelEconomy.", "Schema": {"properties": {"engineType": {"title": "Engine Type", "type": "string"}, "horsepower": {"title": "Horsepower", "type": "integer"}, "torque": {"title": "Torque", "type": "integer"}, "fuelEconomy": {"title": "Fuel Economy", "type": "object", "properties": {"cityMpg": {"title": "City MPG", "type": "integer"}, "highwayMpg": {"title": "Highway MPG", "type": "integer"}}, "required": ["cityMpg", "highwayMpg"]}}, "required": ["engineType", "horsepower", "torque", "fuelEconomy"], "title": "VehicleSpecificationSheet", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Create a JSON object for querying available automotive parts with properties like partId, partName, manufacturer, and price.", "Schema": {"properties": {"partId": {"title": "Part ID", "type": "string"}, "partName": {"title": "Part Name", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["partId", "partName", "manufacturer", "price"], "title": "AutomotivePartQuery", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Develop a JSON object for submitting a warranty claim, including properties such as claimId, customerId, partId, issueDescription, and claimDate.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "partId": {"title": "Part ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimDate": {"format": "date", "title": "Claim Date", "type": "string"}}, "required": ["claimId", "customerId", "partId", "issueDescription", "claimDate"], "title": "WarrantyClaimSubmission", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Construct a JSON object for a vehicle service record, including properties like serviceId, vehicleId, serviceDate, serviceType, and technicianNotes.", "Schema": {"properties": {"serviceId": {"title": "Service ID", "type": "string"}, "vehicleId": {"title": "Vehicle ID", "type": "string"}, "serviceDate": {"format": "date", "title": "Service Date", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "technicianNotes": {"title": "Technician Notes", "type": "string"}}, "required": ["serviceId", "vehicleId", "serviceDate", "serviceType", "technicianNotes"], "title": "VehicleServiceRecord", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Design a JSON object for tracking inventory levels, with properties such as partId, warehouseLocation, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"partId": {"title": "Part ID", "type": "string"}, "warehouseLocation": {"title": "Warehouse Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["partId", "warehouseLocation", "quantityAvailable", "reorderThreshold"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobile Components (New Name)", "Task": "Generate a JSON object for a customer feedback form, including properties like feedbackId, customerId, feedbackText, rating, and submissionDate.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "feedbackText": {"title": "Feedback Text", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "submissionDate": {"format": "date", "title": "Submission Date", "type": "string"}}, "required": ["feedbackId", "customerId", "feedbackText", "rating", "submissionDate"], "title": "CustomerFeedbackForm", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Create a JSON object for storing information about marine port ownership, including properties like portName, ownerName, and operatorDetails.", "Schema": {"properties": {"portName": {"title": "Port Name", "type": "string"}, "ownerName": {"title": "Owner Name", "type": "string"}, "operatorDetails": {"title": "Operator Details", "type": "object", "properties": {"operatorName": {"title": "Operator Name", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone Number", "type": "string"}, "email": {"title": "Email Address", "type": "string", "format": "email"}}, "required": ["phone", "email"]}}, "required": ["operatorName", "contactInfo"]}}, "required": ["portName", "ownerName", "operatorDetails"], "title": "Marine Port Ownership", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Develop a JSON schema for a query to retrieve vessel schedules at a marine port, including properties like vesselName, arrivalDate, and departureDate.", "Schema": {"properties": {"vesselName": {"title": "Vessel Name", "type": "string"}, "arrivalDate": {"title": "Arrival Date", "type": "string", "format": "date-time"}, "departureDate": {"title": "Departure Date", "type": "string", "format": "date-time"}}, "required": ["vesselName", "arrivalDate", "departureDate"], "title": "Vessel Schedule Query", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Construct a JSON object for logging container movements within a port, including properties like containerID, location, movementType, and timestamp.", "Schema": {"properties": {"containerID": {"title": "Container ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "movementType": {"title": "Movement Type", "type": "string", "enum": ["Arrival", "Departure", "Relocation"]}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["containerID", "location", "movementType", "timestamp"], "title": "Container Movement Log", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Design a JSON object for tracking port facility maintenance requests, including properties such as facilityID, maintenanceType, urgency, and requestDate.", "Schema": {"properties": {"facilityID": {"title": "Facility ID", "type": "string"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "urgency": {"title": "Urgency", "type": "string", "enum": ["Low", "Medium", "High"]}, "requestDate": {"title": "Request Date", "type": "string", "format": "date"}}, "required": ["facilityID", "maintenanceType", "urgency", "requestDate"], "title": "Port Facility Maintenance Request", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Generate a JSON object for a port security incident report, including properties like incidentID, incidentType, affectedAreas, and reportDetails.", "Schema": {"properties": {"incidentID": {"title": "Incident ID", "type": "string"}, "incidentType": {"title": "Incident Type", "type": "string"}, "affectedAreas": {"title": "Affected Areas", "type": "array", "items": {"type": "string"}}, "reportDetails": {"title": "Report Details", "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "reportedBy": {"title": "Reported By", "type": "string"}, "reportDate": {"title": "Report Date", "type": "string", "format": "date-time"}}, "required": ["description", "reportedBy", "reportDate"]}}, "required": ["incidentID", "incidentType", "affectedAreas", "reportDetails"], "title": "Port Security Incident Report", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Create a JSON object for storing motorcycle specifications, including properties like model, engineSize, horsepower, and VIN.", "Schema": {"properties": {"model": {"title": "Model", "type": "string"}, "engineSize": {"title": "Engine Size", "type": "string"}, "horsepower": {"title": "Horsepower", "type": "number"}, "vin": {"title": "VIN", "type": "string", "pattern": "^[A-HJ-NPR-Z0-9]{17}$"}}, "required": ["model", "engineSize", "horsepower", "vin"], "title": "MotorcycleSpecifications", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Develop a JSON schema for a vehicle maintenance record, including properties such as serviceDate, serviceType, mechanic, and cost.", "Schema": {"properties": {"serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "serviceType": {"title": "Service Type", "type": "string"}, "mechanic": {"title": "Mechanic", "type": "string"}, "cost": {"title": "Cost", "type": "number"}}, "required": ["serviceDate", "serviceType", "mechanic", "cost"], "title": "VehicleMaintenanceRecord", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Construct a JSON object for a car dealership inventory, including properties like vehicleID, make, model, year, and price.", "Schema": {"properties": {"vehicleID": {"title": "Vehicle ID", "type": "string"}, "make": {"title": "Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer", "minimum": 1900, "maximum": 2100}, "price": {"title": "Price", "type": "number"}}, "required": ["vehicleID", "make", "model", "year", "price"], "title": "CarDealershipInventory", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Design a JSON object for tracking vehicle sales, including properties such as saleID, customerName, vehicleSold, saleDate, and saleAmount.", "Schema": {"properties": {"saleID": {"title": "Sale ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "vehicleSold": {"title": "Vehicle Sold", "type": "string"}, "saleDate": {"title": "Sale Date", "type": "string", "format": "date"}, "saleAmount": {"title": "Sale Amount", "type": "number"}}, "required": ["saleID", "customerName", "vehicleSold", "saleDate", "saleAmount"], "title": "VehicleSalesTracking", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Generate a JSON object representing a customer's vehicle service history, including properties like customerID, vehicleID, serviceRecords, and totalSpent.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "vehicleID": {"title": "Vehicle ID", "type": "string"}, "serviceRecords": {"title": "Service Records", "type": "array", "items": {"type": "object", "properties": {"serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "description": {"title": "Description", "type": "string"}, "cost": {"title": "Cost", "type": "number"}}, "required": ["serviceDate", "description", "cost"]}}, "totalSpent": {"title": "Total Spent", "type": "number"}}, "required": ["customerID", "vehicleID", "serviceRecords", "totalSpent"], "title": "CustomerVehicleServiceHistory", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Create a JSON object for storing road information, including properties like roadName, roadType, and maintenanceSchedule.", "Schema": {"properties": {"roadName": {"title": "Road Name", "type": "string"}, "roadType": {"title": "Road Type", "type": "string", "enum": ["Highway", "Main Road", "Street", "Alley"]}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "object", "properties": {"frequency": {"title": "Frequency", "type": "string"}, "lastMaintained": {"title": "Last Maintained", "type": "string", "format": "date"}}, "required": ["frequency", "lastMaintained"]}}, "required": ["roadName", "roadType", "maintenanceSchedule"], "title": "RoadInformation", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Develop a JSON schema for a tunnel maintenance log, including properties such as tunnelID, inspectionDate, inspectorName, and issuesFound.", "Schema": {"properties": {"tunnelID": {"title": "Tunnel ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "issuesFound": {"title": "Issues Found", "type": "array", "items": {"type": "string"}}}, "required": ["tunnelID", "inspectionDate", "inspectorName"], "title": "TunnelMaintenanceLog", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Construct a JSON object representing railtrack segment data, including properties like segmentID, length, railType, and lastInspection.", "Schema": {"properties": {"segmentID": {"title": "Segment ID", "type": "string"}, "length": {"title": "Length", "type": "number", "minimum": 0}, "railType": {"title": "Rail Type", "type": "string"}, "lastInspection": {"title": "Last Inspection", "type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "inspector": {"title": "Inspector", "type": "string"}}, "required": ["date", "inspector"]}}, "required": ["segmentID", "length", "railType", "lastInspection"], "title": "RailtrackSegmentData", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Design a JSON object for bridge inspection records, including properties such as bridgeID, inspectionFrequency, lastInspectionReport, and structuralRating.", "Schema": {"properties": {"bridgeID": {"title": "Bridge ID", "type": "string"}, "inspectionFrequency": {"title": "Inspection Frequency", "type": "string"}, "lastInspectionReport": {"title": "Last Inspection Report", "type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "findings": {"title": "Findings", "type": "string"}}, "required": ["date", "findings"]}, "structuralRating": {"title": "Structural Rating", "type": "number", "minimum": 0, "maximum": 100}}, "required": ["bridgeID", "inspectionFrequency", "lastInspectionReport", "structuralRating"], "title": "BridgeInspectionRecords", "type": "object"}}
{"Category": "Transportation", "SubCategory": "Transportation Infrastructure", "Task": "Generate a JSON object representing airport runway information, including properties like runwayID, length, surfaceMaterial, and lightingSystem.", "Schema": {"properties": {"runwayID": {"title": "Runway ID", "type": "string"}, "length": {"title": "Length", "type": "number", "minimum": 0}, "surfaceMaterial": {"title": "Surface Material", "type": "string"}, "lightingSystem": {"title": "Lighting System", "type": "boolean"}}, "required": ["runwayID", "length", "surfaceMaterial", "lightingSystem"], "title": "AirportRunwayInformation", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a home furnishings product catalog entry, including properties like productName, SKU, price, material, and dimensions.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "material": {"title": "Material", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "object", "properties": {"width": {"title": "Width", "type": "number", "format": "float"}, "height": {"title": "Height", "type": "number", "format": "float"}, "depth": {"title": "Depth", "type": "number", "format": "float"}}, "required": ["width", "height", "depth"]}}, "required": ["productName", "SKU", "price", "material", "dimensions"], "title": "HomeFurnishingsProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for a customer's furniture wishlist, including properties like customerID, wishlistItems, and dateCreated.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "wishlistItems": {"title": "Wishlist Items", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}}, "required": ["productName", "SKU"]}}, "dateCreated": {"title": "Date Created", "type": "string", "format": "date-time"}}, "required": ["customerID", "wishlistItems", "dateCreated"], "title": "CustomerFurnitureWishlist", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for tracking furniture delivery status, including properties like orderID, deliveryDate, status, and trackingNumber.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date-time"}, "status": {"title": "Status", "type": "string", "enum": ["ordered", "shipped", "out for delivery", "delivered", "delayed", "cancelled"]}, "trackingNumber": {"title": "Tracking Number", "type": "string"}}, "required": ["orderID", "deliveryDate", "status", "trackingNumber"], "title": "FurnitureDeliveryStatus", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for a customer feedback submission on a furniture item, including properties like feedbackID, customerID, productSKU, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productSKU": {"title": "Product SKU", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "customerID", "productSKU", "rating", "comments"], "title": "CustomerFeedbackSubmission", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a furniture store inventory update, including properties like storeLocation, inventoryItems, and lastUpdated.", "Schema": {"properties": {"storeLocation": {"title": "Store Location", "type": "string"}, "inventoryItems": {"title": "Inventory Items", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productName", "SKU", "quantity"]}}, "lastUpdated": {"title": "Last Updated", "type": "string", "format": "date-time"}}, "required": ["storeLocation", "inventoryItems", "lastUpdated"], "title": "FurnitureStoreInventoryUpdate", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Create a JSON object for querying available passenger automobiles, including properties like make, model, year, and price range.", "Schema": {"properties": {"make": {"title": "Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer", "minimum": 1900, "maximum": 2023}, "priceRange": {"title": "PriceRange", "type": "object", "properties": {"minPrice": {"title": "MinPrice", "type": "number"}, "maxPrice": {"title": "MaxPrice", "type": "number"}}, "required": ["minPrice", "maxPrice"]}}, "required": ["make", "model", "year"], "title": "AvailableAutomobilesQuery", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Develop a JSON object for storing customer inquiries about specific vehicle features, including properties like customerName, contactDetails, vehicleId, and requestedFeatures.", "Schema": {"properties": {"customerName": {"title": "CustomerName", "type": "string"}, "contactDetails": {"title": "ContactDetails", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "vehicleId": {"title": "VehicleId", "type": "string"}, "requestedFeatures": {"title": "RequestedFeatures", "type": "array", "items": {"type": "string"}}}, "required": ["customerName", "contactDetails", "vehicleId"], "title": "CustomerInquiry", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Construct a JSON object for a vehicle service history record, including properties like vehicleId, serviceDates, serviceType, and serviceCenterDetails.", "Schema": {"properties": {"vehicleId": {"title": "VehicleId", "type": "string"}, "serviceDates": {"title": "ServiceDates", "type": "array", "items": {"type": "string", "format": "date"}}, "serviceType": {"title": "ServiceType", "type": "string"}, "serviceCenterDetails": {"title": "ServiceCenterDetails", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["name", "location"]}}, "required": ["vehicleId", "serviceDates", "serviceType", "serviceCenterDetails"], "title": "VehicleServiceHistory", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Design a JSON object for tracking vehicle inventory at a dealership, including properties like vehicleId, status, location, and quantityAvailable.", "Schema": {"properties": {"vehicleId": {"title": "VehicleId", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["In Stock", "Out of Stock", "On Order"]}, "location": {"title": "Location", "type": "string"}, "quantityAvailable": {"title": "QuantityAvailable", "type": "integer", "minimum": 0}}, "required": ["vehicleId", "status", "location", "quantityAvailable"], "title": "VehicleInventory", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Generate a JSON object for a vehicle financing application, including properties like applicantName, creditScore, vehicleId, and loanDetails.", "Schema": {"properties": {"applicantName": {"title": "ApplicantName", "type": "string"}, "creditScore": {"title": "CreditScore", "type": "integer", "minimum": 300, "maximum": 850}, "vehicleId": {"title": "VehicleId", "type": "string"}, "loanDetails": {"title": "LoanDetails", "type": "object", "properties": {"amount": {"title": "Amount", "type": "number"}, "term": {"title": "Term", "type": "integer", "description": "Loan term in months"}, "interestRate": {"title": "InterestRate", "type": "number", "description": "Annual interest rate"}}, "required": ["amount", "term", "interestRate"]}}, "required": ["applicantName", "creditScore", "vehicleId", "loanDetails"], "title": "VehicleFinancingApplication", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Create a JSON object for storing motorcycle specifications, including properties like model, engineSize, horsepower, and VIN.", "Schema": {"properties": {"model": {"title": "Model", "type": "string"}, "engineSize": {"title": "Engine Size", "type": "string"}, "horsepower": {"title": "Horsepower", "type": "number"}, "vin": {"title": "Vehicle Identification Number (VIN)", "type": "string"}}, "required": ["model", "engineSize", "horsepower", "vin"], "title": "MotorcycleSpecifications", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Develop a JSON schema for a scooter's maintenance record, including properties such as lastServiceDate, serviceType, mileage, and serviceCenter.", "Schema": {"properties": {"lastServiceDate": {"format": "date", "title": "Last Service Date", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "mileage": {"title": "Mileage", "type": "number"}, "serviceCenter": {"title": "Service Center", "type": "string"}}, "required": ["lastServiceDate", "serviceType", "mileage", "serviceCenter"], "title": "ScooterMaintenanceRecord", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Construct a JSON object for a three-wheeler's insurance policy, including properties like policyNumber, coverageDetails, insuredValue, and expirationDate.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "string"}, "insuredValue": {"title": "Insured Value", "type": "number"}, "expirationDate": {"format": "date", "title": "Expiration Date", "type": "string"}}, "required": ["policyNumber", "coverageDetails", "insuredValue", "expirationDate"], "title": "ThreeWheelerInsurancePolicy", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Design a JSON object for tracking automobile sales, including properties such as saleDate, vehicleType, quantity, and totalRevenue.", "Schema": {"properties": {"saleDate": {"format": "date", "title": "Sale Date", "type": "string"}, "vehicleType": {"title": "Vehicle Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "totalRevenue": {"title": "Total Revenue", "type": "number"}}, "required": ["saleDate", "vehicleType", "quantity", "totalRevenue"], "title": "AutomobileSalesTracking", "type": "object"}}
{"Category": "Automobiles & Components", "SubCategory": "Automobiles", "Task": "Generate a JSON object representing a vehicle recall notice, including properties like recallID, affectedModels, defectDescription, and correctiveAction.", "Schema": {"properties": {"recallID": {"title": "Recall ID", "type": "string"}, "affectedModels": {"items": {"type": "string"}, "title": "Affected Models", "type": "array"}, "defectDescription": {"title": "Defect Description", "type": "string"}, "correctiveAction": {"title": "Corrective Action", "type": "string"}}, "required": ["recallID", "affectedModels", "defectDescription", "correctiveAction"], "title": "VehicleRecallNotice", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for storing consumer electronics product details, including properties like productName, modelNumber, price, and warrantyPeriod.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "modelNumber": {"title": "Model Number", "type": "string"}, "price": {"title": "Price", "type": "number", "minimum": 0}, "warrantyPeriod": {"title": "Warranty Period", "type": "string"}}, "required": ["productName", "modelNumber", "price", "warrantyPeriod"], "title": "ConsumerElectronicsProduct", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON schema for a user query to find available electronics based on type and price range.", "Schema": {"properties": {"productType": {"title": "Product Type", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"minPrice": {"title": "Minimum Price", "type": "number", "minimum": 0}, "maxPrice": {"title": "Maximum Price", "type": "number", "minimum": 0}}, "required": ["minPrice", "maxPrice"]}}, "required": ["productType", "priceRange"], "title": "UserQueryForElectronics", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for submitting a warranty claim, including properties such as customerName, purchaseDate, issueDescription, and productSerialNumber.", "Schema": {"properties": {"customerName": {"title": "Customer Name", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "productSerialNumber": {"title": "Product Serial Number", "type": "string"}}, "required": ["customerName", "purchaseDate", "issueDescription", "productSerialNumber"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for a customer review of an electronic product, including properties like reviewerName, rating, reviewText, and productID.", "Schema": {"properties": {"reviewerName": {"title": "Reviewer Name", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}}, "required": ["reviewerName", "rating", "reviewText", "productID"], "title": "CustomerReview", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for tracking inventory levels of electronic products, including properties like productID, currentStock, reorderLevel, and supplierID.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "currentStock": {"title": "Current Stock", "type": "integer", "minimum": 0}, "reorderLevel": {"title": "Reorder Level", "type": "integer", "minimum": 0}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["productID", "currentStock", "reorderLevel", "supplierID"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a prefabricated house model, including properties like modelName, dimensions, price, and features.", "Schema": {"properties": {"modelName": {"title": "Model Name", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "object", "properties": {"length": {"title": "Length", "type": "number"}, "width": {"title": "Width", "type": "number"}, "height": {"title": "Height", "type": "number"}}, "required": ["length", "width", "height"]}, "price": {"title": "Price", "type": "number"}, "features": {"title": "Features", "type": "array", "items": {"type": "string"}}}, "required": ["modelName", "dimensions", "price", "features"], "title": "PrefabricatedHouseModel", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON object for a manufactured home customization option, including properties like optionId, optionName, optionDescription, and additionalCost.", "Schema": {"properties": {"optionId": {"title": "Option ID", "type": "string"}, "optionName": {"title": "Option Name", "type": "string"}, "optionDescription": {"title": "Option Description", "type": "string"}, "additionalCost": {"title": "Additional Cost", "type": "number"}}, "required": ["optionId", "optionName", "optionDescription", "additionalCost"], "title": "ManufacturedHomeCustomizationOption", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for a residential construction project, including properties like projectId, clientName, projectAddress, estimatedCompletionDate, and currentStatus.", "Schema": {"properties": {"projectId": {"title": "Project ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "projectAddress": {"title": "Project Address", "type": "string"}, "estimatedCompletionDate": {"title": "Estimated Completion Date", "type": "string", "format": "date"}, "currentStatus": {"title": "Current Status", "type": "string"}}, "required": ["projectId", "clientName", "projectAddress", "estimatedCompletionDate", "currentStatus"], "title": "ResidentialConstructionProject", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for tracking inventory of construction materials, including properties like materialId, materialName, quantityAvailable, reorderLevel, and supplierDetails.", "Schema": {"properties": {"materialId": {"title": "Material ID", "type": "string"}, "materialName": {"title": "Material Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierName", "contact"]}}, "required": ["materialId", "materialName", "quantityAvailable", "reorderLevel", "supplierDetails"], "title": "ConstructionMaterialInventory", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for a customer feedback form on a manufactured home, including properties like feedbackId, customerName, homeModel, rating, and comments.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "homeModel": {"title": "Home Model", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackId", "customerName", "homeModel", "rating", "comments"], "title": "CustomerFeedbackForm", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for storing product details of a TV, including properties like modelNumber, screenSize, resolution, and HDMI ports count.", "Schema": {"properties": {"modelNumber": {"title": "Model Number", "type": "string"}, "screenSize": {"title": "Screen Size", "type": "string"}, "resolution": {"title": "Resolution", "type": "string"}, "hdmiPortsCount": {"title": "HDMI Ports Count", "type": "integer"}}, "required": ["modelNumber", "screenSize", "resolution", "hdmiPortsCount"], "title": "TVProductDetails", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON schema for a home audio system, capturing details such as serialNumber, type (e.g., 'soundbar', 'home theater'), wattage, and wireless capability.", "Schema": {"properties": {"serialNumber": {"title": "Serial Number", "type": "string"}, "type": {"title": "Type", "type": "string", "enum": ["soundbar", "home theater", "speaker system", "receiver"]}, "wattage": {"title": "Wattage", "type": "number"}, "wirelessCapability": {"title": "Wireless Capability", "type": "boolean"}}, "required": ["serialNumber", "type", "wattage", "wirelessCapability"], "title": "HomeAudioSystemDetails", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for game console inventory, including properties like consoleID, brand, storageCapacity, and supportedResolution.", "Schema": {"properties": {"consoleID": {"title": "Console ID", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "storageCapacity": {"title": "Storage Capacity", "type": "string"}, "supportedResolution": {"title": "Supported Resolution", "type": "string"}}, "required": ["consoleID", "brand", "storageCapacity", "supportedResolution"], "title": "GameConsoleInventory", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for digital camera specifications, including properties such as productCode, megapixels, opticalZoom, and connectivity features.", "Schema": {"properties": {"productCode": {"title": "Product Code", "type": "string"}, "megapixels": {"title": "Megapixels", "type": "number"}, "opticalZoom": {"title": "Optical Zoom", "type": "number"}, "connectivityFeatures": {"title": "Connectivity Features", "type": "array", "items": {"type": "string"}}}, "required": ["productCode", "megapixels", "opticalZoom", "connectivityFeatures"], "title": "DigitalCameraSpecifications", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object representing a product warranty, with properties like warrantyID, productType, coverageDetails, and validityPeriod.", "Schema": {"properties": {"warrantyID": {"title": "Warranty ID", "type": "string"}, "productType": {"title": "Product Type", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "string"}, "validityPeriod": {"title": "Validity Period", "type": "string"}}, "required": ["warrantyID", "productType", "coverageDetails", "validityPeriod"], "title": "ProductWarranty", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a furniture product catalog entry, including properties like productName, productCode, dimensions, material, and price.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productCode": {"title": "Product Code", "type": "string"}, "dimensions": {"title": "Dimensions", "type": "string"}, "material": {"title": "Material", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["productName", "productCode", "dimensions", "material", "price"], "title": "FurnitureProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON object for a customer's furniture order, including properties such as orderId, customerDetails, items, totalAmount, and deliveryDate.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["name", "address", "phone"]}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productCode": {"title": "Product Code", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}}, "required": ["productCode", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderId", "customerDetails", "items", "totalAmount", "deliveryDate"], "title": "FurnitureOrder", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for tracking inventory levels of household durables, including properties like productCode, warehouseLocation, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"productCode": {"title": "Product Code", "type": "string"}, "warehouseLocation": {"title": "Warehouse Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["productCode", "warehouseLocation", "quantityAvailable", "reorderThreshold"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for a customer feedback form on household durable products, including properties such as feedbackId, customerName, productId, rating, and comments.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackId", "customerName", "productId", "rating"], "title": "CustomerFeedbackForm", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for a warranty registration of a household durable product, including properties like registrationId, customerInfo, productDetails, purchaseDate, and warrantyPeriod.", "Schema": {"properties": {"registrationId": {"title": "Registration ID", "type": "string"}, "customerInfo": {"title": "Customer Info", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["name", "address", "email"]}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "serialNumber": {"title": "Serial Number", "type": "string"}}, "required": ["productName", "serialNumber"]}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "warrantyPeriod": {"title": "Warranty Period", "type": "string"}}, "required": ["registrationId", "customerInfo", "productDetails", "purchaseDate", "warrantyPeriod"], "title": "WarrantyRegistration", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a home appliance warranty registration, including properties like productModel, serialNumber, purchaseDate, and warrantyPeriod.", "Schema": {"properties": {"productModel": {"title": "Product Model", "type": "string"}, "serialNumber": {"title": "Serial Number", "type": "string"}, "purchaseDate": {"format": "date", "title": "Purchase Date", "type": "string"}, "warrantyPeriod": {"title": "Warranty Period", "type": "string"}}, "required": ["productModel", "serialNumber", "purchaseDate", "warrantyPeriod"], "title": "WarrantyRegistration", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON object for a customer support ticket, including properties such as ticketID, customerName, issueDescription, and resolutionStatus.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["ticketID", "customerName", "issueDescription", "resolutionStatus"], "title": "SupportTicket", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for tracking furniture delivery, including properties like orderNumber, deliveryAddress, estimatedDeliveryDate, and deliveryStatus.", "Schema": {"properties": {"orderNumber": {"title": "Order Number", "type": "string"}, "deliveryAddress": {"title": "Delivery Address", "type": "string"}, "estimatedDeliveryDate": {"format": "date", "title": "Estimated Delivery Date", "type": "string"}, "deliveryStatus": {"title": "Delivery Status", "type": "string"}}, "required": ["orderNumber", "deliveryAddress", "estimatedDeliveryDate", "deliveryStatus"], "title": "FurnitureDeliveryTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for a product feedback form, including properties such as productName, customerID, rating, and feedbackText.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "feedbackText": {"title": "Feedback Text", "type": "string"}}, "required": ["productName", "customerID", "rating", "feedbackText"], "title": "ProductFeedbackForm", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for an inventory check, including properties like SKU, locationID, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"SKU": {"title": "SKU", "type": "string"}, "locationID": {"title": "Location ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["SKU", "locationID", "quantityAvailable", "reorderThreshold"], "title": "InventoryCheck", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a product catalog entry, including properties like productName, SKU, price, and material.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "minimum": 0}, "material": {"title": "Material", "type": "string"}}, "required": ["productName", "SKU", "price", "material"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON schema for a customer review, including properties such as reviewerName, rating, reviewText, and productSKU.", "Schema": {"properties": {"reviewerName": {"title": "Reviewer Name", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}, "productSKU": {"title": "Product SKU", "type": "string"}}, "required": ["reviewerName", "rating", "reviewText", "productSKU"], "title": "CustomerReview", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for inventory management, including properties like SKU, stockLevel, reorderThreshold, and supplierID.", "Schema": {"properties": {"SKU": {"title": "Stock Keeping Unit", "type": "string"}, "stockLevel": {"title": "Stock Level", "type": "integer", "minimum": 0}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer", "minimum": 0}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["SKU", "stockLevel", "reorderThreshold", "supplierID"], "title": "InventoryManagement", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for a warranty claim, including properties such as claimID, customerName, productSKU, issueDescription, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productSKU": {"title": "Product SKU", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "In Review", "Approved", "Rejected"]}}, "required": ["claimID", "customerName", "productSKU", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for a shipping order, including properties like orderID, recipientName, address, productSKUs, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "recipientName": {"title": "Recipient Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "productSKUs": {"title": "Product SKUs", "type": "array", "items": {"type": "string"}}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "recipientName", "address", "productSKUs", "deliveryDate"], "title": "ShippingOrder", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for storing information about an electric household appliance, including properties like productName, modelNumber, powerRequirements, and warrantyPeriod.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "modelNumber": {"title": "Model Number", "type": "string"}, "powerRequirements": {"title": "Power Requirements", "type": "string"}, "warrantyPeriod": {"title": "Warranty Period", "type": "string"}}, "required": ["productName", "modelNumber", "powerRequirements", "warrantyPeriod"], "title": "ElectricHouseholdAppliance", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON schema for a power tool, including properties such as toolName, voltage, batteryType, and safetyInstructions.", "Schema": {"properties": {"toolName": {"title": "Tool Name", "type": "string"}, "voltage": {"title": "Voltage", "type": "string"}, "batteryType": {"title": "Battery Type", "type": "string"}, "safetyInstructions": {"title": "Safety Instructions", "type": "string"}}, "required": ["toolName", "voltage", "batteryType", "safetyInstructions"], "title": "PowerTool", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for a garden improvement tool, detailing properties like toolType, materialUsed, handleLength, and priceRange.", "Schema": {"properties": {"toolType": {"title": "Tool Type", "type": "string"}, "materialUsed": {"title": "Material Used", "type": "string"}, "handleLength": {"title": "Handle Length", "type": "string"}, "priceRange": {"title": "Price Range", "type": "string"}}, "required": ["toolType", "materialUsed", "handleLength", "priceRange"], "title": "GardenImprovementTool", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for tracking customer feedback on household appliances, including properties such as customerName, applianceModel, feedbackText, and satisfactionRating.", "Schema": {"properties": {"customerName": {"title": "Customer Name", "type": "string"}, "applianceModel": {"title": "Appliance Model", "type": "string"}, "feedbackText": {"title": "Feedback Text", "type": "string"}, "satisfactionRating": {"title": "Satisfaction Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["customerName", "applianceModel", "feedbackText", "satisfactionRating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object representing a warranty claim for a household product, including properties like claimId, customerDetails, productDetails, issueDescription, and claimStatus.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "serialNumber": {"title": "Serial Number", "type": "string"}}, "required": ["productName", "serialNumber"]}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "In Review", "Approved", "Rejected"]}}, "required": ["claimId", "customerDetails", "productDetails", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Create a JSON object for storing information about a leisure product, including properties like productName, brand, price, and SKU.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "sku": {"title": "SKU", "type": "string"}}, "required": ["productName", "brand", "price", "sku"], "title": "LeisureProduct", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Develop a JSON schema for a customer review of a leisure product, including properties such as reviewerName, rating, reviewText, and productSKU.", "Schema": {"properties": {"reviewerName": {"title": "Reviewer Name", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}, "productSKU": {"title": "Product SKU", "type": "string"}}, "required": ["reviewerName", "rating", "reviewText", "productSKU"], "title": "CustomerReview", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Construct a JSON object for a leisure product inventory record, including properties like SKU, quantityAvailable, restockDate, and supplierID.", "Schema": {"properties": {"SKU": {"title": "SKU", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["SKU", "quantityAvailable", "restockDate", "supplierID"], "title": "InventoryRecord", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Design a JSON object for tracking leisure product shipments, including properties such as shipmentID, productSKUs, quantityShipped, and destination.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "productSKUs": {"title": "Product SKUs", "type": "array", "items": {"type": "string"}}, "quantityShipped": {"title": "Quantity Shipped", "type": "integer"}, "destination": {"title": "Destination", "type": "string"}}, "required": ["shipmentID", "productSKUs", "quantityShipped", "destination"], "title": "ProductShipment", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Generate a JSON object representing a leisure product warranty claim, including properties like claimID, customerName, productSKU, issueDescription, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productSKU": {"title": "Product SKU", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "Processing", "Approved", "Denied"]}}, "required": ["claimID", "customerName", "productSKU", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a household appliance inventory item, including properties like applianceID, modelName, manufacturer, price, and warrantyPeriod.", "Schema": {"properties": {"applianceID": {"title": "Appliance ID", "type": "string"}, "modelName": {"title": "Model Name", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "price": {"title": "Price", "type": "number"}, "warrantyPeriod": {"title": "Warranty Period", "type": "string"}}, "required": ["applianceID", "modelName", "manufacturer", "price", "warrantyPeriod"], "title": "HouseholdApplianceInventoryItem", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Develop a JSON object for a customer's appliance purchase history, including properties like customerID, purchaseDate, applianceIDs, and totalSpent.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "applianceIDs": {"title": "Appliance IDs", "type": "array", "items": {"type": "string"}}, "totalSpent": {"title": "Total Spent", "type": "number"}}, "required": ["customerID", "purchaseDate", "applianceIDs", "totalSpent"], "title": "CustomerAppliancePurchaseHistory", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for tracking appliance service requests, including properties like serviceRequestID, applianceID, issueDescription, requestDate, and serviceStatus.", "Schema": {"properties": {"serviceRequestID": {"title": "Service Request ID", "type": "string"}, "applianceID": {"title": "Appliance ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "requestDate": {"title": "Request Date", "type": "string", "format": "date"}, "serviceStatus": {"title": "Service Status", "type": "string", "enum": ["Pending", "In Progress", "Completed", "Cancelled"]}}, "required": ["serviceRequestID", "applianceID", "issueDescription", "requestDate", "serviceStatus"], "title": "ApplianceServiceRequest", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for a product review, including properties like reviewID, applianceID, customerID, rating, and reviewText.", "Schema": {"properties": {"reviewID": {"title": "Review ID", "type": "string"}, "applianceID": {"title": "Appliance ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}}, "required": ["reviewID", "applianceID", "customerID", "rating", "reviewText"], "title": "ProductReview", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for appliance warranty claims, including properties like claimID, applianceID, customerID, claimDate, issueReported, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "applianceID": {"title": "Appliance ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "claimDate": {"title": "Claim Date", "type": "string", "format": "date"}, "issueReported": {"title": "Issue Reported", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "Under Review", "Approved", "Rejected"]}}, "required": ["claimID", "applianceID", "customerID", "claimDate", "issueReported", "claimStatus"], "title": "ApplianceWarrantyClaim", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Create a JSON object for a product catalog entry for housewares, including properties like productName, SKU, price, and materials.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "materials": {"title": "Materials", "type": "array", "items": {"type": "string"}}}, "required": ["productName", "SKU", "price", "materials"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Generate a JSON object for a customer review of a household item, including properties like customerName, reviewText, rating, and productSKU.", "Schema": {"properties": {"customerName": {"title": "Customer Name", "type": "string"}, "reviewText": {"title": "Review Text", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "productSKU": {"title": "Product SKU", "type": "string"}}, "required": ["customerName", "reviewText", "rating", "productSKU"], "title": "CustomerReview", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Construct a JSON object for inventory management, including properties like SKU, stockLevel, reorderThreshold, and supplierID.", "Schema": {"properties": {"SKU": {"title": "Stock Keeping Unit", "type": "string"}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["SKU", "stockLevel", "reorderThreshold", "supplierID"], "title": "InventoryManagement", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Design a JSON object for a warranty claim submission, including properties like customerID, productSKU, purchaseDate, and issueDescription.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "productSKU": {"title": "Product SKU", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "issueDescription": {"title": "Issue Description", "type": "string"}}, "required": ["customerID", "productSKU", "purchaseDate", "issueDescription"], "title": "WarrantyClaimSubmission", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Household Durables", "Task": "Formulate a JSON object for tracking shipment of a household product, including properties like trackingNumber, SKU, shipmentDate, and estimatedDelivery.", "Schema": {"properties": {"trackingNumber": {"title": "Tracking Number", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "shipmentDate": {"title": "Shipment Date", "type": "string", "format": "date"}, "estimatedDelivery": {"title": "Estimated Delivery", "type": "string", "format": "date"}}, "required": ["trackingNumber", "SKU", "shipmentDate", "estimatedDelivery"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Create a JSON object for storing bicycle product details, including properties like model, price, frame material, and available sizes.", "Schema": {"properties": {"model": {"title": "Model", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "frameMaterial": {"title": "Frame Material", "type": "string"}, "availableSizes": {"title": "Available Sizes", "type": "array", "items": {"type": "string"}}}, "required": ["model", "price", "frameMaterial", "availableSizes"], "title": "BicycleProductDetails", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Develop a JSON schema for a toy inventory entry, including properties such as toyName, ageGroup, safetyWarnings, and SKU.", "Schema": {"properties": {"toyName": {"title": "Toy Name", "type": "string"}, "ageGroup": {"title": "Age Group", "type": "string"}, "safetyWarnings": {"title": "Safety Warnings", "type": "array", "items": {"type": "string"}}, "SKU": {"title": "SKU", "type": "string"}}, "required": ["toyName", "ageGroup", "safetyWarnings", "SKU"], "title": "ToyInventoryEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Construct a JSON object for a sports equipment catalog entry, including properties like equipmentType, brand, model, and price range.", "Schema": {"properties": {"equipmentType": {"title": "Equipment Type", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "model": {"title": "Model", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number", "format": "float"}, "max": {"title": "Maximum Price", "type": "number", "format": "float"}}}}, "required": ["equipmentType", "brand", "model", "priceRange"], "title": "SportsEquipmentCatalogEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Design a JSON object for tracking customer reviews of leisure products, including properties such as productName, reviewText, rating, and reviewerID.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "reviewText": {"title": "Review Text", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewerID": {"title": "Reviewer ID", "type": "string"}}, "required": ["productName", "reviewText", "rating", "reviewerID"], "title": "CustomerReview", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Leisure Products", "Task": "Generate a JSON object representing a leisure product warranty claim, including properties like claimID, customerID, productID, issueDescription, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "In Review", "Approved", "Denied", "Resolved"]}}, "required": ["claimID", "customerID", "productID", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Create a JSON object for a product catalog entry, including properties like productName, productType, brand, SKU, and price.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productType": {"title": "Product Type", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productName", "productType", "brand", "SKU", "price"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Develop a JSON object for tracking inventory levels, including properties such as SKU, quantityAvailable, restockDate, and supplier.", "Schema": {"properties": {"SKU": {"title": "Stock Keeping Unit", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["SKU", "quantityAvailable", "restockDate", "supplier"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Construct a JSON object for a customer profile, including properties like customerID, name, email, purchaseHistory, and preferredBrands.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["date", "SKU", "quantity"]}}, "preferredBrands": {"title": "Preferred Brands", "type": "array", "items": {"type": "string"}}}, "required": ["customerID", "name", "email"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Design a JSON object for an order, including properties such as orderID, customerID, items, totalAmount, and orderStatus.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"SKU": {"title": "Stock Keeping Unit", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["SKU", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}, "orderStatus": {"title": "Order Status", "type": "string", "enum": ["pending", "confirmed", "shipped", "delivered", "cancelled"]}}, "required": ["orderID", "customerID", "items", "totalAmount", "orderStatus"], "title": "Order", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Generate a JSON object for a shipping manifest, including properties like manifestID, shipmentDate, carrier, trackingNumber, and destination.", "Schema": {"properties": {"manifestID": {"title": "Manifest ID", "type": "string"}, "shipmentDate": {"title": "Shipment Date", "type": "string", "format": "date"}, "carrier": {"title": "Carrier", "type": "string"}, "trackingNumber": {"title": "Tracking Number", "type": "string"}, "destination": {"title": "Destination", "type": "string"}}, "required": ["manifestID", "shipmentDate", "carrier", "trackingNumber", "destination"], "title": "ShippingManifest", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Create a JSON object for querying available luxury watches, including properties like brand, model, price range, and availability status.", "Schema": {"properties": {"brand": {"title": "Brand", "type": "string"}, "model": {"title": "Model", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number"}, "max": {"title": "Maximum Price", "type": "number"}}, "required": ["min", "max"]}, "availabilityStatus": {"title": "Availability Status", "type": "string", "enum": ["In Stock", "Out of Stock", "Preorder"]}}, "required": ["brand", "model", "priceRange", "availabilityStatus"], "title": "LuxuryWatchesQuery", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Develop a JSON object for a customer's apparel size profile, including measurements such as chest, waist, hips, and inseam.", "Schema": {"properties": {"chest": {"title": "Chest", "type": "number"}, "waist": {"title": "Waist", "type": "number"}, "hips": {"title": "Hips", "type": "number"}, "inseam": {"title": "Inseam", "type": "number"}}, "required": ["chest", "waist", "hips", "inseam"], "title": "ApparelSizeProfile", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Construct a JSON object for tracking textile inventory, including properties like fabricType, color, quantity, and reorderThreshold.", "Schema": {"properties": {"fabricType": {"title": "Fabric Type", "type": "string"}, "color": {"title": "Color", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["fabricType", "color", "quantity", "reorderThreshold"], "title": "TextileInventory", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Design a JSON object for a product catalog entry, including details such as SKU, productName, description, price, and images.", "Schema": {"properties": {"SKU": {"title": "SKU", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "description": {"title": "Description", "type": "string"}, "price": {"title": "Price", "type": "number"}, "images": {"title": "Images", "type": "array", "items": {"type": "string", "format": "uri"}}}, "required": ["SKU", "productName", "description", "price", "images"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Generate a JSON object for a customer feedback form on apparel items, including fields like itemID, rating, comments, and customerID.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}}, "required": ["itemID", "rating", "comments", "customerID"], "title": "CustomerFeedbackForm", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Create a JSON object for querying available textile products, including properties like productID, productName, materialType, and priceRange.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "materialType": {"title": "Material Type", "type": "string"}, "priceRange": {"title": "Price Range", "type": "string"}}, "required": ["productID", "productName", "materialType", "priceRange"], "title": "TextileProductQuery", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Develop a JSON object for adding a new apparel item to the inventory, with properties such as itemID, itemName, size, color, and stockQuantity.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "size": {"title": "Size", "type": "string"}, "color": {"title": "Color", "type": "string"}, "stockQuantity": {"title": "Stock Quantity", "type": "integer"}}, "required": ["itemID", "itemName", "size", "color", "stockQuantity"], "title": "NewApparelItem", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Construct a JSON object for updating the price of a luxury good, including properties like productCode, currentPrice, and newPrice.", "Schema": {"properties": {"productCode": {"title": "Product Code", "type": "string"}, "currentPrice": {"title": "Current Price", "type": "number", "format": "float"}, "newPrice": {"title": "New Price", "type": "number", "format": "float"}}, "required": ["productCode", "currentPrice", "newPrice"], "title": "LuxuryGoodPriceUpdate", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Design a JSON object for a customer's wishlist, including properties such as wishlistID, customerID, items, and creationDate.", "Schema": {"properties": {"wishlistID": {"title": "Wishlist ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}}, "required": ["itemID", "itemName"]}}, "creationDate": {"title": "Creation Date", "type": "string", "format": "date"}}, "required": ["wishlistID", "customerID", "items", "creationDate"], "title": "CustomerWishlist", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Generate a JSON object for tracking a shipment of apparel goods, with properties like shipmentID, origin, destination, estimatedDelivery, and status.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedDelivery": {"title": "Estimated Delivery", "type": "string", "format": "date-time"}, "status": {"title": "Status", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "estimatedDelivery", "status"], "title": "ApparelShipmentTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Create a JSON object for querying a footwear manufacturer's product details, including properties like productID, productName, material, size, and price.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "material": {"title": "Material", "type": "string"}, "size": {"title": "Size", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["productID", "productName", "material", "size", "price"], "title": "FootwearProductDetails", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Develop a JSON object for a customer's shoe order, including properties like orderID, customerID, productID, quantity, and orderDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "orderDate": {"format": "date", "title": "Order Date", "type": "string"}}, "required": ["orderID", "customerID", "productID", "quantity", "orderDate"], "title": "CustomerShoeOrder", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Construct a JSON object for inventory management of shoes, including properties like productID, stockLevel, restockDate, and supplierID.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "restockDate": {"format": "date", "title": "Restock Date", "type": "string"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["productID", "stockLevel", "restockDate", "supplierID"], "title": "ShoeInventoryManagement", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Design a JSON object for tracking customer feedback on footwear products, including properties like feedbackID, customerID, productID, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "customerID", "productID", "rating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Generate a JSON object for a sales report of footwear products, including properties like reportID, dateRange, totalSales, topSellingProductID, and averagePrice.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "dateRange": {"title": "Date Range", "type": "object", "properties": {"startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}}, "required": ["startDate", "endDate"]}, "totalSales": {"title": "Total Sales", "type": "number"}, "topSellingProductID": {"title": "Top Selling Product ID", "type": "string"}, "averagePrice": {"title": "Average Price", "type": "number"}}, "required": ["reportID", "dateRange", "totalSales", "topSellingProductID", "averagePrice"], "title": "SalesReport", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Create a JSON object for querying available footwear inventory, including properties like style, size, color, and quantity in stock.", "Schema": {"properties": {"style": {"title": "Style", "type": "string"}, "size": {"title": "Size", "type": "string"}, "color": {"title": "Color", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}}, "required": ["style", "size", "color", "quantityInStock"], "title": "FootwearInventoryQuery", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Develop a JSON object for submitting a customer's shoe order, including properties like customerID, orderDetails (style, size, quantity), and shippingAddress.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "orderDetails": {"title": "Order Details", "type": "object", "properties": {"style": {"title": "Style", "type": "string"}, "size": {"title": "Size", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["style", "size", "quantity"]}, "shippingAddress": {"title": "Shipping Address", "type": "string"}}, "required": ["customerID", "orderDetails", "shippingAddress"], "title": "CustomerShoeOrder", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Construct a JSON object for a product review submission, including properties like productID, customerID, rating, and reviewText.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}}, "required": ["productID", "customerID", "rating", "reviewText"], "title": "ProductReviewSubmission", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Design a JSON object for tracking a shipment, including properties like orderID, trackingNumber, carrier, and estimatedDeliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "trackingNumber": {"title": "Tracking Number", "type": "string"}, "carrier": {"title": "Carrier", "type": "string"}, "estimatedDeliveryDate": {"title": "Estimated Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "trackingNumber", "carrier", "estimatedDeliveryDate"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Generate a JSON object for a loyalty program member profile, including properties like memberID, name, email, pointsBalance, and memberSince.", "Schema": {"properties": {"memberID": {"title": "Member ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "pointsBalance": {"title": "Points Balance", "type": "integer"}, "memberSince": {"title": "Member Since", "type": "string", "format": "date"}}, "required": ["memberID", "name", "email", "pointsBalance", "memberSince"], "title": "LoyaltyMemberProfile", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for a hotel reservation system, capturing guest information, room preferences, and payment details.", "Schema": {"properties": {"guestInformation": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "email": {"type": "string", "format": "email"}, "phoneNumber": {"type": "string"}}, "required": ["firstName", "lastName", "email", "phoneNumber"]}, "roomPreferences": {"type": "object", "properties": {"roomType": {"type": "string"}, "bedType": {"type": "string"}, "nonSmoking": {"type": "boolean"}}, "required": ["roomType", "bedType", "nonSmoking"]}, "paymentDetails": {"type": "object", "properties": {"cardType": {"type": "string"}, "cardNumber": {"type": "string"}, "expiryDate": {"type": "string", "format": "date"}, "cvv": {"type": "string"}}, "required": ["cardType", "cardNumber", "expiryDate", "cvv"]}}, "required": ["guestInformation", "roomPreferences", "paymentDetails"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON object for a restaurant booking system, including customer details, reservation time, and special requests.", "Schema": {"properties": {"customerDetails": {"type": "object", "properties": {"name": {"type": "string"}, "contactNumber": {"type": "string"}}, "required": ["name", "contactNumber"]}, "reservationTime": {"type": "string", "format": "date-time"}, "specialRequests": {"type": "array", "items": {"type": "string"}}}, "required": ["customerDetails", "reservationTime"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a leisure activity booking, including activity details, participant information, and payment confirmation.", "Schema": {"properties": {"activityDetails": {"type": "object", "properties": {"activityName": {"type": "string"}, "activityDate": {"type": "string", "format": "date"}, "location": {"type": "string"}}, "required": ["activityName", "activityDate", "location"]}, "participantInformation": {"type": "array", "items": {"type": "object", "properties": {"participantName": {"type": "string"}, "age": {"type": "integer"}}, "required": ["participantName", "age"]}}, "paymentConfirmation": {"type": "object", "properties": {"confirmationNumber": {"type": "string"}, "amountPaid": {"type": "number"}, "paymentDate": {"type": "string", "format": "date"}}, "required": ["confirmationNumber", "amountPaid", "paymentDate"]}}, "required": ["activityDetails", "participantInformation", "paymentConfirmation"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for a cruise line booking, capturing passenger details, cabin selection, and itinerary options.", "Schema": {"properties": {"passengerDetails": {"type": "object", "properties": {"fullName": {"type": "string"}, "passportNumber": {"type": "string"}, "nationality": {"type": "string"}}, "required": ["fullName", "passportNumber", "nationality"]}, "cabinSelection": {"type": "object", "properties": {"cabinType": {"type": "string"}, "deckNumber": {"type": "integer"}, "cabinNumber": {"type": "string"}}, "required": ["cabinType", "deckNumber", "cabinNumber"]}, "itineraryOptions": {"type": "array", "items": {"type": "object", "properties": {"destination": {"type": "string"}, "duration": {"type": "string"}}, "required": ["destination", "duration"]}}}, "required": ["passengerDetails", "cabinSelection", "itineraryOptions"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for a spa reservation system, including client preferences, treatment details, and therapist assignment.", "Schema": {"properties": {"clientPreferences": {"type": "object", "properties": {"clientName": {"type": "string"}, "preferredDate": {"type": "string", "format": "date"}, "allergies": {"type": "array", "items": {"type": "string"}}}, "required": ["clientName", "preferredDate"]}, "treatmentDetails": {"type": "object", "properties": {"treatmentType": {"type": "string"}, "duration": {"type": "integer"}, "specialInstructions": {"type": "string"}}, "required": ["treatmentType", "duration"]}, "therapistAssignment": {"type": "object", "properties": {"therapistName": {"type": "string"}, "qualification": {"type": "string"}}, "required": ["therapistName", "qualification"]}}, "required": ["clientPreferences", "treatmentDetails", "therapistAssignment"], "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Create a JSON object for storing textile product details, including properties like productName, materialType, and productCode.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "materialType": {"title": "Material Type", "type": "string"}, "productCode": {"title": "Product Code", "type": "string"}}, "required": ["productName", "materialType", "productCode"], "title": "TextileProductDetails", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Develop a JSON schema for a luxury item query, including properties such as itemID, itemName, brand, and priceRange.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "priceRange": {"title": "Price Range", "type": "string"}}, "required": ["itemID", "itemName", "brand", "priceRange"], "title": "LuxuryItemQuery", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Construct a JSON object for apparel inventory management, including properties like sku, size, color, quantityInStock, and reorderThreshold.", "Schema": {"properties": {"sku": {"title": "SKU", "type": "string"}, "size": {"title": "Size", "type": "string"}, "color": {"title": "Color", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["sku", "size", "color", "quantityInStock", "reorderThreshold"], "title": "ApparelInventory", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Design a JSON object for tracking fashion trends, including properties such as trendID, trendName, popularityScore, and relatedProducts.", "Schema": {"properties": {"trendID": {"title": "Trend ID", "type": "string"}, "trendName": {"title": "Trend Name", "type": "string"}, "popularityScore": {"title": "Popularity Score", "type": "number"}, "relatedProducts": {"items": {"type": "string"}, "title": "Related Products", "type": "array"}}, "required": ["trendID", "trendName", "popularityScore", "relatedProducts"], "title": "FashionTrendsTracking", "type": "object"}}
{"Category": "Consumer Durables & Apparel", "SubCategory": "Textiles, Apparel & Luxury Goods", "Task": "Generate a JSON object for a customer's luxury goods wishlist, including properties like customerID, wishlistItems, and wishlistCreationDate.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "wishlistItems": {"items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}}, "required": ["itemID", "itemName"]}, "title": "Wishlist Items", "type": "array"}, "wishlistCreationDate": {"format": "date", "title": "Wishlist Creation Date", "type": "string"}}, "required": ["customerID", "wishlistItems", "wishlistCreationDate"], "title": "CustomerLuxuryGoodsWishlist", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for storing casino game results, including properties like gameID, playerName, outcome, and winnings.", "Schema": {"properties": {"gameID": {"title": "Game ID", "type": "string"}, "playerName": {"title": "Player Name", "type": "string"}, "outcome": {"title": "Outcome", "type": "string", "enum": ["win", "loss", "draw"]}, "winnings": {"title": "Winnings", "type": "number"}}, "required": ["gameID", "playerName", "outcome", "winnings"], "title": "CasinoGameResult", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON schema for a hotel booking system, capturing details such as bookingID, guestName, roomType, checkInDate, and checkOutDate.", "Schema": {"properties": {"bookingID": {"title": "Booking ID", "type": "string"}, "guestName": {"title": "Guest Name", "type": "string"}, "roomType": {"title": "Room Type", "type": "string"}, "checkInDate": {"title": "Check-In Date", "type": "string", "format": "date"}, "checkOutDate": {"title": "Check-Out Date", "type": "string", "format": "date"}}, "required": ["bookingID", "guestName", "roomType", "checkInDate", "checkOutDate"], "title": "HotelBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a restaurant reservation, including properties like reservationID, customerName, partySize, date, and time.", "Schema": {"properties": {"reservationID": {"title": "Reservation ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "partySize": {"title": "Party Size", "type": "integer"}, "date": {"title": "Date", "type": "string", "format": "date"}, "time": {"title": "Time", "type": "string", "format": "time"}}, "required": ["reservationID", "customerName", "partySize", "date", "time"], "title": "RestaurantReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for tracking leisure activity bookings, with fields like activityID, participantName, activityType, date, and duration.", "Schema": {"properties": {"activityID": {"title": "Activity ID", "type": "string"}, "participantName": {"title": "Participant Name", "type": "string"}, "activityType": {"title": "Activity Type", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "duration": {"title": "Duration", "type": "string"}}, "required": ["activityID", "participantName", "activityType", "date", "duration"], "title": "LeisureActivityBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for a spa service appointment, including details such as appointmentID, clientName, serviceType, appointmentDate, and appointmentTime.", "Schema": {"properties": {"appointmentID": {"title": "Appointment ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "appointmentDate": {"title": "Appointment Date", "type": "string", "format": "date"}, "appointmentTime": {"title": "Appointment Time", "type": "string", "format": "time"}}, "required": ["appointmentID", "clientName", "serviceType", "appointmentDate", "appointmentTime"], "title": "SpaServiceAppointment", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for a casino's loyalty program member, including properties like memberID, points, tier, and personal details.", "Schema": {"properties": {"memberID": {"title": "Member ID", "type": "string"}, "points": {"title": "Points", "type": "integer"}, "tier": {"title": "Tier", "type": "string"}, "personalDetails": {"title": "Personal Details", "type": "object", "properties": {"firstName": {"title": "First Name", "type": "string"}, "lastName": {"title": "Last Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["firstName", "lastName", "email", "phone"]}}, "required": ["memberID", "points", "tier", "personalDetails"], "title": "LoyaltyProgramMember", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON object for a restaurant reservation, including properties like reservationID, guestName, reservationTime, and specialRequests.", "Schema": {"properties": {"reservationID": {"title": "Reservation ID", "type": "string"}, "guestName": {"title": "Guest Name", "type": "string"}, "reservationTime": {"title": "Reservation Time", "type": "string", "format": "date-time"}, "specialRequests": {"title": "Special Requests", "type": "array", "items": {"type": "string"}}}, "required": ["reservationID", "guestName", "reservationTime"], "title": "RestaurantReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a hotel booking, including properties like bookingID, guestDetails, stayDuration, and roomPreferences.", "Schema": {"properties": {"bookingID": {"title": "Booking ID", "type": "string"}, "guestDetails": {"title": "Guest Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}, "stayDuration": {"title": "Stay Duration", "type": "object", "properties": {"checkIn": {"title": "Check-In", "type": "string", "format": "date"}, "checkOut": {"title": "Check-Out", "type": "string", "format": "date"}}, "required": ["checkIn", "checkOut"]}, "roomPreferences": {"title": "Room Preferences", "type": "object", "properties": {"roomType": {"title": "Room Type", "type": "string"}, "bedType": {"title": "Bed Type", "type": "string"}, "smokingAllowed": {"title": "Smoking Allowed", "type": "boolean"}}}}, "required": ["bookingID", "guestDetails", "stayDuration"], "title": "HotelBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for a leisure activity booking, including properties like activityID, participantInfo, activityDate, and equipmentNeeded.", "Schema": {"properties": {"activityID": {"title": "Activity ID", "type": "string"}, "participantInfo": {"title": "Participant Info", "type": "object", "properties": {"participantName": {"title": "Participant Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["participantName", "age"]}, "activityDate": {"title": "Activity Date", "type": "string", "format": "date"}, "equipmentNeeded": {"title": "Equipment Needed", "type": "array", "items": {"type": "string"}}}, "required": ["activityID", "participantInfo", "activityDate"], "title": "LeisureActivityBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for a gym membership application, including properties like applicationID, applicantDetails, membershipType, and paymentInfo.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "applicantDetails": {"title": "Applicant Details", "type": "object", "properties": {"fullName": {"title": "Full Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["fullName", "address", "email", "phone"]}, "membershipType": {"title": "Membership Type", "type": "string"}, "paymentInfo": {"title": "Payment Info", "type": "object", "properties": {"cardNumber": {"title": "Card Number", "type": "string"}, "expiryDate": {"title": "Expiry Date", "type": "string"}, "cvv": {"title": "CVV", "type": "string"}}, "required": ["cardNumber", "expiryDate", "cvv"]}}, "required": ["applicationID", "applicantDetails", "membershipType", "paymentInfo"], "title": "GymMembershipApplication", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Create a JSON object for storing student enrollment details, including student ID, full name, enrollment date, and program enrolled.", "Schema": {"properties": {"studentId": {"title": "Student ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "enrollmentDate": {"title": "Enrollment Date", "format": "date", "type": "string"}, "programEnrolled": {"title": "Program Enrolled", "type": "string"}}, "required": ["studentId", "fullName", "enrollmentDate", "programEnrolled"], "title": "StudentEnrollment", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Develop a JSON schema for a course catalog entry, including course ID, course name, description, and credit hours.", "Schema": {"properties": {"courseId": {"title": "Course ID", "type": "string"}, "courseName": {"title": "Course Name", "type": "string"}, "description": {"title": "Description", "type": "string"}, "creditHours": {"title": "Credit Hours", "type": "integer"}}, "required": ["courseId", "courseName", "description", "creditHours"], "title": "CourseCatalogEntry", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Construct a JSON object for a faculty member profile, including faculty ID, name, department, and list of courses taught.", "Schema": {"properties": {"facultyId": {"title": "Faculty ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "department": {"title": "Department", "type": "string"}, "coursesTaught": {"items": {"type": "string"}, "title": "Courses Taught", "type": "array"}}, "required": ["facultyId", "name", "department", "coursesTaught"], "title": "FacultyProfile", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Design a JSON object for tracking library book loans, including loan ID, book title, ISBN, borrower ID, and due date.", "Schema": {"properties": {"loanId": {"title": "Loan ID", "type": "string"}, "bookTitle": {"title": "Book Title", "type": "string"}, "isbn": {"title": "ISBN", "type": "string"}, "borrowerId": {"title": "Borrower ID", "type": "string"}, "dueDate": {"title": "Due Date", "format": "date", "type": "string"}}, "required": ["loanId", "bookTitle", "isbn", "borrowerId", "dueDate"], "title": "LibraryBookLoan", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Generate a JSON object representing a student's extracurricular activities, including activity ID, activity name, participation dates, and awards received.", "Schema": {"properties": {"activityId": {"title": "Activity ID", "type": "string"}, "activityName": {"title": "Activity Name", "type": "string"}, "participationDates": {"items": {"format": "date", "type": "string"}, "title": "Participation Dates", "type": "array"}, "awardsReceived": {"items": {"type": "string"}, "title": "Awards Received", "type": "array"}}, "required": ["activityId", "activityName", "participationDates", "awardsReceived"], "title": "StudentExtracurricularActivities", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for a hotel reservation system, including properties like reservationID, guestName, roomType, checkInDate, and checkOutDate.", "Schema": {"properties": {"reservationID": {"title": "Reservation ID", "type": "string"}, "guestName": {"title": "Guest Name", "type": "string"}, "roomType": {"title": "Room Type", "type": "string"}, "checkInDate": {"title": "Check-In Date", "type": "string", "format": "date"}, "checkOutDate": {"title": "Check-Out Date", "type": "string", "format": "date"}}, "required": ["reservationID", "guestName", "roomType", "checkInDate", "checkOutDate"], "title": "HotelReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON object for a restaurant booking, including properties like bookingID, customerName, partySize, bookingTime, and specialRequests.", "Schema": {"properties": {"bookingID": {"title": "Booking ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "partySize": {"title": "Party Size", "type": "integer"}, "bookingTime": {"title": "Booking Time", "type": "string", "format": "time"}, "specialRequests": {"title": "Special Requests", "type": "string"}}, "required": ["bookingID", "customerName", "partySize", "bookingTime"], "title": "RestaurantBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a leisure activity booking, including properties like activityID, activityName, participantCount, date, and timeSlot.", "Schema": {"properties": {"activityID": {"title": "Activity ID", "type": "string"}, "activityName": {"title": "Activity Name", "type": "string"}, "participantCount": {"title": "Participant Count", "type": "integer"}, "date": {"title": "Date", "type": "string", "format": "date"}, "timeSlot": {"title": "Time Slot", "type": "string"}}, "required": ["activityID", "activityName", "participantCount", "date", "timeSlot"], "title": "LeisureActivityBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for a spa service reservation, including properties like serviceID, serviceName, duration, customerName, and appointmentTime.", "Schema": {"properties": {"serviceID": {"title": "Service ID", "type": "string"}, "serviceName": {"title": "Service Name", "type": "string"}, "duration": {"title": "Duration", "type": "integer"}, "customerName": {"title": "Customer Name", "type": "string"}, "appointmentTime": {"title": "Appointment Time", "type": "string", "format": "date-time"}}, "required": ["serviceID", "serviceName", "duration", "customerName", "appointmentTime"], "title": "SpaServiceReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for a gym membership registration, including properties like membershipID, memberName, membershipType, startDate, and endDate.", "Schema": {"properties": {"membershipID": {"title": "Membership ID", "type": "string"}, "memberName": {"title": "Member Name", "type": "string"}, "membershipType": {"title": "Membership Type", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["membershipID", "memberName", "membershipType", "startDate", "endDate"], "title": "GymMembershipRegistration", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for a restaurant reservation system, including properties like reservationID, customerName, reservationTime, numberOfGuests, and specialRequests.", "Schema": {"properties": {"reservationID": {"title": "Reservation ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "reservationTime": {"title": "Reservation Time", "type": "string", "format": "date-time"}, "numberOfGuests": {"title": "Number of Guests", "type": "integer"}, "specialRequests": {"title": "Special Requests", "type": "string"}}, "required": ["reservationID", "customerName", "reservationTime", "numberOfGuests"], "title": "RestaurantReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON object for a hotel booking, including properties such as bookingID, guestName, checkInDate, checkOutDate, roomType, and additionalPreferences.", "Schema": {"properties": {"bookingID": {"title": "Booking ID", "type": "string"}, "guestName": {"title": "Guest Name", "type": "string"}, "checkInDate": {"title": "Check-In Date", "type": "string", "format": "date"}, "checkOutDate": {"title": "Check-Out Date", "type": "string", "format": "date"}, "roomType": {"title": "Room Type", "type": "string"}, "additionalPreferences": {"title": "Additional Preferences", "type": "string"}}, "required": ["bookingID", "guestName", "checkInDate", "checkOutDate", "roomType"], "title": "HotelBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a leisure activity booking, including properties like activityID, participantName, activityDate, activityType, and any specialEquipmentNeeded.", "Schema": {"properties": {"activityID": {"title": "Activity ID", "type": "string"}, "participantName": {"title": "Participant Name", "type": "string"}, "activityDate": {"title": "Activity Date", "type": "string", "format": "date-time"}, "activityType": {"title": "Activity Type", "type": "string"}, "specialEquipmentNeeded": {"title": "Special Equipment Needed", "type": "string"}}, "required": ["activityID", "participantName", "activityDate", "activityType"], "title": "LeisureActivityBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for a customer feedback form for a hotel stay, including properties such as feedbackID, guestName, stayDuration, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "guestName": {"title": "Guest Name", "type": "string"}, "stayDuration": {"title": "Stay Duration", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "guestName", "stayDuration", "rating"], "title": "HotelFeedback", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for a restaurant menu item, including properties like itemID, itemName, description, price, and dietaryRestrictions.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "description": {"title": "Description", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "dietaryRestrictions": {"title": "Dietary Restrictions", "type": "string"}}, "required": ["itemID", "itemName", "description", "price"], "title": "MenuItem", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for a fitness center membership registration, including member details such as name, membership type, start date, and preferred classes.", "Schema": {"properties": {"name": {"title": "Name", "type": "string"}, "membershipType": {"title": "Membership Type", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "preferredClasses": {"items": {"type": "string"}, "title": "Preferred Classes", "type": "array"}}, "required": ["name", "membershipType", "startDate", "preferredClasses"], "title": "FitnessCenterMembershipRegistration", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON schema for a hotel booking system, capturing guest information, room preferences, check-in and check-out dates, and special requests.", "Schema": {"properties": {"guestInformation": {"title": "Guest Information", "type": "object", "properties": {"fullName": {"title": "Full Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["fullName", "contactNumber"]}, "roomPreferences": {"title": "Room Preferences", "type": "object", "properties": {"roomType": {"title": "Room Type", "type": "string"}, "bedType": {"title": "Bed Type", "type": "string"}}, "required": ["roomType", "bedType"]}, "checkInDate": {"format": "date", "title": "Check-In Date", "type": "string"}, "checkOutDate": {"format": "date", "title": "Check-Out Date", "type": "string"}, "specialRequests": {"items": {"type": "string"}, "title": "Special Requests", "type": "array"}}, "required": ["guestInformation", "roomPreferences", "checkInDate", "checkOutDate"], "title": "HotelBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a restaurant reservation system, including customer details, reservation date, time, party size, and any dietary restrictions.", "Schema": {"properties": {"customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "contactEmail": {"format": "email", "title": "Contact Email", "type": "string"}}, "required": ["customerName", "contactEmail"]}, "reservationDate": {"format": "date", "title": "Reservation Date", "type": "string"}, "reservationTime": {"title": "Reservation Time", "type": "string"}, "partySize": {"title": "Party Size", "type": "integer"}, "dietaryRestrictions": {"items": {"type": "string"}, "title": "Dietary Restrictions", "type": "array"}}, "required": ["customerDetails", "reservationDate", "reservationTime", "partySize"], "title": "RestaurantReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for a golf course tee time booking, including player information, desired date and time, number of holes, and equipment rental options.", "Schema": {"properties": {"playerInformation": {"title": "Player Information", "type": "object", "properties": {"playerName": {"title": "Player Name", "type": "string"}, "handicap": {"title": "Handicap", "type": "integer"}}, "required": ["playerName"]}, "desiredDate": {"format": "date", "title": "Desired Date", "type": "string"}, "desiredTime": {"title": "Desired Time", "type": "string"}, "numberOfHoles": {"title": "Number of Holes", "type": "integer"}, "equipmentRental": {"title": "Equipment Rental", "type": "object", "properties": {"clubs": {"title": "Clubs", "type": "boolean"}, "cart": {"title": "Cart", "type": "boolean"}}, "required": ["clubs", "cart"]}}, "required": ["playerInformation", "desiredDate", "desiredTime", "numberOfHoles", "equipmentRental"], "title": "GolfCourseTeeTimeBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for an amusement park ticket purchase, including visitor details, ticket type, visit date, and any add-on services like fast passes or meal plans.", "Schema": {"properties": {"visitorDetails": {"title": "Visitor Details", "type": "object", "properties": {"visitorName": {"title": "Visitor Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}}, "required": ["visitorName", "age"]}, "ticketType": {"title": "Ticket Type", "type": "string"}, "visitDate": {"format": "date", "title": "Visit Date", "type": "string"}, "addOnServices": {"title": "Add-On Services", "type": "object", "properties": {"fastPass": {"title": "Fast Pass", "type": "boolean"}, "mealPlan": {"title": "Meal Plan", "type": "boolean"}}, "required": ["fastPass", "mealPlan"]}}, "required": ["visitorDetails", "ticketType", "visitDate", "addOnServices"], "title": "AmusementParkTicketPurchase", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Create a JSON object for storing online course details, including properties like courseID, courseName, provider, platform, and enrollment figures.", "Schema": {"properties": {"courseID": {"title": "Course ID", "type": "string"}, "courseName": {"title": "Course Name", "type": "string"}, "provider": {"title": "Provider", "type": "string"}, "platform": {"title": "Platform", "type": "string"}, "enrollmentFigures": {"title": "Enrollment Figures", "type": "integer"}}, "required": ["courseID", "courseName", "provider", "platform", "enrollmentFigures"], "title": "OnlineCourseDetails", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Develop a JSON schema for a student profile, including properties such as studentID, fullName, enrolledCourses, and academicPerformance.", "Schema": {"properties": {"studentID": {"title": "Student ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "enrolledCourses": {"items": {"type": "string"}, "title": "Enrolled Courses", "type": "array"}, "academicPerformance": {"title": "Academic Performance", "type": "object", "properties": {"GPA": {"title": "GPA", "type": "number"}, "creditsEarned": {"title": "Credits Earned", "type": "integer"}}, "required": ["GPA", "creditsEarned"]}}, "required": ["studentID", "fullName", "enrolledCourses", "academicPerformance"], "title": "StudentProfile", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Construct a JSON object for a seminar event, including properties like eventID, title, date, location, and speaker details.", "Schema": {"properties": {"eventID": {"title": "Event ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "location": {"title": "Location", "type": "string"}, "speakerDetails": {"title": "Speaker Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "bio": {"title": "Bio", "type": "string"}}, "required": ["name", "bio"]}}, "required": ["eventID", "title", "date", "location", "speakerDetails"], "title": "SeminarEvent", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Design a JSON object for educational material, including properties such as materialID, title, subject, author, and publicationDate.", "Schema": {"properties": {"materialID": {"title": "Material ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "subject": {"title": "Subject", "type": "string"}, "author": {"title": "Author", "type": "string"}, "publicationDate": {"title": "Publication Date", "type": "string", "format": "date"}}, "required": ["materialID", "title", "subject", "author", "publicationDate"], "title": "EducationalMaterial", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Generate a JSON object representing a technical education program, including properties like programID, programName, duration, certifications, and associated industries.", "Schema": {"properties": {"programID": {"title": "Program ID", "type": "string"}, "programName": {"title": "Program Name", "type": "string"}, "duration": {"title": "Duration", "type": "string"}, "certifications": {"items": {"type": "string"}, "title": "Certifications", "type": "array"}, "associatedIndustries": {"items": {"type": "string"}, "title": "Associated Industries", "type": "array"}}, "required": ["programID", "programName", "duration", "certifications", "associatedIndustries"], "title": "TechnicalEducationProgram", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for a hotel reservation system, capturing guest information, room preferences, and payment details.", "Schema": {"properties": {"guestInformation": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "email": {"type": "string", "format": "email"}, "phoneNumber": {"type": "string"}}, "required": ["firstName", "lastName", "email", "phoneNumber"]}, "roomPreferences": {"type": "object", "properties": {"roomType": {"type": "string"}, "bedType": {"type": "string"}, "nonSmoking": {"type": "boolean"}}, "required": ["roomType", "bedType", "nonSmoking"]}, "paymentDetails": {"type": "object", "properties": {"cardType": {"type": "string"}, "cardNumber": {"type": "string"}, "expiryDate": {"type": "string", "format": "date"}, "cvv": {"type": "string"}}, "required": ["cardType", "cardNumber", "expiryDate", "cvv"]}}, "required": ["guestInformation", "roomPreferences", "paymentDetails"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON object for a restaurant booking system, including customer details, booking time, and special requests.", "Schema": {"properties": {"customerDetails": {"type": "object", "properties": {"name": {"type": "string"}, "contactNumber": {"type": "string"}}, "required": ["name", "contactNumber"]}, "bookingTime": {"type": "string", "format": "date-time"}, "specialRequests": {"type": "array", "items": {"type": "string"}}}, "required": ["customerDetails", "bookingTime"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a cruise ship itinerary, detailing ports of call, dates, and excursion options.", "Schema": {"properties": {"itinerary": {"type": "array", "items": {"type": "object", "properties": {"portOfCall": {"type": "string"}, "arrivalDate": {"type": "string", "format": "date"}, "departureDate": {"type": "string", "format": "date"}, "excursionOptions": {"type": "array", "items": {"type": "string"}}}, "required": ["portOfCall", "arrivalDate", "departureDate"]}}}, "required": ["itinerary"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for a travel agency's customer trip plan, including destinations, accommodations, and activities.", "Schema": {"properties": {"destinations": {"type": "array", "items": {"type": "string"}}, "accommodations": {"type": "array", "items": {"type": "object", "properties": {"hotelName": {"type": "string"}, "reservationDates": {"type": "object", "properties": {"checkIn": {"type": "string", "format": "date"}, "checkOut": {"type": "string", "format": "date"}}, "required": ["checkIn", "checkOut"]}}, "required": ["hotelName", "reservationDates"]}}, "activities": {"type": "array", "items": {"type": "object", "properties": {"activityName": {"type": "string"}, "bookingDate": {"type": "string", "format": "date"}}, "required": ["activityName", "bookingDate"]}}}, "required": ["destinations", "accommodations", "activities"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for a leisure activity provider's service offerings, including activity details, pricing, and availability.", "Schema": {"properties": {"activityDetails": {"type": "object", "properties": {"activityName": {"type": "string"}, "description": {"type": "string"}, "duration": {"type": "string"}}, "required": ["activityName", "description", "duration"]}, "pricing": {"type": "object", "properties": {"adultPrice": {"type": "number"}, "childPrice": {"type": "number"}, "groupDiscount": {"type": "boolean"}}, "required": ["adultPrice", "childPrice"]}, "availability": {"type": "object", "properties": {"datesAvailable": {"type": "array", "items": {"type": "string", "format": "date"}}, "capacity": {"type": "integer"}}, "required": ["datesAvailable", "capacity"]}}, "required": ["activityDetails", "pricing", "availability"], "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Create a JSON object for a customer service inquiry, including properties like inquiryID, customerName, issueDescription, and resolutionStatus.", "Schema": {"properties": {"inquiryID": {"title": "Inquiry ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string", "enum": ["Unresolved", "Resolved", "Pending"]}}, "required": ["inquiryID", "customerName", "issueDescription", "resolutionStatus"], "title": "CustomerServiceInquiry", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Develop a JSON object for a tutoring session booking, with properties such as sessionID, studentName, subject, tutorName, and sessionDateTime.", "Schema": {"properties": {"sessionID": {"title": "Session ID", "type": "string"}, "studentName": {"title": "Student Name", "type": "string"}, "subject": {"title": "Subject", "type": "string"}, "tutorName": {"title": "Tutor Name", "type": "string"}, "sessionDateTime": {"title": "Session Date Time", "type": "string", "format": "date-time"}}, "required": ["sessionID", "studentName", "subject", "tutorName", "sessionDateTime"], "title": "TutoringSessionBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Construct a JSON object for a gym membership registration, including properties like membershipID, memberName, membershipType, startDate, and endDate.", "Schema": {"properties": {"membershipID": {"title": "Membership ID", "type": "string"}, "memberName": {"title": "Member Name", "type": "string"}, "membershipType": {"title": "Membership Type", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["membershipID", "memberName", "membershipType", "startDate", "endDate"], "title": "GymMembershipRegistration", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Design a JSON object for a car rental reservation, including properties such as reservationID, renterName, vehicleModel, pickupDate, and returnDate.", "Schema": {"properties": {"reservationID": {"title": "Reservation ID", "type": "string"}, "renterName": {"title": "Renter Name", "type": "string"}, "vehicleModel": {"title": "Vehicle Model", "type": "string"}, "pickupDate": {"title": "Pickup Date", "type": "string", "format": "date"}, "returnDate": {"title": "Return Date", "type": "string", "format": "date"}}, "required": ["reservationID", "renterName", "vehicleModel", "pickupDate", "returnDate"], "title": "CarRentalReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Generate a JSON object for a pet grooming appointment, including properties like appointmentID, petOwnerName, petType, serviceRequested, and appointmentDateTime.", "Schema": {"properties": {"appointmentID": {"title": "Appointment ID", "type": "string"}, "petOwnerName": {"title": "Pet Owner Name", "type": "string"}, "petType": {"title": "Pet Type", "type": "string"}, "serviceRequested": {"title": "Service Requested", "type": "string"}, "appointmentDateTime": {"title": "Appointment Date Time", "type": "string", "format": "date-time"}}, "required": ["appointmentID", "petOwnerName", "petType", "serviceRequested", "appointmentDateTime"], "title": "PetGroomingAppointment", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Create a JSON object for a restaurant's menu, including properties like dishName, price, ingredients, and dietary restrictions.", "Schema": {"properties": {"dishName": {"title": "Dish Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "dietaryRestrictions": {"title": "Dietary Restrictions", "type": "array", "items": {"type": "string"}}}, "required": ["dishName", "price"], "title": "RestaurantMenu", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Develop a JSON object for a hotel booking, including properties such as bookingId, guestName, roomType, checkInDate, checkOutDate, and specialRequests.", "Schema": {"properties": {"bookingId": {"title": "Booking ID", "type": "string"}, "guestName": {"title": "Guest Name", "type": "string"}, "roomType": {"title": "Room Type", "type": "string"}, "checkInDate": {"title": "Check-In Date", "type": "string", "format": "date"}, "checkOutDate": {"title": "Check-Out Date", "type": "string", "format": "date"}, "specialRequests": {"title": "Special Requests", "type": "array", "items": {"type": "string"}}}, "required": ["bookingId", "guestName", "roomType", "checkInDate", "checkOutDate"], "title": "HotelBooking", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Construct a JSON object for a leisure activity reservation, including properties like activityName, reservationDate, numberOfParticipants, and specialRequirements.", "Schema": {"properties": {"activityName": {"title": "Activity Name", "type": "string"}, "reservationDate": {"title": "Reservation Date", "type": "string", "format": "date-time"}, "numberOfParticipants": {"title": "Number of Participants", "type": "integer"}, "specialRequirements": {"title": "Special Requirements", "type": "string"}}, "required": ["activityName", "reservationDate", "numberOfParticipants"], "title": "LeisureActivityReservation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Design a JSON object for a customer feedback form, including properties such as feedbackId, customerName, serviceDate, comments, and rating.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "comments": {"title": "Comments", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackId", "customerName", "serviceDate", "rating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Hotels, Restaurants & Leisure", "Task": "Generate a JSON object for a loyalty program member profile, including properties like memberId, memberName, pointsEarned, membershipLevel, and redemptionOptions.", "Schema": {"properties": {"memberId": {"title": "Member ID", "type": "string"}, "memberName": {"title": "Member Name", "type": "string"}, "pointsEarned": {"title": "Points Earned", "type": "integer"}, "membershipLevel": {"title": "Membership Level", "type": "string"}, "redemptionOptions": {"title": "Redemption Options", "type": "array", "items": {"type": "string"}}}, "required": ["memberId", "memberName", "pointsEarned"], "title": "LoyaltyProgramMemberProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Create a JSON object for a distributor's inventory item, including properties like itemID, itemName, quantity, price, and supplierID.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["itemID", "itemName", "quantity", "price", "supplierID"], "title": "InventoryItem", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Develop a JSON object for a distributor's order, including properties such as orderID, customerID, orderDate, items, and totalAmount.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemID", "quantity"]}}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["orderID", "customerID", "orderDate", "items", "totalAmount"], "title": "DistributorOrder", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Construct a JSON object for tracking a distributor's shipment, with properties like shipmentID, origin, destination, estimatedDelivery, and status.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedDelivery": {"title": "Estimated Delivery", "type": "string", "format": "date-time"}, "status": {"title": "Status", "type": "string"}}, "required": ["shipmentID", "origin", "destination", "estimatedDelivery", "status"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Design a JSON object for a distributor's customer profile, including properties such as customerID, name, contactDetails, and orderHistory.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "orderHistory": {"title": "Order History", "type": "array", "items": {"type": "object", "properties": {"orderID": {"title": "Order ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["orderID", "orderDate", "totalAmount"]}}}, "required": ["customerID", "name", "contactDetails", "orderHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Generate a JSON object for a distributor's sales report, including properties like reportID, period, totalSales, topItems, and growthPercentage.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "period": {"title": "Period", "type": "string"}, "totalSales": {"title": "Total Sales", "type": "number"}, "topItems": {"title": "Top Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantitySold": {"title": "Quantity Sold", "type": "integer"}}, "required": ["itemID", "itemName", "quantitySold"]}}, "growthPercentage": {"title": "Growth Percentage", "type": "number"}}, "required": ["reportID", "period", "totalSales", "topItems", "growthPercentage"], "title": "SalesReport", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Create a JSON object for querying a department store's product inventory, including properties like productId, productName, price, and stockLevel.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "stockLevel": {"title": "Stock Level", "type": "integer"}}, "required": ["productId", "productName", "price", "stockLevel"], "title": "ProductInventoryQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Develop a JSON object for a customer profile, including properties such as customerId, name, email, and purchaseHistory.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "purchaseDate", "quantity", "price"]}}}, "required": ["customerId", "name", "email"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Construct a JSON object for processing a return request, including properties like returnId, orderId, productId, reason, and refundAmount.", "Schema": {"properties": {"returnId": {"title": "Return ID", "type": "string"}, "orderId": {"title": "Order ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "reason": {"title": "Reason for Return", "type": "string"}, "refundAmount": {"title": "Refund Amount", "type": "number", "format": "float"}}, "required": ["returnId", "orderId", "productId", "reason", "refundAmount"], "title": "ReturnRequest", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Design a JSON object for a sales report, including properties such as reportId, dateRange, totalSales, and topSellingProducts.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "dateRange": {"title": "Date Range", "type": "object", "properties": {"startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["startDate", "endDate"]}, "totalSales": {"title": "Total Sales", "type": "number", "format": "float"}, "topSellingProducts": {"title": "Top Selling Products", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "unitsSold": {"title": "Units Sold", "type": "integer"}}, "required": ["productId", "unitsSold"]}}}, "required": ["reportId", "dateRange", "totalSales", "topSellingProducts"], "title": "SalesReport", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Generate a JSON object for a store location update, including properties like storeId, address, openingHours, and managerContact.", "Schema": {"properties": {"storeId": {"title": "Store ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "openingHours": {"title": "Opening Hours", "type": "string"}, "managerContact": {"title": "Manager Contact", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["name", "phone", "email"]}}, "required": ["storeId", "address", "openingHours", "managerContact"], "title": "StoreLocationUpdate", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Create a JSON object for a customer's online shopping cart, including items, quantities, and prices.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "items": {"type": "array", "items": {"type": "object", "properties": {"itemId": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}}, "required": ["itemId", "quantity", "price"]}}}, "required": ["customerId", "items"], "title": "ShoppingCart", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Develop a JSON object for processing a customer's online order, including billing and shipping details.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerDetails": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["name", "email"]}, "billingAddress": {"title": "Billing Address", "type": "object", "properties": {"street": {"title": "Street", "type": "string"}, "city": {"title": "City", "type": "string"}, "postalCode": {"title": "Postal Code", "type": "string"}}, "required": ["street", "city", "postalCode"]}, "shippingAddress": {"title": "Shipping Address", "type": "object", "properties": {"street": {"title": "Street", "type": "string"}, "city": {"title": "City", "type": "string"}, "postalCode": {"title": "Postal Code", "type": "string"}}, "required": ["street", "city", "postalCode"]}}, "required": ["orderId", "customerDetails", "billingAddress", "shippingAddress"], "title": "OnlineOrder", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Construct a JSON object for a product review, including the reviewer's details, product ID, rating, and comments.", "Schema": {"properties": {"reviewId": {"title": "Review ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "reviewer": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["name", "email"]}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["reviewId", "productId", "reviewer", "rating"], "title": "ProductReview", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Design a JSON object for tracking a customer's order shipment, including tracking number, carrier, and status updates.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "trackingNumber": {"title": "Tracking Number", "type": "string"}, "carrier": {"title": "Carrier", "type": "string"}, "statusUpdates": {"type": "array", "items": {"type": "object", "properties": {"status": {"title": "Status", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["status", "timestamp"]}}}, "required": ["orderId", "trackingNumber", "carrier", "statusUpdates"], "title": "OrderShipmentTracking", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Generate a JSON object for a user's wishlist, including a list of desired products with details such as product ID, name, and priority.", "Schema": {"properties": {"userId": {"title": "User ID", "type": "string"}, "wishlistItems": {"type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "priority": {"title": "Priority", "type": "integer"}}, "required": ["productId", "productName", "priority"]}}}, "required": ["userId", "wishlistItems"], "title": "UserWishlist", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Create a JSON object for a product listing on an online marketplace, including properties like productId, productName, price, and seller information.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "sellerInformation": {"title": "Seller Information", "type": "object", "properties": {"sellerId": {"title": "Seller ID", "type": "string"}, "sellerName": {"title": "Seller Name", "type": "string"}}, "required": ["sellerId", "sellerName"]}}, "required": ["productId", "productName", "price", "sellerInformation"], "title": "ProductListing", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Develop a JSON object for a customer profile on an e-commerce site, including properties like customerId, name, email, and purchase history.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"orderId": {"title": "Order ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "orderTotal": {"title": "Order Total", "type": "number", "format": "float"}}, "required": ["orderId", "orderDate", "orderTotal"]}}}, "required": ["customerId", "name", "email", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Construct a JSON object for an order summary, including properties like orderId, orderItems, totalAmount, and customer details.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "orderItems": {"title": "Order Items", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "itemPrice": {"title": "Item Price", "type": "number", "format": "float"}}, "required": ["productId", "quantity", "itemPrice"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}}, "required": ["customerId", "name"]}}, "required": ["orderId", "orderItems", "totalAmount", "customerDetails"], "title": "OrderSummary", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Design a JSON object for a shopping cart, including properties like cartId, items, and cartTotal.", "Schema": {"properties": {"cartId": {"title": "Cart ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "itemPrice": {"title": "Item Price", "type": "number", "format": "float"}}, "required": ["productId", "quantity", "itemPrice"]}}, "cartTotal": {"title": "Cart Total", "type": "number", "format": "float"}}, "required": ["cartId", "items", "cartTotal"], "title": "ShoppingCart", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Internet & Direct Marketing Retail (Discontinued)", "Task": "Generate a JSON object for a user review on a product, including properties like reviewId, productId, reviewer, rating, and comments.", "Schema": {"properties": {"reviewId": {"title": "Review ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "reviewer": {"title": "Reviewer", "type": "object", "properties": {"userId": {"title": "User ID", "type": "string"}, "name": {"title": "Name", "type": "string"}}, "required": ["userId", "name"]}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["reviewId", "productId", "reviewer", "rating", "comments"], "title": "UserReview", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Create a JSON object for storing distributor details, including properties like distributorID, companyName, contactInfo, and productCategories.", "Schema": {"properties": {"distributorID": {"title": "Distributor ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone Number", "type": "string"}, "email": {"title": "Email Address", "type": "string", "format": "email"}, "address": {"title": "Address", "type": "string"}}, "required": ["phone", "email", "address"]}, "productCategories": {"title": "Product Categories", "type": "array", "items": {"type": "string"}}}, "required": ["distributorID", "companyName", "contactInfo", "productCategories"], "title": "DistributorDetails", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Develop a JSON schema for a product inventory record, including properties like productID, productName, quantityAvailable, and distributorID.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "distributorID": {"title": "Distributor ID", "type": "string"}}, "required": ["productID", "productName", "quantityAvailable", "distributorID"], "title": "ProductInventory", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Construct a JSON object for a shipment record, including properties like shipmentID, distributorID, destination, shipmentDate, and itemsList.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "distributorID": {"title": "Distributor ID", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "shipmentDate": {"title": "Shipment Date", "type": "string", "format": "date"}, "itemsList": {"title": "Items List", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productID", "quantity"]}}}, "required": ["shipmentID", "distributorID", "destination", "shipmentDate", "itemsList"], "title": "ShipmentRecord", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Design a JSON object for a customer order, including properties like orderID, customerID, orderDate, items, and totalAmount.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "unitPrice": {"title": "Unit Price", "type": "number"}}, "required": ["productID", "quantity", "unitPrice"]}}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["orderID", "customerID", "orderDate", "items", "totalAmount"], "title": "CustomerOrder", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Distributors", "Task": "Generate a JSON object for tracking distributor performance metrics, including properties like distributorID, salesVolume, returnRate, and customerSatisfactionScore.", "Schema": {"properties": {"distributorID": {"title": "Distributor ID", "type": "string"}, "salesVolume": {"title": "Sales Volume", "type": "number"}, "returnRate": {"title": "Return Rate", "type": "number", "minimum": 0, "maximum": 1}, "customerSatisfactionScore": {"title": "Customer Satisfaction Score", "type": "integer", "minimum": 0, "maximum": 100}}, "required": ["distributorID", "salesVolume", "returnRate", "customerSatisfactionScore"], "title": "DistributorPerformanceMetrics", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Create a JSON object for a department store's inventory item, including properties like itemID, itemName, price, and stockLevel.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "stockLevel": {"title": "Stock Level", "type": "integer"}}, "required": ["itemID", "itemName", "price", "stockLevel"], "title": "InventoryItem", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, email, and purchaseHistory.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "datePurchased": {"title": "Date Purchased", "type": "string", "format": "date-time"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["itemID", "datePurchased", "quantity", "price"]}}}, "required": ["customerID", "name", "email", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Construct a JSON object for a sales transaction, including properties like transactionID, customerID, items, totalAmount, and transactionDate.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["itemID", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date-time"}}, "required": ["transactionID", "customerID", "items", "totalAmount", "transactionDate"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Design a JSON object for a store's daily sales report, including properties such as reportID, date, totalSales, and transactions.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "totalSales": {"title": "Total Sales", "type": "number", "format": "float"}, "transactions": {"title": "Transactions", "type": "array", "items": {"$ref": "#/$defs/Task/properties/Tasks/items/Schema/properties/transactionID"}}}, "required": ["reportID", "date", "totalSales", "transactions"], "title": "DailySalesReport", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Generate a JSON object for a product return, including properties like returnID, itemID, customerID, reason, and refundAmount.", "Schema": {"properties": {"returnID": {"title": "Return ID", "type": "string"}, "itemID": {"title": "Item ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "reason": {"title": "Reason", "type": "string"}, "refundAmount": {"title": "Refund Amount", "type": "number", "format": "float"}}, "required": ["returnID", "itemID", "customerID", "reason", "refundAmount"], "title": "ProductReturn", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Create a JSON object for a home renovation project, including properties like projectID, homeownerName, projectDescription, estimatedCost, and contractorDetails.", "Schema": {"properties": {"projectID": {"title": "ProjectID", "type": "string"}, "homeownerName": {"title": "HomeownerName", "type": "string"}, "projectDescription": {"title": "ProjectDescription", "type": "string"}, "estimatedCost": {"title": "EstimatedCost", "type": "number"}, "contractorDetails": {"title": "ContractorDetails", "type": "object", "properties": {"contractorName": {"title": "ContractorName", "type": "string"}, "licenseNumber": {"title": "LicenseNumber", "type": "string"}}, "required": ["contractorName", "licenseNumber"]}}, "required": ["projectID", "homeownerName", "projectDescription", "estimatedCost", "contractorDetails"], "title": "HomeRenovationProject", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Develop a JSON object for a wedding planning service, including properties like weddingID, coupleNames, weddingDate, venueDetails, and vendorList.", "Schema": {"properties": {"weddingID": {"title": "WeddingID", "type": "string"}, "coupleNames": {"title": "CoupleNames", "type": "object", "properties": {"partner1": {"title": "Partner1", "type": "string"}, "partner2": {"title": "Partner2", "type": "string"}}, "required": ["partner1", "partner2"]}, "weddingDate": {"title": "WeddingDate", "type": "string", "format": "date"}, "venueDetails": {"title": "VenueDetails", "type": "object", "properties": {"venueName": {"title": "VenueName", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["venueName", "location"]}, "vendorList": {"title": "VendorList", "type": "array", "items": {"type": "object", "properties": {"vendorType": {"title": "VendorType", "type": "string"}, "vendorName": {"title": "VendorName", "type": "string"}}, "required": ["vendorType", "vendorName"]}}}, "required": ["weddingID", "coupleNames", "weddingDate", "venueDetails", "vendorList"], "title": "WeddingPlanningService", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Construct a JSON object for a home security system installation, including properties like installationID, customerDetails, systemComponents, installationDate, and warrantyPeriod.", "Schema": {"properties": {"installationID": {"title": "InstallationID", "type": "string"}, "customerDetails": {"title": "CustomerDetails", "type": "object", "properties": {"customerName": {"title": "CustomerName", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerName", "address"]}, "systemComponents": {"title": "SystemComponents", "type": "array", "items": {"type": "string"}}, "installationDate": {"title": "InstallationDate", "type": "string", "format": "date"}, "warrantyPeriod": {"title": "WarrantyPeriod", "type": "string"}}, "required": ["installationID", "customerDetails", "systemComponents", "installationDate", "warrantyPeriod"], "title": "HomeSecuritySystemInstallation", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Design a JSON object for a personal legal service case, including properties like caseID, clientName, legalIssue, assignedLawyer, and caseStatus.", "Schema": {"properties": {"caseID": {"title": "CaseID", "type": "string"}, "clientName": {"title": "ClientName", "type": "string"}, "legalIssue": {"title": "LegalIssue", "type": "string"}, "assignedLawyer": {"title": "AssignedLawyer", "type": "object", "properties": {"lawyerName": {"title": "LawyerName", "type": "string"}, "lawyerID": {"title": "LawyerID", "type": "string"}}, "required": ["lawyerName", "lawyerID"]}, "caseStatus": {"title": "CaseStatus", "type": "string"}}, "required": ["caseID", "clientName", "legalIssue", "assignedLawyer", "caseStatus"], "title": "PersonalLegalServiceCase", "type": "object"}}
{"Category": "Consumer Services", "SubCategory": "Diversified Consumer Services", "Task": "Generate a JSON object for a funeral service arrangement, including properties like serviceID, deceasedName, funeralDate, serviceOptions, and paymentDetails.", "Schema": {"properties": {"serviceID": {"title": "ServiceID", "type": "string"}, "deceasedName": {"title": "DeceasedName", "type": "string"}, "funeralDate": {"title": "FuneralDate", "type": "string", "format": "date"}, "serviceOptions": {"title": "ServiceOptions", "type": "array", "items": {"type": "string"}}, "paymentDetails": {"title": "PaymentDetails", "type": "object", "properties": {"totalCost": {"title": "TotalCost", "type": "number"}, "paymentMethod": {"title": "PaymentMethod", "type": "string"}}, "required": ["totalCost", "paymentMethod"]}}, "required": ["serviceID", "deceasedName", "funeralDate", "serviceOptions", "paymentDetails"], "title": "FuneralServiceArrangement", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Create a JSON object for querying a product's availability in general merchandise stores, including properties like productId, storeId, and availabilityStatus.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "storeId": {"title": "Store ID", "type": "string"}, "availabilityStatus": {"title": "Availability Status", "type": "string", "enum": ["In Stock", "Out of Stock", "Backorder"]}}, "required": ["productId", "storeId", "availabilityStatus"], "title": "ProductAvailabilityQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Develop a JSON object for a customer's shopping cart, including properties like cartId, items (array of productId and quantity), and totalPrice.", "Schema": {"properties": {"cartId": {"title": "Cart ID", "type": "string"}, "items": {"type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productId", "quantity"]}, "title": "Items"}, "totalPrice": {"title": "Total Price", "type": "number"}}, "required": ["cartId", "items", "totalPrice"], "title": "ShoppingCart", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Construct a JSON object for processing a customer's order, including properties like orderId, customerId, orderDate, items (array of productId, price, and quantity), and orderTotal.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date-time"}, "items": {"type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "price": {"title": "Price", "type": "number"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productId", "price", "quantity"]}, "title": "Items"}, "orderTotal": {"title": "Order Total", "type": "number"}}, "required": ["orderId", "customerId", "orderDate", "items", "orderTotal"], "title": "CustomerOrder", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Design a JSON object for a store inventory update, including properties like storeId, productId, quantityAdded, and newQuantity.", "Schema": {"properties": {"storeId": {"title": "Store ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "quantityAdded": {"title": "Quantity Added", "type": "integer"}, "newQuantity": {"title": "New Quantity", "type": "integer"}}, "required": ["storeId", "productId", "quantityAdded", "newQuantity"], "title": "InventoryUpdate", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Generate a JSON object for a customer feedback submission, including properties like feedbackId, customerId, storeId, comments, and rating.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "storeId": {"title": "Store ID", "type": "string"}, "comments": {"title": "Comments", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackId", "customerId", "storeId", "comments", "rating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying available apparel items, including properties like itemID, itemName, size, color, and price.", "Schema": {"properties": {"itemID": {"title": "ItemID", "type": "string"}, "itemName": {"title": "ItemName", "type": "string"}, "size": {"title": "Size", "type": "string"}, "color": {"title": "Color", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["itemID", "itemName", "size", "color", "price"], "title": "ApparelItemQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for adding a new apparel item to inventory, with properties such as itemID, itemName, size, color, price, and quantity.", "Schema": {"properties": {"itemID": {"title": "ItemID", "type": "string"}, "itemName": {"title": "ItemName", "type": "string"}, "size": {"title": "Size", "type": "string"}, "color": {"title": "Color", "type": "string"}, "price": {"title": "Price", "type": "number"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemID", "itemName", "size", "color", "price", "quantity"], "title": "NewApparelItemInventory", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for updating the price of an apparel item, including properties like itemID and newPrice.", "Schema": {"properties": {"itemID": {"title": "ItemID", "type": "string"}, "newPrice": {"title": "NewPrice", "type": "number"}}, "required": ["itemID", "newPrice"], "title": "UpdateApparelItemPrice", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a customer's apparel wishlist, with properties such as customerID, wishlistItems (an array of itemIDs), and creationDate.", "Schema": {"properties": {"customerID": {"title": "CustomerID", "type": "string"}, "wishlistItems": {"items": {"type": "string"}, "title": "WishlistItems", "type": "array"}, "creationDate": {"format": "date", "title": "CreationDate", "type": "string"}}, "required": ["customerID", "wishlistItems", "creationDate"], "title": "CustomerWishlist", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for processing a return of an apparel item, including properties like transactionID, itemID, returnReason, and refundAmount.", "Schema": {"properties": {"transactionID": {"title": "TransactionID", "type": "string"}, "itemID": {"title": "ItemID", "type": "string"}, "returnReason": {"title": "ReturnReason", "type": "string"}, "refundAmount": {"title": "RefundAmount", "type": "number"}}, "required": ["transactionID", "itemID", "returnReason", "refundAmount"], "title": "ApparelItemReturn", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Create a JSON object for a product catalog entry, including properties like productId, productName, price, category, and availability status.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "category": {"title": "Category", "type": "string"}, "availabilityStatus": {"title": "Availability Status", "type": "boolean"}}, "required": ["productId", "productName", "price", "category", "availabilityStatus"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Develop a JSON object for a customer profile, including properties such as customerId, name, email, loyaltyPoints, and purchaseHistory.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "loyaltyPoints": {"title": "Loyalty Points", "type": "integer"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "string"}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["purchaseDate", "itemsPurchased", "totalAmount"]}}}, "required": ["customerId", "name", "email", "loyaltyPoints", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Construct a JSON object for an order, including properties like orderId, customerId, orderDate, items, and totalAmount.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date-time"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["orderId", "customerId", "orderDate", "items", "totalAmount"], "title": "Order", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Design a JSON object for a store inventory update, including properties such as storeId, productId, stockLevel, and restockDate.", "Schema": {"properties": {"storeId": {"title": "Store ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}}, "required": ["storeId", "productId", "stockLevel", "restockDate"], "title": "StoreInventoryUpdate", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Generate a JSON object for a sales report, including properties like reportId, dateRange, totalSales, topSellingProducts, and averageTransactionValue.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "dateRange": {"title": "Date Range", "type": "object", "properties": {"startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["startDate", "endDate"]}, "totalSales": {"title": "Total Sales", "type": "number", "format": "float"}, "topSellingProducts": {"title": "Top Selling Products", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "unitsSold": {"title": "Units Sold", "type": "integer"}}, "required": ["productId", "unitsSold"]}}, "averageTransactionValue": {"title": "Average Transaction Value", "type": "number", "format": "float"}}, "required": ["reportId", "dateRange", "totalSales", "topSellingProducts", "averageTransactionValue"], "title": "SalesReport", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying a product catalog, including properties like productId, productName, category, price, and availability.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "category": {"title": "Category", "type": "string"}, "price": {"title": "Price", "type": "number"}, "availability": {"title": "Availability", "type": "boolean"}}, "required": ["productId", "productName", "category", "price", "availability"], "title": "ProductCatalogQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for a customer profile, including properties such as customerId, name, email, purchaseHistory, and preferredCategories.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}, "purchaseHistory": {"items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "date": {"format": "date", "title": "Date of Purchase", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["productId", "date", "amount"]}, "title": "Purchase History", "type": "array"}, "preferredCategories": {"items": {"type": "string"}, "title": "Preferred Categories", "type": "array"}}, "required": ["customerId", "name", "email"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for processing a return request, including properties like returnId, orderId, productId, reason, and status.", "Schema": {"properties": {"returnId": {"title": "Return ID", "type": "string"}, "orderId": {"title": "Order ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "reason": {"title": "Reason for Return", "type": "string"}, "status": {"title": "Return Status", "type": "string", "enum": ["Pending", "Approved", "Rejected"]}}, "required": ["returnId", "orderId", "productId", "reason", "status"], "title": "ReturnRequest", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a loyalty program member, including properties such as memberId, pointsBalance, memberSince, and tier.", "Schema": {"properties": {"memberId": {"title": "Member ID", "type": "string"}, "pointsBalance": {"title": "Points Balance", "type": "integer"}, "memberSince": {"format": "date", "title": "Member Since", "type": "string"}, "tier": {"title": "Loyalty Tier", "type": "string", "enum": ["Bronze", "Silver", "Gold", "Platinum"]}}, "required": ["memberId", "pointsBalance", "memberSince", "tier"], "title": "LoyaltyProgramMember", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for a store inventory update, including properties like storeId, productId, quantity, and lastUpdated.", "Schema": {"properties": {"storeId": {"title": "Store ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "lastUpdated": {"format": "date-time", "title": "Last Updated", "type": "string"}}, "required": ["storeId", "productId", "quantity", "lastUpdated"], "title": "StoreInventoryUpdate", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Create a JSON object for a product catalog entry, including properties like productId, productName, price, and category.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "category": {"title": "Category", "type": "string"}}, "required": ["productId", "productName", "price", "category"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Generate a JSON object for a customer profile, including properties such as customerId, name, email, and purchaseHistory.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "datePurchased": {"title": "Date Purchased", "type": "string", "format": "date-time"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "datePurchased", "quantity", "price"]}}}, "required": ["customerId", "name", "email"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Construct a JSON object for an order, including properties like orderId, customerId, items, totalAmount, and orderStatus.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}, "orderStatus": {"title": "Order Status", "type": "string", "enum": ["pending", "shipped", "delivered", "cancelled"]}}, "required": ["orderId", "customerId", "items", "totalAmount", "orderStatus"], "title": "Order", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Design a JSON object for a store inventory item, including properties such as sku, stockLevel, restockDate, and supplierId.", "Schema": {"properties": {"sku": {"title": "SKU", "type": "string"}, "stockLevel": {"title": "Stock Level", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}, "supplierId": {"title": "Supplier ID", "type": "string"}}, "required": ["sku", "stockLevel", "restockDate", "supplierId"], "title": "StoreInventoryItem", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Formulate a JSON object for a sales report, including properties like reportId, dateRange, totalSales, and topSellingProducts.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "dateRange": {"title": "Date Range", "type": "object", "properties": {"startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["startDate", "endDate"]}, "totalSales": {"title": "Total Sales", "type": "number", "format": "float"}, "topSellingProducts": {"title": "Top Selling Products", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "unitsSold": {"title": "Units Sold", "type": "integer"}}, "required": ["productId", "unitsSold"]}}}, "required": ["reportId", "dateRange", "totalSales", "topSellingProducts"], "title": "SalesReport", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying a product's details in a computer & electronics retail database, including properties like productId, productName, specifications, price, and availability.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"processor": {"type": "string"}, "ram": {"type": "string"}, "storage": {"type": "string"}, "graphics": {"type": "string"}}, "required": ["processor", "ram", "storage", "graphics"]}, "price": {"title": "Price", "type": "number"}, "availability": {"title": "Availability", "type": "boolean"}}, "required": ["productId", "productName", "specifications", "price", "availability"], "title": "ProductDetailsQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for submitting a customer review for a product, including properties like productId, userId, rating, reviewText, and submissionDate.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "userId": {"title": "User ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}, "submissionDate": {"title": "Submission Date", "type": "string", "format": "date-time"}}, "required": ["productId", "userId", "rating", "reviewText", "submissionDate"], "title": "CustomerReviewSubmission", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a sales transaction in a computer & electronics store, including properties like transactionId, itemsPurchased, totalAmount, paymentMethod, and transactionDate.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "object", "properties": {"productId": {"type": "string"}, "quantity": {"type": "integer"}, "price": {"type": "number"}}, "required": ["productId", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number"}, "paymentMethod": {"title": "Payment Method", "type": "string"}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date-time"}}, "required": ["transactionId", "itemsPurchased", "totalAmount", "paymentMethod", "transactionDate"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for tracking inventory levels of products, including properties like productId, productName, currentStock, reorderLevel, and supplierId.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "currentStock": {"title": "Current Stock", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}, "supplierId": {"title": "Supplier ID", "type": "string"}}, "required": ["productId", "productName", "currentStock", "reorderLevel", "supplierId"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Formulate a JSON object for a customer loyalty program profile, including properties like customerId, name, email, pointsAccumulated, and membershipLevel.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "pointsAccumulated": {"title": "Points Accumulated", "type": "integer"}, "membershipLevel": {"title": "Membership Level", "type": "string"}}, "required": ["customerId", "name", "email", "pointsAccumulated", "membershipLevel"], "title": "LoyaltyProgramProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying a product's availability in a home improvement retail store, including properties like productId, storeLocation, and quantityAvailable.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "storeLocation": {"title": "Store Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["productId", "storeLocation"], "title": "ProductAvailabilityQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for submitting a customer review for a product, including properties such as productId, customerName, rating, and reviewText.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}}, "required": ["productId", "customerName", "rating"], "title": "CustomerReviewSubmission", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for a store's promotional event, including properties like eventName, startDate, endDate, and discountDetails.", "Schema": {"properties": {"eventName": {"title": "Event Name", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "discountDetails": {"title": "Discount Details", "type": "string"}}, "required": ["eventName", "startDate", "endDate"], "title": "PromotionalEvent", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for tracking a customer's loyalty points, including properties such as customerId, pointsEarned, pointsRedeemed, and currentBalance.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "pointsEarned": {"title": "Points Earned", "type": "integer"}, "pointsRedeemed": {"title": "Points Redeemed", "type": "integer"}, "currentBalance": {"title": "Current Balance", "type": "integer"}}, "required": ["customerId"], "title": "LoyaltyPointsTracker", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for a product return request, including properties like orderId, productId, returnReason, and customerContact.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "returnReason": {"title": "Return Reason", "type": "string"}, "customerContact": {"title": "Customer Contact", "type": "string"}}, "required": ["orderId", "productId", "returnReason"], "title": "ProductReturnRequest", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for a product inventory entry, including properties like SKU, productName, price, quantity, and supplier details.", "Schema": {"properties": {"SKU": {"title": "SKU", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierName", "contact"]}}, "required": ["SKU", "productName", "price", "quantity"], "title": "ProductInventoryEntry", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, contact information, and purchase history.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "string"}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["date", "itemsPurchased", "totalAmount"]}}}, "required": ["customerID", "name", "contactInformation"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for a sales transaction, capturing details like transactionID, date, cashierID, itemsSold, and totalSaleAmount.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "cashierID": {"title": "Cashier ID", "type": "string"}, "itemsSold": {"title": "Items Sold", "type": "array", "items": {"type": "object", "properties": {"SKU": {"title": "SKU", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["SKU", "quantity"]}}, "totalSaleAmount": {"title": "Total Sale Amount", "type": "number", "format": "float"}}, "required": ["transactionID", "date", "cashierID", "itemsSold", "totalSaleAmount"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for tracking store inventory replenishment, including properties such as replenishmentID, date, itemsReplenished, and supplierID.", "Schema": {"properties": {"replenishmentID": {"title": "Replenishment ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "itemsReplenished": {"title": "Items Replenished", "type": "array", "items": {"type": "object", "properties": {"SKU": {"title": "SKU", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["SKU", "quantity"]}}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["replenishmentID", "date", "itemsReplenished", "supplierID"], "title": "InventoryReplenishment", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for a customer feedback entry, including properties like feedbackID, customerID, date, comments, and satisfactionRating.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "comments": {"title": "Comments", "type": "string"}, "satisfactionRating": {"title": "Satisfaction Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackID", "customerID", "date", "comments", "satisfactionRating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Create a JSON object for a product inventory entry, including properties such as SKU, productName, price, quantity, and supplier information.", "Schema": {"properties": {"SKU": {"title": "SKU", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierInformation": {"title": "Supplier Information", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierName", "contact"]}}, "required": ["SKU", "productName", "price", "quantity", "supplierInformation"], "title": "ProductInventoryEntry", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, contactDetails, and purchaseHistory.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "string"}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["date", "itemsPurchased", "totalAmount"]}}}, "required": ["customerID", "name", "contactDetails", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Construct a JSON object for a sales transaction, including properties such as transactionID, date, itemsSold, paymentMethod, and cashierID.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "itemsSold": {"title": "Items Sold", "type": "array", "items": {"type": "object", "properties": {"SKU": {"title": "SKU", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["SKU", "quantity"]}}, "paymentMethod": {"title": "Payment Method", "type": "string"}, "cashierID": {"title": "Cashier ID", "type": "string"}}, "required": ["transactionID", "date", "itemsSold", "paymentMethod", "cashierID"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Design a JSON object for a store location, including properties such as storeID, address, openingHours, and managerDetails.", "Schema": {"properties": {"storeID": {"title": "Store ID", "type": "string"}, "address": {"title": "Address", "type": "object", "properties": {"street": {"title": "Street", "type": "string"}, "city": {"title": "City", "type": "string"}, "state": {"title": "State", "type": "string"}, "zipCode": {"title": "Zip Code", "type": "string"}}, "required": ["street", "city", "state", "zipCode"]}, "openingHours": {"title": "Opening Hours", "type": "string"}, "managerDetails": {"title": "Manager Details", "type": "object", "properties": {"managerName": {"title": "Manager Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["managerName", "contact"]}}, "required": ["storeID", "address", "openingHours", "managerDetails"], "title": "StoreLocation", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Broadline Retail (New Name)", "Task": "Generate a JSON object for an online order, including properties such as orderID, customerID, orderDate, itemsOrdered, shippingAddress, and orderStatus.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date-time"}, "itemsOrdered": {"title": "Items Ordered", "type": "array", "items": {"type": "object", "properties": {"SKU": {"title": "SKU", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["SKU", "quantity", "price"]}}, "shippingAddress": {"title": "Shipping Address", "type": "object", "properties": {"street": {"title": "Street", "type": "string"}, "city": {"title": "City", "type": "string"}, "state": {"title": "State", "type": "string"}, "zipCode": {"title": "Zip Code", "type": "string"}}, "required": ["street", "city", "state", "zipCode"]}, "orderStatus": {"title": "Order Status", "type": "string"}}, "required": ["orderID", "customerID", "orderDate", "itemsOrdered", "shippingAddress", "orderStatus"], "title": "OnlineOrder", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying automotive retail inventory, including properties like vehicleMake, model, year, and price range.", "Schema": {"properties": {"vehicleMake": {"title": "Vehicle Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer", "minimum": 1900, "maximum": 2023}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"minPrice": {"title": "Minimum Price", "type": "number", "minimum": 0}, "maxPrice": {"title": "Maximum Price", "type": "number"}}, "required": ["minPrice", "maxPrice"]}}, "required": ["vehicleMake", "model", "year", "priceRange"], "title": "AutomotiveRetailInventoryQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for a customer profile in automotive retail, including properties like customerID, name, contactDetails, and purchaseHistory.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"email": {"format": "email", "title": "Email", "type": "string"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"purchaseDate": {"format": "date", "title": "Purchase Date", "type": "string"}, "vehicleMake": {"title": "Vehicle Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer"}}, "required": ["purchaseDate", "vehicleMake", "model", "year"]}}}, "required": ["customerID", "name", "contactDetails", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for automotive service appointments, including properties like appointmentID, customerID, vehicleDetails, serviceType, and appointmentDate.", "Schema": {"properties": {"appointmentID": {"title": "Appointment ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "vehicleDetails": {"title": "Vehicle Details", "type": "object", "properties": {"vehicleMake": {"title": "Vehicle Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer"}}, "required": ["vehicleMake", "model", "year"]}, "serviceType": {"title": "Service Type", "type": "string"}, "appointmentDate": {"format": "date-time", "title": "Appointment Date", "type": "string"}}, "required": ["appointmentID", "customerID", "vehicleDetails", "serviceType", "appointmentDate"], "title": "AutomotiveServiceAppointment", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for tracking automotive parts inventory, including properties like partID, partName, vehiclesCompatible, quantityInStock, and reorderLevel.", "Schema": {"properties": {"partID": {"title": "Part ID", "type": "string"}, "partName": {"title": "Part Name", "type": "string"}, "vehiclesCompatible": {"title": "Vehicles Compatible", "type": "array", "items": {"type": "string"}}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer", "minimum": 0}, "reorderLevel": {"title": "Reorder Level", "type": "integer", "minimum": 0}}, "required": ["partID", "partName", "vehiclesCompatible", "quantityInStock", "reorderLevel"], "title": "AutomotivePartsInventory", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Formulate a JSON object for automotive sales data, including properties like saleID, vehicleSold, saleDate, customerID, and saleAmount.", "Schema": {"properties": {"saleID": {"title": "Sale ID", "type": "string"}, "vehicleSold": {"title": "Vehicle Sold", "type": "object", "properties": {"vehicleMake": {"title": "Vehicle Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer"}}, "required": ["vehicleMake", "model", "year"]}, "saleDate": {"format": "date", "title": "Sale Date", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "saleAmount": {"title": "Sale Amount", "type": "number"}}, "required": ["saleID", "vehicleSold", "saleDate", "customerID", "saleAmount"], "title": "AutomotiveSalesData", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying a product inventory, including properties like productID, productName, quantityAvailable, and price.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productID", "productName", "quantityAvailable", "price"], "title": "ProductInventoryQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, email, and purchaseHistory.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "datePurchased": {"title": "Date Purchased", "type": "string", "format": "date"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productID", "datePurchased", "quantity", "price"]}}}, "required": ["customerID", "name", "email"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for processing a sales transaction, including properties like transactionID, customerID, itemsPurchased, and totalAmount.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productID", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["transactionID", "customerID", "itemsPurchased", "totalAmount"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a product return request, including properties such as returnID, orderID, productID, reasonForReturn, and refundAmount.", "Schema": {"properties": {"returnID": {"title": "Return ID", "type": "string"}, "orderID": {"title": "Order ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "reasonForReturn": {"title": "Reason for Return", "type": "string"}, "refundAmount": {"title": "Refund Amount", "type": "number", "format": "float"}}, "required": ["returnID", "orderID", "productID", "reasonForReturn", "refundAmount"], "title": "ProductReturnRequest", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for a supplier inventory update, including properties like supplierID, productID, updatedQuantity, and restockDate.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "updatedQuantity": {"title": "Updated Quantity", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}}, "required": ["supplierID", "productID", "updatedQuantity", "restockDate"], "title": "SupplierInventoryUpdate", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying a home furnishing retail database for product availability, including properties like productId, storeLocation, and quantityAvailable.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "storeLocation": {"title": "Store Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["productId", "storeLocation"], "title": "ProductAvailabilityQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for submitting a customer feedback form, including properties such as feedbackId, customerName, comments, and satisfactionRating.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "comments": {"title": "Comments", "type": "string"}, "satisfactionRating": {"title": "Satisfaction Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackId", "customerName", "satisfactionRating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for a retail store inventory update, including properties like sku, productName, newStockLevel, and restockDate.", "Schema": {"properties": {"sku": {"title": "SKU", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "newStockLevel": {"title": "New Stock Level", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}}, "required": ["sku", "productName", "newStockLevel"], "title": "InventoryUpdate", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a customer loyalty program registration, including properties such as memberId, fullName, email, and pointsAccumulated.", "Schema": {"properties": {"memberId": {"title": "Member ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "pointsAccumulated": {"title": "Points Accumulated", "type": "integer", "default": 0}}, "required": ["memberId", "fullName", "email"], "title": "LoyaltyProgramRegistration", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for an online order tracking system, including properties like orderId, customerName, orderStatus, and estimatedDeliveryDate.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "orderStatus": {"title": "Order Status", "type": "string", "enum": ["Processing", "Shipped", "Delivered", "Cancelled"]}, "estimatedDeliveryDate": {"title": "Estimated Delivery Date", "type": "string", "format": "date"}}, "required": ["orderId", "customerName", "orderStatus"], "title": "OrderTracking", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for a product catalog entry, including properties like productId, productName, price, and category.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "category": {"title": "Category", "type": "string"}}, "required": ["productId", "productName", "price", "category"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for a customer profile, including properties such as customerId, name, email, and purchaseHistory.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "datePurchased": {"title": "Date Purchased", "type": "string", "format": "date-time"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "datePurchased", "quantity", "price"]}}}, "required": ["customerId", "name", "email", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for a store inventory update, including properties like storeId, productUpdates, and updateTimestamp.", "Schema": {"properties": {"storeId": {"title": "Store ID", "type": "string"}, "productUpdates": {"title": "Product Updates", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "stockChange": {"title": "Stock Change", "type": "integer"}}, "required": ["productId", "stockChange"]}}, "updateTimestamp": {"title": "Update Timestamp", "type": "string", "format": "date-time"}}, "required": ["storeId", "productUpdates", "updateTimestamp"], "title": "StoreInventoryUpdate", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a sales transaction, including properties such as transactionId, itemsSold, totalAmount, and transactionDate.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "itemsSold": {"title": "Items Sold", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "quantity", "price"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date-time"}}, "required": ["transactionId", "itemsSold", "totalAmount", "transactionDate"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for an online order, including properties like orderId, customerDetails, orderItems, and deliveryStatus.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerId": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerId", "name", "address"]}, "orderItems": {"title": "Order Items", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "quantity", "price"]}}, "deliveryStatus": {"title": "Delivery Status", "type": "string", "enum": ["Pending", "Shipped", "Delivered", "Cancelled"]}}, "required": ["orderId", "customerDetails", "orderItems", "deliveryStatus"], "title": "OnlineOrder", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for querying a drug's inventory status, including properties like drugID, storeLocation, and quantityAvailable.", "Schema": {"properties": {"drugID": {"title": "Drug ID", "type": "string"}, "storeLocation": {"title": "Store Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["drugID", "storeLocation", "quantityAvailable"], "title": "DrugInventoryStatus", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON object for a customer's prescription refill request, including properties like customerID, prescriptionID, refillDate, and dosage.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "prescriptionID": {"title": "Prescription ID", "type": "string"}, "refillDate": {"format": "date", "title": "Refill Date", "type": "string"}, "dosage": {"title": "Dosage", "type": "string"}}, "required": ["customerID", "prescriptionID", "refillDate", "dosage"], "title": "PrescriptionRefillRequest", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for tracking a customer's loyalty points, including properties like customerID, pointsEarned, and pointsRedeemed.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "pointsEarned": {"title": "Points Earned", "type": "integer"}, "pointsRedeemed": {"title": "Points Redeemed", "type": "integer"}}, "required": ["customerID", "pointsEarned", "pointsRedeemed"], "title": "CustomerLoyaltyPoints", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for a product's pricing information, including properties like productID, price, discount, and currency.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "discount": {"title": "Discount", "type": "number", "format": "float"}, "currency": {"title": "Currency", "type": "string"}}, "required": ["productID", "price", "currency"], "title": "ProductPricing", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object for a store's operational hours, including properties like storeID, openingTime, closingTime, and daysOpen.", "Schema": {"properties": {"storeID": {"title": "Store ID", "type": "string"}, "openingTime": {"title": "Opening Time", "type": "string", "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"}, "closingTime": {"title": "Closing Time", "type": "string", "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"}, "daysOpen": {"title": "Days Open", "type": "array", "items": {"type": "string", "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]}}}, "required": ["storeID", "openingTime", "closingTime", "daysOpen"], "title": "StoreOperationalHours", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying automotive retail store details, including properties like storeName, location, and types of products offered.", "Schema": {"properties": {"storeName": {"title": "Store Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "productsOffered": {"items": {"type": "string"}, "title": "Products Offered", "type": "array"}}, "required": ["storeName", "location", "productsOffered"], "title": "AutomotiveRetailStoreDetails", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for an API call to retrieve inventory data for auto accessories, including properties like accessoryName, SKU, price, and quantity in stock.", "Schema": {"properties": {"accessoryName": {"title": "Accessory Name", "type": "string"}, "SKU": {"title": "SKU", "type": "string"}, "price": {"title": "Price", "type": "number"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}}, "required": ["accessoryName", "SKU", "price", "quantityInStock"], "title": "AutoAccessoryInventory", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for a customer profile in an automotive retail database, including properties like customerName, contactDetails, purchaseHistory, and preferredBrands.", "Schema": {"properties": {"customerName": {"title": "Customer Name", "type": "string"}, "contactDetails": {"type": "object", "properties": {"email": {"format": "email", "title": "Email", "type": "string"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "purchaseHistory": {"items": {"type": "object", "properties": {"date": {"format": "date", "title": "Date", "type": "string"}, "item": {"title": "Item", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["date", "item", "amount"]}, "title": "Purchase History", "type": "array"}, "preferredBrands": {"items": {"type": "string"}, "title": "Preferred Brands", "type": "array"}}, "required": ["customerName", "contactDetails", "purchaseHistory", "preferredBrands"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a service appointment at an automotive equipment & parts store, including properties like appointmentID, customerDetails, serviceType, and appointmentDate.", "Schema": {"properties": {"appointmentID": {"title": "Appointment ID", "type": "string"}, "customerDetails": {"type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["customerName", "contact"]}, "serviceType": {"title": "Service Type", "type": "string"}, "appointmentDate": {"format": "date-time", "title": "Appointment Date", "type": "string"}}, "required": ["appointmentID", "customerDetails", "serviceType", "appointmentDate"], "title": "ServiceAppointment", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for tracking sales transactions at gas stations, including properties like transactionID, fuelType, quantity, pricePerUnit, and timestamp.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "fuelType": {"title": "Fuel Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "pricePerUnit": {"title": "Price Per Unit", "type": "number"}, "timestamp": {"format": "date-time", "title": "Timestamp", "type": "string"}}, "required": ["transactionID", "fuelType", "quantity", "pricePerUnit", "timestamp"], "title": "GasStationSalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for a product inventory entry, including properties like productID, productName, price, stockQuantity, and supplier.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "stockQuantity": {"title": "Stock Quantity", "type": "integer"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["productID", "productName", "price", "stockQuantity"], "title": "ProductInventoryEntry", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, email, phone, and purchaseHistory.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "amount": {"title": "Amount", "type": "number", "format": "float"}}}}}, "required": ["customerID", "name", "email"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for a sales transaction, including properties like transactionID, customerID, items, totalAmount, and date.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}, "date": {"title": "Date", "type": "string", "format": "date-time"}}, "required": ["transactionID", "customerID", "items", "totalAmount", "date"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a supplier profile, including properties such as supplierID, companyName, contactName, phone, and address.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactName": {"title": "Contact Name", "type": "string"}, "phone": {"title": "Phone", "type": "string"}, "address": {"title": "Address", "type": "object", "properties": {"street": {"title": "Street", "type": "string"}, "city": {"title": "City", "type": "string"}, "state": {"title": "State", "type": "string"}, "zipCode": {"title": "Zip Code", "type": "string"}, "country": {"title": "Country", "type": "string"}}}}, "required": ["supplierID", "companyName", "contactName", "phone", "address"], "title": "SupplierProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for a store inventory update, including properties like storeID, productUpdates, and updateTimestamp.", "Schema": {"properties": {"storeID": {"title": "Store ID", "type": "string"}, "productUpdates": {"title": "Product Updates", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "stockChange": {"title": "Stock Change", "type": "integer"}}}}, "updateTimestamp": {"title": "Update Timestamp", "type": "string", "format": "date-time"}}, "required": ["storeID", "productUpdates", "updateTimestamp"], "title": "StoreInventoryUpdate", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for a drug retail store inventory item, including properties like itemName, itemID, price, and stockLevel.", "Schema": {"properties": {"itemName": {"title": "Item Name", "type": "string"}, "itemID": {"title": "Item ID", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "stockLevel": {"title": "Stock Level", "type": "integer"}}, "required": ["itemName", "itemID", "price", "stockLevel"], "title": "InventoryItem", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON schema for a pharmacy prescription record, including properties such as prescriptionID, patientName, medication, dosage, and refill information.", "Schema": {"properties": {"prescriptionID": {"title": "Prescription ID", "type": "string"}, "patientName": {"title": "Patient Name", "type": "string"}, "medication": {"title": "Medication", "type": "string"}, "dosage": {"title": "Dosage", "type": "string"}, "refillInformation": {"title": "Refill Information", "type": "object", "properties": {"refillCount": {"title": "Refill Count", "type": "integer"}, "refillUntilDate": {"title": "Refill Until Date", "type": "string", "format": "date"}}}}, "required": ["prescriptionID", "patientName", "medication", "dosage", "refillInformation"], "title": "PrescriptionRecord", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for a customer loyalty program profile, including properties like customerID, name, points, and tier status.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "points": {"title": "Points", "type": "integer"}, "tierStatus": {"title": "Tier Status", "type": "string", "enum": ["Bronze", "Silver", "Gold", "Platinum"]}}, "required": ["customerID", "name", "points", "tierStatus"], "title": "LoyaltyProgramProfile", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for tracking a pharmacy's drug dispensation, including properties such as dispensationID, medicationName, quantity, and patient information.", "Schema": {"properties": {"dispensationID": {"title": "Dispensation ID", "type": "string"}, "medicationName": {"title": "Medication Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "patientInformation": {"title": "Patient Information", "type": "object", "properties": {"patientID": {"title": "Patient ID", "type": "string"}, "patientName": {"title": "Patient Name", "type": "string"}}}}, "required": ["dispensationID", "medicationName", "quantity", "patientInformation"], "title": "DrugDispensation", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object representing a supplier's delivery to a pharmacy, including properties like deliveryID, supplierName, deliveredItems, and deliveryDate.", "Schema": {"properties": {"deliveryID": {"title": "Delivery ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "deliveredItems": {"title": "Delivered Items", "type": "array", "items": {"type": "object", "properties": {"itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemName", "quantity"]}}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["deliveryID", "supplierName", "deliveredItems", "deliveryDate"], "title": "SupplierDelivery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Create a JSON object for querying a furniture store's inventory, including properties like itemID, itemName, category, price, and stockLevel.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "category": {"title": "Category", "type": "string"}, "price": {"title": "Price", "type": "number"}, "stockLevel": {"title": "Stock Level", "type": "integer"}}, "required": ["itemID", "itemName", "category", "price", "stockLevel"], "title": "FurnitureInventoryQuery", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Develop a JSON object for a customer profile in a home furnishings retail store, including properties like customerID, fullName, email, purchaseHistory, and preferredCategories.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}, "purchaseHistory": {"items": {"type": "object", "properties": {"itemID": {"type": "string"}, "datePurchased": {"format": "date", "type": "string"}, "price": {"type": "number"}}, "required": ["itemID", "datePurchased", "price"]}, "title": "Purchase History", "type": "array"}, "preferredCategories": {"items": {"type": "string"}, "title": "Preferred Categories", "type": "array"}}, "required": ["customerID", "fullName", "email"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Construct a JSON object for processing online orders, including properties like orderID, customerID, items, totalAmount, and shippingDetails.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "items": {"items": {"type": "object", "properties": {"itemID": {"type": "string"}, "quantity": {"type": "integer"}, "price": {"type": "number"}}, "required": ["itemID", "quantity", "price"]}, "title": "Items", "type": "array"}, "totalAmount": {"title": "Total Amount", "type": "number"}, "shippingDetails": {"type": "object", "properties": {"address": {"type": "string"}, "estimatedDelivery": {"format": "date", "type": "string"}}, "required": ["address", "estimatedDelivery"], "title": "Shipping Details"}}, "required": ["orderID", "customerID", "items", "totalAmount", "shippingDetails"], "title": "OnlineOrderProcessing", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Design a JSON object for a product review system, including properties like reviewID, customerID, itemID, rating, comment, and submissionDate.", "Schema": {"properties": {"reviewID": {"title": "Review ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "itemID": {"title": "Item ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comment": {"title": "Comment", "type": "string"}, "submissionDate": {"format": "date-time", "title": "Submission Date", "type": "string"}}, "required": ["reviewID", "customerID", "itemID", "rating", "submissionDate"], "title": "ProductReview", "type": "object"}}
{"Category": "Consumer Discretionary Distribution & Retail (New Name)", "SubCategory": "Specialty Retail", "Task": "Generate a JSON object for tracking in-store customer assistance requests, including properties like requestID, customerID, assistanceType, status, and assignedEmployee.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "assistanceType": {"title": "Assistance Type", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Pending", "In Progress", "Completed"]}, "assignedEmployee": {"title": "Assigned Employee", "type": "string"}}, "required": ["requestID", "customerID", "assistanceType", "status"], "title": "CustomerAssistanceRequest", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for querying product inventory, including properties like productId, productName, quantityAvailable, and storeLocation.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "storeLocation": {"title": "Store Location", "type": "string"}}, "required": ["productId", "productName", "quantityAvailable", "storeLocation"], "title": "ProductInventoryQuery", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON object for adding a new product to the inventory, with properties such as productId, productName, initialQuantity, supplierId, and price.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "initialQuantity": {"title": "Initial Quantity", "type": "integer"}, "supplierId": {"title": "Supplier ID", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "productName", "initialQuantity", "supplierId", "price"], "title": "NewProductInventory", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for updating the price of an existing product, including properties like productId, newPrice, and effectiveDate.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "newPrice": {"title": "New Price", "type": "number", "format": "float"}, "effectiveDate": {"title": "Effective Date", "type": "string", "format": "date"}}, "required": ["productId", "newPrice", "effectiveDate"], "title": "UpdateProductPrice", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for a customer's shopping cart, including properties such as cartId, customerId, items (array of productId and quantity), and totalPrice.", "Schema": {"properties": {"cartId": {"title": "Cart ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "items": {"type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productId", "quantity"]}, "title": "Items"}, "totalPrice": {"title": "Total Price", "type": "number", "format": "float"}}, "required": ["cartId", "customerId", "items", "totalPrice"], "title": "ShoppingCart", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object for processing a customer order, with properties like orderId, customerId, orderItems (array of productId, quantity, and price), orderDate, and orderStatus.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "orderItems": {"type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productId", "quantity", "price"]}, "title": "Order Items"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "orderStatus": {"title": "Order Status", "type": "string", "enum": ["Pending", "Processing", "Shipped", "Delivered", "Cancelled"]}}, "required": ["orderId", "customerId", "orderItems", "orderDate", "orderStatus"], "title": "CustomerOrder", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for a product inventory entry, including properties like productName, SKU, price, quantity, and supplier information.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierInformation": {"title": "Supplier Information", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["supplierName", "contact", "address"]}}, "required": ["productName", "SKU", "price", "quantity", "supplierInformation"], "title": "ProductInventoryEntry", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, contact details, and purchase history.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "string"}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["date", "itemsPurchased", "totalAmount"]}}}, "required": ["customerID", "name", "contactDetails", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for a sales transaction, capturing details like transactionID, date, cashierID, items sold, and total cost.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "cashierID": {"title": "Cashier ID", "type": "string"}, "itemsSold": {"title": "Items Sold", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productName", "quantity", "price"]}}, "totalCost": {"title": "Total Cost", "type": "number", "format": "float"}}, "required": ["transactionID", "date", "cashierID", "itemsSold", "totalCost"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for tracking store inventory replenishment, including properties like productID, restockDate, quantityAdded, and supplierID.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}, "quantityAdded": {"title": "Quantity Added", "type": "integer"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["productID", "restockDate", "quantityAdded", "supplierID"], "title": "InventoryReplenishment", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object for a supplier contract, detailing properties such as contractID, supplierName, startDate, endDate, and terms of delivery.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "termsOfDelivery": {"title": "Terms of Delivery", "type": "string"}}, "required": ["contractID", "supplierName", "startDate", "endDate", "termsOfDelivery"], "title": "SupplierContract", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for a product inventory entry, including properties like productName, SKU, price, quantity, and supplier information.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierInformation": {"title": "Supplier Information", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["supplierName", "contact"]}}, "required": ["productName", "SKU", "price", "quantity", "supplierInformation"], "title": "ProductInventoryEntry", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, contact details, and purchase history.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"email": {"format": "email", "title": "Email", "type": "string"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"format": "date", "title": "Date", "type": "string"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "string"}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["date", "itemsPurchased", "totalAmount"]}}}, "required": ["customerID", "name", "contactDetails", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for a sales transaction, including properties like transactionID, date, itemsSold, totalCost, and cashier details.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "date": {"format": "date-time", "title": "Date", "type": "string"}, "itemsSold": {"title": "Items Sold", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productName", "quantity", "price"]}}, "totalCost": {"title": "Total Cost", "type": "number", "format": "float"}, "cashierDetails": {"title": "Cashier Details", "type": "object", "properties": {"cashierID": {"title": "Cashier ID", "type": "string"}, "cashierName": {"title": "Cashier Name", "type": "string"}}, "required": ["cashierID", "cashierName"]}}, "required": ["transactionID", "date", "itemsSold", "totalCost", "cashierDetails"], "title": "SalesTransaction", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for tracking store inventory replenishment, including properties such as productID, restockDate, quantityAdded, and supplierID.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "restockDate": {"format": "date", "title": "Restock Date", "type": "string"}, "quantityAdded": {"title": "Quantity Added", "type": "integer"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["productID", "restockDate", "quantityAdded", "supplierID"], "title": "InventoryReplenishment", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object for a supplier contract, including properties like contractID, supplierName, effectiveDate, expirationDate, and terms.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "effectiveDate": {"format": "date", "title": "Effective Date", "type": "string"}, "expirationDate": {"format": "date", "title": "Expiration Date", "type": "string"}, "terms": {"title": "Terms", "type": "string"}}, "required": ["contractID", "supplierName", "effectiveDate", "expirationDate", "terms"], "title": "SupplierContract", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for a food product distribution entry, including properties like productName, quantity, destinationCompany, and deliveryDate.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "destinationCompany": {"title": "Destination Company", "type": "string"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["productName", "quantity", "destinationCompany", "deliveryDate"], "title": "FoodProductDistribution", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON object for tracking inventory levels, with properties such as itemID, itemName, currentStock, and reorderThreshold.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "currentStock": {"title": "Current Stock", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["itemID", "itemName", "currentStock", "reorderThreshold"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for a new supplier entry, including details like supplierName, contactInfo, productTypes, and reliabilityRating.", "Schema": {"properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "productTypes": {"title": "Product Types", "type": "array", "items": {"type": "string"}}, "reliabilityRating": {"title": "Reliability Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["supplierName", "contactInfo", "productTypes", "reliabilityRating"], "title": "SupplierEntry", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for a customer order, with fields like orderID, customerDetails, orderedItems, totalPrice, and deliveryStatus.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["customerName", "address"]}, "orderedItems": {"title": "Ordered Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemID", "quantity"]}}, "totalPrice": {"title": "Total Price", "type": "number", "format": "float"}, "deliveryStatus": {"title": "Delivery Status", "type": "string", "enum": ["Pending", "Shipped", "Delivered", "Cancelled"]}}, "required": ["orderID", "customerDetails", "orderedItems", "totalPrice", "deliveryStatus"], "title": "CustomerOrder", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object for a product return process, including properties like returnID, orderID, productDetails, reasonForReturn, and refundAmount.", "Schema": {"properties": {"returnID": {"title": "Return ID", "type": "string"}, "orderID": {"title": "Order ID", "type": "string"}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productName", "quantity"]}, "reasonForReturn": {"title": "Reason for Return", "type": "string"}, "refundAmount": {"title": "Refund Amount", "type": "number", "format": "float"}}, "required": ["returnID", "orderID", "productDetails", "reasonForReturn", "refundAmount"], "title": "ProductReturn", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Create a JSON object for a beer product entry, including properties like productName, alcoholContent, ingredients, and breweryLocation.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "alcoholContent": {"title": "Alcohol Content", "type": "number", "format": "float"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "breweryLocation": {"title": "Brewery Location", "type": "string"}}, "required": ["productName", "alcoholContent", "ingredients", "breweryLocation"], "title": "BeerProductEntry", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Develop a JSON schema for a malt liquor product, detailing properties such as productID, brandName, manufacturer, and distributionRegions.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "brandName": {"title": "Brand Name", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "distributionRegions": {"title": "Distribution Regions", "type": "array", "items": {"type": "string"}}}, "required": ["productID", "brandName", "manufacturer", "distributionRegions"], "title": "MaltLiquorProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Construct a JSON object for tracking brewery production output, including properties like date, totalLitersProduced, and varietyCount.", "Schema": {"properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "totalLitersProduced": {"title": "Total Liters Produced", "type": "number"}, "varietyCount": {"title": "Variety Count", "type": "integer"}}, "required": ["date", "totalLitersProduced", "varietyCount"], "title": "BreweryProductionOutput", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Design a JSON object for a brewery's seasonal beer release, including properties like season, releaseDate, seasonalFlavors, and packagingOptions.", "Schema": {"properties": {"season": {"title": "Season", "type": "string"}, "releaseDate": {"title": "Release Date", "type": "string", "format": "date"}, "seasonalFlavors": {"title": "Seasonal Flavors", "type": "array", "items": {"type": "string"}}, "packagingOptions": {"title": "Packaging Options", "type": "array", "items": {"type": "string"}}}, "required": ["season", "releaseDate", "seasonalFlavors", "packagingOptions"], "title": "SeasonalBeerRelease", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Generate a JSON object for a brewery's distribution network, including properties like networkID, regionsCovered, keyContacts, and transportModes.", "Schema": {"properties": {"networkID": {"title": "Network ID", "type": "string"}, "regionsCovered": {"title": "Regions Covered", "type": "array", "items": {"type": "string"}}, "keyContacts": {"title": "Key Contacts", "type": "array", "items": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "position": {"title": "Position", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}}, "required": ["name", "position", "contactInfo"]}}, "transportModes": {"title": "Transport Modes", "type": "array", "items": {"type": "string"}}}, "required": ["networkID", "regionsCovered", "keyContacts", "transportModes"], "title": "BreweryDistributionNetwork", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Create a JSON object for storing information about a distillery's product, including properties like productName, alcoholContent, and distilleryLocation.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "alcoholContent": {"title": "Alcohol Content", "type": "number", "minimum": 0, "maximum": 100}, "distilleryLocation": {"title": "Distillery Location", "type": "string"}}, "required": ["productName", "alcoholContent", "distilleryLocation"], "title": "DistilleryProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Develop a JSON schema for a vintner's wine collection, detailing properties such as wineName, vintageYear, grapeVariety, and tastingNotes.", "Schema": {"properties": {"wineName": {"title": "Wine Name", "type": "string"}, "vintageYear": {"title": "Vintage Year", "type": "integer", "minimum": 1900}, "grapeVariety": {"title": "Grape Variety", "type": "string"}, "tastingNotes": {"title": "Tasting Notes", "type": "string"}}, "required": ["wineName", "vintageYear", "grapeVariety"], "title": "VintnerWineCollection", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Construct a JSON object for tracking a beverage producer's inventory, including properties like productID, quantityAvailable, and restockDate.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer", "minimum": 0}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}}, "required": ["productID", "quantityAvailable"], "title": "BeverageInventory", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Design a JSON object for a brewery's beer profile, including properties such as beerName, IBU, ABV, and flavorProfile.", "Schema": {"properties": {"beerName": {"title": "Beer Name", "type": "string"}, "IBU": {"title": "International Bitterness Units", "type": "integer", "minimum": 0}, "ABV": {"title": "Alcohol By Volume", "type": "number", "minimum": 0, "maximum": 100}, "flavorProfile": {"title": "Flavor Profile", "type": "string"}}, "required": ["beerName", "IBU", "ABV"], "title": "BreweryBeerProfile", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Generate a JSON object representing an alcoholic beverage's market data, including properties like marketName, region, salesVolume, and marketShare.", "Schema": {"properties": {"marketName": {"title": "Market Name", "type": "string"}, "region": {"title": "Region", "type": "string"}, "salesVolume": {"title": "Sales Volume", "type": "number"}, "marketShare": {"title": "Market Share", "type": "number", "minimum": 0, "maximum": 100}}, "required": ["marketName", "region", "salesVolume"], "title": "AlcoholicBeverageMarketData", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Create a JSON object for a brewery's beer catalog, including properties like beerName, type, ABV, IBU, and description.", "Schema": {"properties": {"beerName": {"title": "Beer Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "ABV": {"title": "Alcohol By Volume", "type": "number", "format": "float"}, "IBU": {"title": "International Bitterness Units", "type": "integer"}, "description": {"title": "Description", "type": "string"}}, "required": ["beerName", "type", "ABV", "IBU", "description"], "title": "BeerCatalog", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Develop a JSON object for tracking a brewery's production batch, including properties like batchNumber, brewDate, ingredients, and volumeProduced.", "Schema": {"properties": {"batchNumber": {"title": "Batch Number", "type": "string"}, "brewDate": {"title": "Brew Date", "type": "string", "format": "date"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "volumeProduced": {"title": "Volume Produced", "type": "number", "format": "float"}}, "required": ["batchNumber", "brewDate", "ingredients", "volumeProduced"], "title": "ProductionBatch", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Construct a JSON object for a beverage quality control report, including properties like reportId, testName, testResults, and technician.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "testName": {"title": "Test Name", "type": "string"}, "testResults": {"title": "Test Results", "type": "string"}, "technician": {"title": "Technician", "type": "string"}}, "required": ["reportId", "testName", "testResults", "technician"], "title": "QualityControlReport", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Design a JSON object for a brewery's supply order, including properties like orderId, supplierName, orderDate, itemsOrdered, and totalCost.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date"}, "itemsOrdered": {"title": "Items Ordered", "type": "array", "items": {"type": "object", "properties": {"itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["itemName", "quantity", "price"]}}, "totalCost": {"title": "Total Cost", "type": "number", "format": "float"}}, "required": ["orderId", "supplierName", "orderDate", "itemsOrdered", "totalCost"], "title": "SupplyOrder", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Generate a JSON object for a customer's beverage order, including properties like orderNumber, customerName, beveragesOrdered, orderTime, and paymentStatus.", "Schema": {"properties": {"orderNumber": {"title": "Order Number", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "beveragesOrdered": {"title": "Beverages Ordered", "type": "array", "items": {"type": "object", "properties": {"beverageName": {"title": "Beverage Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["beverageName", "quantity"]}}, "orderTime": {"title": "Order Time", "type": "string", "format": "time"}, "paymentStatus": {"title": "Payment Status", "type": "string", "enum": ["Paid", "Unpaid", "Pending"]}}, "required": ["orderNumber", "customerName", "beveragesOrdered", "orderTime", "paymentStatus"], "title": "CustomerBeverageOrder", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Create a JSON object for querying a list of agricultural products, including properties like productName, productID, and supplier details.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["supplierName", "supplierID"]}}, "required": ["productName", "productID", "supplierDetails"], "title": "AgriculturalProductQuery", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Develop a JSON object for adding a new supplier to the database, including properties such as supplierName, contactInfo, and productTypes.", "Schema": {"properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "productTypes": {"title": "Product Types", "type": "array", "items": {"type": "string"}}}, "required": ["supplierName", "contactInfo", "productTypes"], "title": "NewSupplierEntry", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Construct a JSON object for updating inventory levels, including properties like productID, quantityAvailable, and restockDate.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}}, "required": ["productID", "quantityAvailable", "restockDate"], "title": "InventoryUpdate", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Design a JSON object for a product recall, including properties such as recallID, affectedProductIDs, and recallReason.", "Schema": {"properties": {"recallID": {"title": "Recall ID", "type": "string"}, "affectedProductIDs": {"title": "Affected Product IDs", "type": "array", "items": {"type": "string"}}, "recallReason": {"title": "Recall Reason", "type": "string"}}, "required": ["recallID", "affectedProductIDs", "recallReason"], "title": "ProductRecallNotice", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Generate a JSON object for tracking food shipment, including properties like shipmentID, origin, destination, and estimatedArrival.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["shipmentID", "origin", "destination", "estimatedArrival"], "title": "FoodShipmentTracking", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for a product catalog entry, including properties like productName, SKU, price, category, and inventory level.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "category": {"title": "Category", "type": "string"}, "inventoryLevel": {"title": "Inventory Level", "type": "integer"}}, "required": ["productName", "SKU", "price", "category", "inventoryLevel"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON object for a customer profile, including properties such as customerID, name, email, phone number, and purchase history.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "phoneNumber": {"title": "Phone Number", "type": "string"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "string"}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}}}}, "required": ["customerID", "name", "email", "phoneNumber", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for an order, including properties like orderID, customerID, orderDate, items, and totalAmount.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "orderDate": {"title": "Order Date", "type": "string", "format": "date-time"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["orderID", "customerID", "orderDate", "items", "totalAmount"], "title": "Order", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for a supplier profile, including properties such as supplierID, companyName, contactInfo, productsSupplied, and reliabilityRating.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "address": {"title": "Address", "type": "string"}}}, "productsSupplied": {"title": "Products Supplied", "type": "array", "items": {"type": "string"}}, "reliabilityRating": {"title": "Reliability Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["supplierID", "companyName", "contactInfo", "productsSupplied", "reliabilityRating"], "title": "SupplierProfile", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object for a store inventory update, including properties like storeID, productUpdates, and updateTimestamp.", "Schema": {"properties": {"storeID": {"title": "Store ID", "type": "string"}, "productUpdates": {"title": "Product Updates", "type": "array", "items": {"type": "object", "properties": {"SKU": {"title": "Stock Keeping Unit", "type": "string"}, "quantityChange": {"title": "Quantity Change", "type": "integer"}}}}, "updateTimestamp": {"title": "Update Timestamp", "type": "string", "format": "date-time"}}, "required": ["storeID", "productUpdates", "updateTimestamp"], "title": "StoreInventoryUpdate", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Create a JSON object for querying a distillery's product inventory, including properties like productName, productType, alcoholContent, and stockQuantity.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productType": {"title": "Product Type", "type": "string"}, "alcoholContent": {"title": "Alcohol Content", "type": "number"}, "stockQuantity": {"title": "Stock Quantity", "type": "integer"}}, "required": ["productName", "productType", "alcoholContent", "stockQuantity"], "title": "ProductInventoryQuery", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Develop a JSON object for submitting a new wine batch, including properties like batchId, grapeVariety, vintageYear, and productionQuantity.", "Schema": {"properties": {"batchId": {"title": "Batch ID", "type": "string"}, "grapeVariety": {"title": "Grape Variety", "type": "string"}, "vintageYear": {"title": "Vintage Year", "type": "integer"}, "productionQuantity": {"title": "Production Quantity", "type": "integer"}}, "required": ["batchId", "grapeVariety", "vintageYear", "productionQuantity"], "title": "NewWineBatchSubmission", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Construct a JSON object for a beverage quality control report, including properties like reportId, beverageId, qualityScore, and notes.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "beverageId": {"title": "Beverage ID", "type": "string"}, "qualityScore": {"title": "Quality Score", "type": "number"}, "notes": {"title": "Notes", "type": "string"}}, "required": ["reportId", "beverageId", "qualityScore"], "title": "QualityControlReport", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Design a JSON object for tracking a brewery's fermentation process, including properties like tankId, currentTemperature, yeastStrain, and fermentationStage.", "Schema": {"properties": {"tankId": {"title": "Tank ID", "type": "string"}, "currentTemperature": {"title": "Current Temperature", "type": "number"}, "yeastStrain": {"title": "Yeast Strain", "type": "string"}, "fermentationStage": {"title": "Fermentation Stage", "type": "string"}}, "required": ["tankId", "currentTemperature", "yeastStrain", "fermentationStage"], "title": "FermentationProcessTracking", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Generate a JSON object for a customer's beverage order, including properties like orderId, customerName, orderedItems, and deliveryAddress.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "orderedItems": {"title": "Ordered Items", "type": "array", "items": {"type": "object", "properties": {"itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemName", "quantity"]}}, "deliveryAddress": {"title": "Delivery Address", "type": "string"}}, "required": ["orderId", "customerName", "orderedItems", "deliveryAddress"], "title": "CustomerBeverageOrder", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Create a JSON object for a non-alcoholic beverage product, including properties like productName, productID, ingredients, nutritionalInformation, and manufacturer details.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "nutritionalInformation": {"title": "Nutritional Information", "type": "object", "properties": {"calories": {"title": "Calories", "type": "number"}, "sugarContent": {"title": "Sugar Content", "type": "number"}, "sodiumContent": {"title": "Sodium Content", "type": "number"}}}, "manufacturer": {"title": "Manufacturer Details", "type": "object", "properties": {"manufacturerName": {"title": "Manufacturer Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "string"}}}}, "required": ["productName", "productID", "ingredients", "nutritionalInformation", "manufacturer"], "title": "NonAlcoholicBeverageProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Develop a JSON object for tracking beverage production batches, including properties like batchNumber, productionDate, quantityProduced, and qualityCheckResults.", "Schema": {"properties": {"batchNumber": {"title": "Batch Number", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "quantityProduced": {"title": "Quantity Produced", "type": "number"}, "qualityCheckResults": {"title": "Quality Check Results", "type": "object", "properties": {"passed": {"title": "Passed", "type": "boolean"}, "notes": {"title": "Notes", "type": "string"}}}}, "required": ["batchNumber", "productionDate", "quantityProduced", "qualityCheckResults"], "title": "BeverageProductionBatch", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Construct a JSON object for a beverage distribution event, including properties like eventID, location, date, participatingBrands, and estimatedAttendees.", "Schema": {"properties": {"eventID": {"title": "Event ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "participatingBrands": {"title": "Participating Brands", "type": "array", "items": {"type": "string"}}, "estimatedAttendees": {"title": "Estimated Attendees", "type": "number"}}, "required": ["eventID", "location", "date", "participatingBrands", "estimatedAttendees"], "title": "BeverageDistributionEvent", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Design a JSON object for a customer feedback on a beverage product, including properties like feedbackID, customerName, productID, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "customerName", "productID", "rating", "comments"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Generate a JSON object for a supplier contract for beverage ingredients, including properties like contractID, supplierName, ingredientType, quantity, and deliverySchedule.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "ingredientType": {"title": "Ingredient Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "deliverySchedule": {"title": "Delivery Schedule", "type": "string"}}, "required": ["contractID", "supplierName", "ingredientType", "quantity", "deliverySchedule"], "title": "SupplierContract", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Create a JSON object for a crop production report, including properties like cropType, harvestedArea, yield, and productionDate.", "Schema": {"properties": {"cropType": {"title": "Crop Type", "type": "string"}, "harvestedArea": {"title": "Harvested Area (hectares)", "type": "number"}, "yield": {"title": "Yield (tonnes per hectare)", "type": "number"}, "productionDate": {"format": "date", "title": "Production Date", "type": "string"}}, "required": ["cropType", "harvestedArea", "yield", "productionDate"], "title": "CropProductionReport", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Develop a JSON schema for a food processing record, including properties such as productName, batchNumber, processingDate, and ingredients.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "batchNumber": {"title": "Batch Number", "type": "string"}, "processingDate": {"format": "date-time", "title": "Processing Date", "type": "string"}, "ingredients": {"items": {"type": "string"}, "title": "Ingredients", "type": "array"}}, "required": ["productName", "batchNumber", "processingDate", "ingredients"], "title": "FoodProcessingRecord", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Construct a JSON object for tracking plantation management activities, including properties like activityType, activityDate, plantationArea, and notes.", "Schema": {"properties": {"activityType": {"title": "Activity Type", "type": "string"}, "activityDate": {"format": "date", "title": "Activity Date", "type": "string"}, "plantationArea": {"title": "Plantation Area (hectares)", "type": "number"}, "notes": {"title": "Notes", "type": "string"}}, "required": ["activityType", "activityDate", "plantationArea"], "title": "PlantationManagementActivity", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Design a JSON object for a food safety inspection report, including properties such as inspectionDate, facilityName, violations, and correctiveActions.", "Schema": {"properties": {"inspectionDate": {"format": "date", "title": "Inspection Date", "type": "string"}, "facilityName": {"title": "Facility Name", "type": "string"}, "violations": {"items": {"type": "string"}, "title": "Violations", "type": "array"}, "correctiveActions": {"items": {"type": "string"}, "title": "Corrective Actions", "type": "array"}}, "required": ["inspectionDate", "facilityName", "violations", "correctiveActions"], "title": "FoodSafetyInspectionReport", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Generate a JSON object representing a food product's nutritional information, including properties like productName, servingSize, calories, and nutrientContent.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "servingSize": {"title": "Serving Size", "type": "string"}, "calories": {"title": "Calories", "type": "number"}, "nutrientContent": {"type": "object", "properties": {"fat": {"title": "Fat (grams)", "type": "number"}, "carbohydrates": {"title": "Carbohydrates (grams)", "type": "number"}, "protein": {"title": "Protein (grams)", "type": "number"}}, "title": "Nutrient Content"}}, "required": ["productName", "servingSize", "calories", "nutrientContent"], "title": "FoodProductNutritionalInformation", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Create a JSON object for querying a database of soft drinks, including properties like brandName, flavor, packageSize, and caffeineContent.", "Schema": {"properties": {"brandName": {"title": "Brand Name", "type": "string"}, "flavor": {"title": "Flavor", "type": "string"}, "packageSize": {"title": "Package Size", "type": "string"}, "caffeineContent": {"title": "Caffeine Content", "type": "string"}}, "required": ["brandName", "flavor", "packageSize"], "title": "SoftDrinkQuery", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Develop a JSON schema for an API call to retrieve non-alcoholic beverage options, including properties like beverageType, organic, sugarFree, and availableSizes.", "Schema": {"properties": {"beverageType": {"title": "Beverage Type", "type": "string"}, "organic": {"title": "Organic", "type": "boolean"}, "sugarFree": {"title": "Sugar Free", "type": "boolean"}, "availableSizes": {"items": {"type": "string"}, "title": "Available Sizes", "type": "array"}}, "required": ["beverageType", "organic", "sugarFree"], "title": "NonAlcoholicBeverageOptions", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Construct a JSON object for submitting user preferences for soft drinks, including properties like preferredBrands, dislikedFlavors, and dietaryRestrictions.", "Schema": {"properties": {"preferredBrands": {"items": {"type": "string"}, "title": "Preferred Brands", "type": "array"}, "dislikedFlavors": {"items": {"type": "string"}, "title": "Disliked Flavors", "type": "array"}, "dietaryRestrictions": {"items": {"type": "string"}, "title": "Dietary Restrictions", "type": "array"}}, "title": "SoftDrinkUserPreferences", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Design a JSON object for a beverage inventory system, including properties such as productName, stockQuantity, reorderLevel, and supplierInfo.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "stockQuantity": {"title": "Stock Quantity", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}, "supplierInfo": {"properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["supplierName", "contactNumber"], "title": "Supplier Info", "type": "object"}}, "required": ["productName", "stockQuantity", "reorderLevel", "supplierInfo"], "title": "BeverageInventory", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Beverages", "Task": "Generate a JSON object for tracking beverage sales data, including properties like saleDate, productID, quantitySold, and totalRevenue.", "Schema": {"properties": {"saleDate": {"format": "date", "title": "Sale Date", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "quantitySold": {"title": "Quantity Sold", "type": "integer"}, "totalRevenue": {"title": "Total Revenue", "type": "number"}}, "required": ["saleDate", "productID", "quantitySold", "totalRevenue"], "title": "BeverageSalesData", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Create a JSON object for a dairy product entry, including properties like productName, expirationDate, fatContent, and lactoseFree.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}, "fatContent": {"title": "Fat Content", "type": "string"}, "lactoseFree": {"title": "Lactose Free", "type": "boolean"}}, "required": ["productName", "expirationDate", "fatContent", "lactoseFree"], "title": "DairyProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Develop a JSON object for a fruit juice product, including properties such as productName, volume, ingredients, and organic.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "volume": {"title": "Volume", "type": "number"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "organic": {"title": "Organic", "type": "boolean"}}, "required": ["productName", "volume", "ingredients", "organic"], "title": "FruitJuiceProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Construct a JSON object for a meat product, detailing properties like productName, cutType, weight, and halalCertified.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "cutType": {"title": "Cut Type", "type": "string"}, "weight": {"title": "Weight", "type": "number"}, "halalCertified": {"title": "Halal Certified", "type": "boolean"}}, "required": ["productName", "cutType", "weight", "halalCertified"], "title": "MeatProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Design a JSON object for a poultry product, with properties such as productName, freeRange, weight, and packagingDate.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "freeRange": {"title": "Free Range", "type": "boolean"}, "weight": {"title": "Weight", "type": "number"}, "packagingDate": {"title": "Packaging Date", "type": "string", "format": "date"}}, "required": ["productName", "freeRange", "weight", "packagingDate"], "title": "PoultryProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Generate a JSON object for a pet food product, including properties like productName, animalType, ingredients, and weight.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "animalType": {"title": "Animal Type", "type": "string"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "weight": {"title": "Weight", "type": "number"}}, "required": ["productName", "animalType", "ingredients", "weight"], "title": "PetFoodProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Create a JSON object for storing tobacco product details, including properties like productName, brand, nicotineContent, and tarContent.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "nicotineContent": {"title": "Nicotine Content", "type": "number", "minimum": 0}, "tarContent": {"title": "Tar Content", "type": "number", "minimum": 0}}, "required": ["productName", "brand", "nicotineContent", "tarContent"], "title": "TobaccoProductDetails", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Develop a JSON schema for a tobacco product inventory entry, including properties such as sku, quantity, restockDate, and supplier.", "Schema": {"properties": {"sku": {"title": "SKU", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer", "minimum": 0}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["sku", "quantity", "restockDate", "supplier"], "title": "TobaccoProductInventory", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Construct a JSON object for tracking tobacco product sales, with properties like transactionId, date, productsSold, and totalRevenue.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "productsSold": {"title": "Products Sold", "type": "array", "items": {"type": "object", "properties": {"productName": {"type": "string"}, "quantity": {"type": "integer"}}, "required": ["productName", "quantity"]}}, "totalRevenue": {"title": "Total Revenue", "type": "number", "minimum": 0}}, "required": ["transactionId", "date", "productsSold", "totalRevenue"], "title": "TobaccoProductSales", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Design a JSON object for a customer feedback on tobacco products, including properties such as feedbackId, customerName, productReviewed, and rating.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productReviewed": {"title": "Product Reviewed", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackId", "customerName", "productReviewed", "rating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Generate a JSON object representing a tobacco product compliance report, including properties like reportId, inspectionDate, violations, and correctiveActions.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "violations": {"title": "Violations", "type": "array", "items": {"type": "string"}}, "correctiveActions": {"title": "Corrective Actions", "type": "array", "items": {"type": "string"}}}, "required": ["reportId", "inspectionDate", "violations", "correctiveActions"], "title": "ComplianceReport", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Create a JSON object for a new cleaning product entry, including properties like productName, productID, ingredients, and safetyInstructions.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "safetyInstructions": {"title": "Safety Instructions", "type": "string"}}, "required": ["productName", "productID", "ingredients", "safetyInstructions"], "title": "CleaningProductEntry", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Develop a JSON object for a customer review of a household product, including properties like reviewID, productID, reviewerName, rating, and comments.", "Schema": {"properties": {"reviewID": {"title": "Review ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "reviewerName": {"title": "Reviewer Name", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["reviewID", "productID", "reviewerName", "rating"], "title": "CustomerReview", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Construct a JSON object for tracking inventory levels of household products, including properties like productID, warehouseLocation, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "warehouseLocation": {"title": "Warehouse Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["productID", "warehouseLocation", "quantityAvailable", "reorderThreshold"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Design a JSON object for a promotional campaign of a household product, including properties like campaignID, productID, startDate, endDate, and discountDetails.", "Schema": {"properties": {"campaignID": {"title": "Campaign ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "discountDetails": {"title": "Discount Details", "type": "string"}}, "required": ["campaignID", "productID", "startDate", "endDate"], "title": "PromotionalCampaign", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Generate a JSON object for a supplier contact information, including properties like supplierID, companyName, contactName, phone, and email.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactName": {"title": "Contact Name", "type": "string"}, "phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["supplierID", "companyName", "contactName", "phone", "email"], "title": "SupplierContactInfo", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Create a JSON object for a packaged food item, including properties like productName, netWeight, ingredients, and nutritionalInformation.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "netWeight": {"title": "Net Weight", "type": "string"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "nutritionalInformation": {"title": "Nutritional Information", "type": "object", "properties": {"calories": {"title": "Calories", "type": "integer"}, "fatContent": {"title": "Fat Content", "type": "number"}, "sugarContent": {"title": "Sugar Content", "type": "number"}}, "required": ["calories", "fatContent", "sugarContent"]}}, "required": ["productName", "netWeight", "ingredients", "nutritionalInformation"], "title": "PackagedFoodItem", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Develop a JSON object for a meat product, detailing properties such as productCode, expirationDate, originCountry, and storageInstructions.", "Schema": {"properties": {"productCode": {"title": "Product Code", "type": "string"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}, "originCountry": {"title": "Origin Country", "type": "string"}, "storageInstructions": {"title": "Storage Instructions", "type": "string"}}, "required": ["productCode", "expirationDate", "originCountry", "storageInstructions"], "title": "MeatProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Construct a JSON object for a beverage item, including properties like beverageName, volume, alcoholContent, and ingredients.", "Schema": {"properties": {"beverageName": {"title": "Beverage Name", "type": "string"}, "volume": {"title": "Volume", "type": "string"}, "alcoholContent": {"title": "Alcohol Content", "type": "number"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}}, "required": ["beverageName", "volume", "ingredients"], "title": "BeverageItem", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Design a JSON object for a tobacco product, with properties such as brandName, tarLevel, nicotineLevel, and packageSize.", "Schema": {"properties": {"brandName": {"title": "Brand Name", "type": "string"}, "tarLevel": {"title": "Tar Level", "type": "number"}, "nicotineLevel": {"title": "Nicotine Level", "type": "number"}, "packageSize": {"title": "Package Size", "type": "string"}}, "required": ["brandName", "tarLevel", "nicotineLevel", "packageSize"], "title": "TobaccoProduct", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Food Products", "Task": "Generate a JSON object for a confectionery item, including properties like itemName, flavors, packageType, and expirationDate.", "Schema": {"properties": {"itemName": {"title": "Item Name", "type": "string"}, "flavors": {"title": "Flavors", "type": "array", "items": {"type": "string"}}, "packageType": {"title": "Package Type", "type": "string"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}}, "required": ["itemName", "flavors", "packageType", "expirationDate"], "title": "ConfectioneryItem", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Create a JSON object for a food product inventory, including properties like productName, SKU, price, and quantity in stock.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}, "price": {"title": "Price", "type": "number", "format": "float"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer"}}, "required": ["productName", "SKU", "price", "quantityInStock"], "title": "FoodProductInventory", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Develop a JSON schema for a customer profile in a retail system, including properties such as customerID, name, email, and purchase history.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "purchaseHistory": {"title": "Purchase History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "itemsPurchased": {"title": "Items Purchased", "type": "array", "items": {"type": "string"}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}}, "required": ["date", "itemsPurchased", "totalAmount"]}}}, "required": ["customerID", "name", "email", "purchaseHistory"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Construct a JSON object for tracking supplier information, including properties like supplierName, contactDetails, productsSupplied, and reliabilityRating.", "Schema": {"properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "address": {"title": "Address", "type": "string"}}, "required": ["phone", "email", "address"]}, "productsSupplied": {"title": "Products Supplied", "type": "array", "items": {"type": "string"}}, "reliabilityRating": {"title": "Reliability Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["supplierName", "contactDetails", "productsSupplied", "reliabilityRating"], "title": "SupplierInformation", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Design a JSON object for a retail store's daily sales report, including properties such as date, totalSales, numberOfTransactions, and topSellingProducts.", "Schema": {"properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "totalSales": {"title": "Total Sales", "type": "number", "format": "float"}, "numberOfTransactions": {"title": "Number of Transactions", "type": "integer"}, "topSellingProducts": {"title": "Top Selling Products", "type": "array", "items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "unitsSold": {"title": "Units Sold", "type": "integer"}}, "required": ["productName", "unitsSold"]}}}, "required": ["date", "totalSales", "numberOfTransactions", "topSellingProducts"], "title": "DailySalesReport", "type": "object"}}
{"Category": "Consumer Staples Distribution & Retail (New Name)", "SubCategory": "Consumer Staples Distribution & Retail (New Name)", "Task": "Generate a JSON object for a product return process, including properties like returnID, customerID, productDetails, reasonForReturn, and refundAmount.", "Schema": {"properties": {"returnID": {"title": "Return ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "SKU": {"title": "Stock Keeping Unit", "type": "string"}}, "required": ["productName", "SKU"]}, "reasonForReturn": {"title": "Reason for Return", "type": "string"}, "refundAmount": {"title": "Refund Amount", "type": "number", "format": "float"}}, "required": ["returnID", "customerID", "productDetails", "reasonForReturn", "refundAmount"], "title": "ProductReturnProcess", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Create a JSON object for a new cosmetic product entry, including properties like productName, productID, ingredients, and price.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productName", "productID", "ingredients", "price"], "title": "CosmeticProductEntry", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Develop a JSON schema for a customer's product review, including properties such as reviewID, customerID, productID, rating, and comments.", "Schema": {"properties": {"reviewID": {"title": "Review ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["reviewID", "customerID", "productID", "rating"], "title": "ProductReview", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Construct a JSON object for tracking inventory levels, including properties like productID, warehouseLocation, quantityAvailable, and restockDate.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "warehouseLocation": {"title": "Warehouse Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}}, "required": ["productID", "warehouseLocation", "quantityAvailable"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Design a JSON object for a promotional campaign, including properties such as campaignID, productID, startDate, endDate, and discountRate.", "Schema": {"properties": {"campaignID": {"title": "Campaign ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "discountRate": {"title": "Discount Rate", "type": "number", "format": "float"}}, "required": ["campaignID", "productID", "startDate", "endDate", "discountRate"], "title": "PromotionalCampaign", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Generate a JSON object for a supplier's contact information, including properties like supplierID, companyName, contactName, phone, and email.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactName": {"title": "Contact Name", "type": "string"}, "phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["supplierID", "companyName", "contactName", "phone", "email"], "title": "SupplierContactInfo", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Create a JSON object for a new household product entry, including properties like productName, brand, category, ingredients, and barcode.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "category": {"title": "Category", "type": "string"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "barcode": {"title": "Barcode", "type": "string"}}, "required": ["productName", "brand", "category", "ingredients", "barcode"], "title": "HouseholdProductEntry", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Develop a JSON schema for a customer review of a household product, including properties such as reviewerID, productID, rating, reviewText, and submissionDate.", "Schema": {"properties": {"reviewerID": {"title": "Reviewer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}, "submissionDate": {"title": "Submission Date", "type": "string", "format": "date-time"}}, "required": ["reviewerID", "productID", "rating", "reviewText", "submissionDate"], "title": "CustomerReview", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Construct a JSON object for tracking inventory levels of household products, including properties like productID, warehouseLocation, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "warehouseLocation": {"title": "Warehouse Location", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["productID", "warehouseLocation", "quantityAvailable", "reorderThreshold"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Design a JSON object for a promotional campaign of a household product, including properties such as campaignID, productID, startDate, endDate, and discountDetails.", "Schema": {"properties": {"campaignID": {"title": "Campaign ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "discountDetails": {"title": "Discount Details", "type": "string"}}, "required": ["campaignID", "productID", "startDate", "endDate", "discountDetails"], "title": "PromotionalCampaign", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Household Products", "Task": "Generate a JSON object for a supplier's information, including properties like supplierID, companyName, contactName, contactEmail, and productsSupplied.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactName": {"title": "Contact Name", "type": "string"}, "contactEmail": {"title": "Contact Email", "type": "string", "format": "email"}, "productsSupplied": {"title": "Products Supplied", "type": "array", "items": {"type": "string"}}}, "required": ["supplierID", "companyName", "contactName", "contactEmail", "productsSupplied"], "title": "SupplierInformation", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Create a JSON object for a tobacco product entry, including properties like productName, brand, nicotineContent, and flavor.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "brand": {"title": "Brand", "type": "string"}, "nicotineContent": {"title": "Nicotine Content", "type": "number"}, "flavor": {"title": "Flavor", "type": "string"}}, "required": ["productName", "brand", "nicotineContent", "flavor"], "title": "TobaccoProductEntry", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Develop a JSON schema for a tobacco inventory update, including properties such as SKU, quantity, restockDate, and supplier.", "Schema": {"properties": {"SKU": {"title": "SKU", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "restockDate": {"format": "date", "title": "Restock Date", "type": "string"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["SKU", "quantity", "restockDate", "supplier"], "title": "TobaccoInventoryUpdate", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Construct a JSON object for tracking tobacco sales, with properties like transactionId, date, itemsSold, and totalAmount.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "date": {"format": "date-time", "title": "Date", "type": "string"}, "itemsSold": {"items": {"type": "object", "properties": {"productName": {"title": "Product Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productName", "quantity"]}, "title": "Items Sold", "type": "array"}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["transactionId", "date", "itemsSold", "totalAmount"], "title": "TobaccoSalesTracking", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Design a JSON object for a customer feedback on tobacco products, including properties such as feedbackId, customerId, productSKU, rating, and comments.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "productSKU": {"title": "Product SKU", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackId", "customerId", "productSKU", "rating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Food, Beverage & Tobacco", "SubCategory": "Tobacco", "Task": "Generate a JSON object for a tobacco compliance check, including properties like checkId, date, inspectorId, establishment, and complianceStatus.", "Schema": {"properties": {"checkId": {"title": "Check ID", "type": "string"}, "date": {"format": "date-time", "title": "Date", "type": "string"}, "inspectorId": {"title": "Inspector ID", "type": "string"}, "establishment": {"title": "Establishment", "type": "string"}, "complianceStatus": {"title": "Compliance Status", "type": "boolean"}}, "required": ["checkId", "date", "inspectorId", "establishment", "complianceStatus"], "title": "TobaccoComplianceCheck", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Create a JSON object for a new skincare product entry, including properties like productName, productID, ingredients, and price.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "ingredients": {"title": "Ingredients", "type": "array", "items": {"type": "string"}}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productName", "productID", "ingredients", "price"], "title": "SkincareProductEntry", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Develop a JSON object for querying available hair care products, including filters like brand, productType, and priceRange.", "Schema": {"properties": {"brand": {"title": "Brand", "type": "string"}, "productType": {"title": "Product Type", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number", "format": "float"}, "max": {"title": "Maximum Price", "type": "number", "format": "float"}}}}, "required": ["brand", "productType"], "title": "HairCareProductQuery", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Construct a JSON object for a customer's review on a personal care product, including properties like reviewID, customerName, productID, rating, and comments.", "Schema": {"properties": {"reviewID": {"title": "Review ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["reviewID", "customerName", "productID", "rating"], "title": "CustomerReview", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Generate a JSON object for tracking inventory of personal care items, including properties like productID, stockQuantity, restockDate, and supplier.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "stockQuantity": {"title": "Stock Quantity", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["productID", "stockQuantity", "restockDate"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Household & Personal Products", "SubCategory": "Personal Care Products (New Name)", "Task": "Design a JSON object for a promotional offer on personal care products, including properties like offerID, description, validFrom, validTo, and applicableProducts.", "Schema": {"properties": {"offerID": {"title": "Offer ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "validFrom": {"title": "Valid From", "type": "string", "format": "date-time"}, "validTo": {"title": "Valid To", "type": "string", "format": "date-time"}, "applicableProducts": {"title": "Applicable Products", "type": "array", "items": {"type": "string"}}}, "required": ["offerID", "description", "validFrom", "validTo"], "title": "PromotionalOffer", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Create a JSON object for storing details of a new eye care product, including properties like productName, productCode, manufacturer, and FDA approval status.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productCode": {"title": "Product Code", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "fdaApprovalStatus": {"title": "FDA Approval Status", "type": "boolean"}}, "required": ["productName", "productCode", "manufacturer", "fdaApprovalStatus"], "title": "EyeCareProduct", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Develop a JSON schema for a hospital supply inventory item, including properties such as itemID, itemName, quantity, and reorderLevel.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}}, "required": ["itemID", "itemName", "quantity", "reorderLevel"], "title": "HospitalSupplyItem", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Construct a JSON object for tracking safety needle & syringe devices, including properties like deviceID, deviceType, usage, and sterilizationDate.", "Schema": {"properties": {"deviceID": {"title": "Device ID", "type": "string"}, "deviceType": {"title": "Device Type", "type": "string"}, "usage": {"title": "Usage", "type": "string"}, "sterilizationDate": {"title": "Sterilization Date", "type": "string", "format": "date"}}, "required": ["deviceID", "deviceType", "usage", "sterilizationDate"], "title": "SafetyNeedleSyringeDevice", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Design a JSON object for a medical device recall event, including properties such as recallID, productName, reasonForRecall, and recallDate.", "Schema": {"properties": {"recallID": {"title": "Recall ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "reasonForRecall": {"title": "Reason for Recall", "type": "string"}, "recallDate": {"title": "Recall Date", "type": "string", "format": "date"}}, "required": ["recallID", "productName", "reasonForRecall", "recallDate"], "title": "MedicalDeviceRecallEvent", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Generate a JSON object representing a batch of hospital supplies, including properties like batchNumber, items, manufactureDate, and expiryDate.", "Schema": {"properties": {"batchNumber": {"title": "Batch Number", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemID", "quantity"]}}, "manufactureDate": {"title": "Manufacture Date", "type": "string", "format": "date"}, "expiryDate": {"title": "Expiry Date", "type": "string", "format": "date"}}, "required": ["batchNumber", "items", "manufactureDate", "expiryDate"], "title": "HospitalSupplyBatch", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Create a JSON object for querying available health care equipment, with properties like equipmentID, equipmentName, manufacturer, and stockLevel.", "Schema": {"properties": {"equipmentID": {"title": "EquipmentID", "type": "string"}, "equipmentName": {"title": "EquipmentName", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "stockLevel": {"title": "StockLevel", "type": "integer"}}, "required": ["equipmentID", "equipmentName", "manufacturer", "stockLevel"], "title": "HealthCareEquipmentQuery", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Develop a JSON object for submitting a restock request for health care supplies, including properties such as supplyID, quantity, urgency, and supplier.", "Schema": {"properties": {"supplyID": {"title": "SupplyID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "urgency": {"title": "Urgency", "type": "string", "enum": ["low", "medium", "high"]}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["supplyID", "quantity", "urgency", "supplier"], "title": "RestockRequest", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Construct a JSON object for tracking equipment maintenance, with fields like equipmentID, lastServiceDate, nextServiceDate, and serviceNotes.", "Schema": {"properties": {"equipmentID": {"title": "EquipmentID", "type": "string"}, "lastServiceDate": {"format": "date", "title": "LastServiceDate", "type": "string"}, "nextServiceDate": {"format": "date", "title": "NextServiceDate", "type": "string"}, "serviceNotes": {"title": "ServiceNotes", "type": "string"}}, "required": ["equipmentID", "lastServiceDate", "nextServiceDate"], "title": "EquipmentMaintenanceTracking", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Design a JSON object for a health care equipment warranty claim, including properties such as claimID, equipmentID, issueDescription, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "ClaimID", "type": "string"}, "equipmentID": {"title": "EquipmentID", "type": "string"}, "issueDescription": {"title": "IssueDescription", "type": "string"}, "claimStatus": {"title": "ClaimStatus", "type": "string", "enum": ["submitted", "in_review", "approved", "denied"]}}, "required": ["claimID", "equipmentID", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Generate a JSON object for managing equipment calibration records, with attributes like equipmentID, calibrationDate, technician, and calibrationCertification.", "Schema": {"properties": {"equipmentID": {"title": "EquipmentID", "type": "string"}, "calibrationDate": {"format": "date", "title": "CalibrationDate", "type": "string"}, "technician": {"title": "Technician", "type": "string"}, "calibrationCertification": {"title": "CalibrationCertification", "type": "boolean"}}, "required": ["equipmentID", "calibrationDate", "technician", "calibrationCertification"], "title": "EquipmentCalibrationRecord", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Create a JSON object for a medical instrument inventory, including properties like instrumentID, instrumentName, quantity, and supplier details.", "Schema": {"properties": {"instrumentID": {"title": "Instrument ID", "type": "string"}, "instrumentName": {"title": "Instrument Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierName": {"title": "Supplier Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}}, "required": ["supplierName", "contactNumber"]}}, "required": ["instrumentID", "instrumentName", "quantity", "supplierDetails"], "title": "MedicalInstrumentInventory", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Develop a JSON schema for a drug delivery system, detailing properties such as systemID, systemType, medicationIncluded, and usageInstructions.", "Schema": {"properties": {"systemID": {"title": "System ID", "type": "string"}, "systemType": {"title": "System Type", "type": "string"}, "medicationIncluded": {"title": "Medication Included", "type": "string"}, "usageInstructions": {"title": "Usage Instructions", "type": "string"}}, "required": ["systemID", "systemType", "medicationIncluded", "usageInstructions"], "title": "DrugDeliverySystem", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Construct a JSON object for tracking cardiovascular devices, including properties like deviceID, modelName, patientID, and implantDate.", "Schema": {"properties": {"deviceID": {"title": "Device ID", "type": "string"}, "modelName": {"title": "Model Name", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "implantDate": {"title": "Implant Date", "type": "string", "format": "date"}}, "required": ["deviceID", "modelName", "patientID", "implantDate"], "title": "CardiovascularDeviceTracking", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Design a JSON object for orthopedic device cataloging, with properties such as catalogID, deviceName, specifications, and manufacturer.", "Schema": {"properties": {"catalogID": {"title": "Catalog ID", "type": "string"}, "deviceName": {"title": "Device Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}}, "required": ["catalogID", "deviceName", "specifications", "manufacturer"], "title": "OrthopedicDeviceCatalog", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Generate a JSON object representing diagnostic equipment data, including properties like equipmentID, equipmentType, location, and maintenanceSchedule.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "equipmentType": {"title": "Equipment Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "object", "properties": {"lastServiced": {"title": "Last Serviced", "type": "string", "format": "date"}, "nextServiceDue": {"title": "Next Service Due", "type": "string", "format": "date"}}, "required": ["lastServiced", "nextServiceDue"]}}, "required": ["equipmentID", "equipmentType", "location", "maintenanceSchedule"], "title": "DiagnosticEquipmentData", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for querying a distributor's available health care products, including properties like productID, productName, quantityAvailable, and price.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "price": {"title": "Price", "type": "number", "format": "float"}}, "required": ["productID", "productName", "quantityAvailable", "price"], "title": "ProductQuery", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON object for submitting a restock request to a health care product supplier, including properties like supplierID, productID, requestedQuantity, and deliveryDate.", "Schema": {"properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "requestedQuantity": {"title": "Requested Quantity", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["supplierID", "productID", "requestedQuantity", "deliveryDate"], "title": "RestockRequest", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for a health care service provider's patient appointment scheduling, including properties like patientID, providerID, appointmentDate, and appointmentType.", "Schema": {"properties": {"patientID": {"title": "Patient ID", "type": "string"}, "providerID": {"title": "Provider ID", "type": "string"}, "appointmentDate": {"title": "Appointment Date", "type": "string", "format": "date-time"}, "appointmentType": {"title": "Appointment Type", "type": "string"}}, "required": ["patientID", "providerID", "appointmentDate", "appointmentType"], "title": "AppointmentScheduling", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for tracking a health care provider's equipment maintenance schedule, including properties like equipmentID, lastMaintenanceDate, nextMaintenanceDate, and maintenanceNotes.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "lastMaintenanceDate": {"title": "Last Maintenance Date", "type": "string", "format": "date"}, "nextMaintenanceDate": {"title": "Next Maintenance Date", "type": "string", "format": "date"}, "maintenanceNotes": {"title": "Maintenance Notes", "type": "string"}}, "required": ["equipmentID", "lastMaintenanceDate", "nextMaintenanceDate"], "title": "EquipmentMaintenance", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object for a health care provider's inventory management, including properties like inventoryID, products, totalValue, and lastUpdated.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "products": {"title": "Products", "type": "array", "items": {"type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["productID", "quantity"]}}, "totalValue": {"title": "Total Value", "type": "number", "format": "float"}, "lastUpdated": {"title": "Last Updated", "type": "string", "format": "date-time"}}, "required": ["inventoryID", "products", "totalValue", "lastUpdated"], "title": "InventoryManagement", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Create a JSON object for querying available health care supplies, including properties like supplyName, quantityAvailable, and supplierID.", "Schema": {"properties": {"supplyName": {"title": "Supply Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "supplierID": {"title": "Supplier ID", "type": "string"}}, "required": ["supplyName", "quantityAvailable", "supplierID"], "title": "HealthCareSuppliesQuery", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Develop a JSON object for adding new health care supplies to inventory, with properties such as supplyID, supplyName, quantity, and supplierDetails.", "Schema": {"properties": {"supplyID": {"title": "Supply ID", "type": "string"}, "supplyName": {"title": "Supply Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplierDetails": {"title": "Supplier Details", "type": "object", "properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "supplierName": {"title": "Supplier Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["supplierID", "supplierName", "contactInfo"]}}, "required": ["supplyID", "supplyName", "quantity", "supplierDetails"], "title": "NewHealthCareSupply", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Construct a JSON object for updating the stock level of a specific health care supply, including properties like supplyID, newQuantity, and restockDate.", "Schema": {"properties": {"supplyID": {"title": "Supply ID", "type": "string"}, "newQuantity": {"title": "New Quantity", "type": "integer"}, "restockDate": {"title": "Restock Date", "type": "string", "format": "date"}}, "required": ["supplyID", "newQuantity", "restockDate"], "title": "UpdateStockLevel", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Design a JSON object for a supply order request, with properties such as orderID, requestedSupplies, and deliveryDetails.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "requestedSupplies": {"title": "Requested Supplies", "type": "array", "items": {"type": "object", "properties": {"supplyID": {"title": "Supply ID", "type": "string"}, "quantityRequested": {"title": "Quantity Requested", "type": "integer"}}, "required": ["supplyID", "quantityRequested"]}}, "deliveryDetails": {"title": "Delivery Details", "type": "object", "properties": {"address": {"title": "Address", "type": "string"}, "expectedDeliveryDate": {"title": "Expected Delivery Date", "type": "string", "format": "date"}}, "required": ["address", "expectedDeliveryDate"]}}, "required": ["orderID", "requestedSupplies", "deliveryDetails"], "title": "SupplyOrderRequest", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Equipment & Supplies", "Task": "Generate a JSON object for tracking the shipment of health care supplies, including properties like trackingNumber, shipmentStatus, and estimatedArrival.", "Schema": {"properties": {"trackingNumber": {"title": "Tracking Number", "type": "string"}, "shipmentStatus": {"title": "Shipment Status", "type": "string", "enum": ["Preparing", "Shipped", "In Transit", "Delivered", "Delayed"]}, "estimatedArrival": {"title": "Estimated Arrival", "type": "string", "format": "date-time"}}, "required": ["trackingNumber", "shipmentStatus", "estimatedArrival"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for storing health care facility details, including properties like facilityName, facilityType, location, and accreditation status.", "Schema": {"properties": {"facilityName": {"title": "Facility Name", "type": "string"}, "facilityType": {"title": "Facility Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "accreditationStatus": {"title": "Accreditation Status", "type": "string"}}, "required": ["facilityName", "facilityType", "location", "accreditationStatus"], "title": "HealthCareFacility", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON schema for a patient admission record, including properties such as patientID, admissionDate, facilityName, and primaryDiagnosis.", "Schema": {"properties": {"patientID": {"title": "Patient ID", "type": "string"}, "admissionDate": {"format": "date", "title": "Admission Date", "type": "string"}, "facilityName": {"title": "Facility Name", "type": "string"}, "primaryDiagnosis": {"title": "Primary Diagnosis", "type": "string"}}, "required": ["patientID", "admissionDate", "facilityName", "primaryDiagnosis"], "title": "PatientAdmissionRecord", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for a medical staff member, including properties like staffID, name, role, qualifications, and assignedFacility.", "Schema": {"properties": {"staffID": {"title": "Staff ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "role": {"title": "Role", "type": "string"}, "qualifications": {"title": "Qualifications", "type": "array", "items": {"type": "string"}}, "assignedFacility": {"title": "Assigned Facility", "type": "string"}}, "required": ["staffID", "name", "role", "qualifications", "assignedFacility"], "title": "MedicalStaff", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for tracking patient treatment plans, including properties such as patientID, treatmentDetails, startDate, endDate, and responsibleStaff.", "Schema": {"properties": {"patientID": {"title": "Patient ID", "type": "string"}, "treatmentDetails": {"title": "Treatment Details", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}, "responsibleStaff": {"title": "Responsible Staff", "type": "string"}}, "required": ["patientID", "treatmentDetails", "startDate", "endDate", "responsibleStaff"], "title": "PatientTreatmentPlan", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object representing a medical equipment inventory item, including properties like itemID, itemName, quantity, location, and maintenanceSchedule.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["itemID", "itemName", "quantity", "location", "maintenanceSchedule"], "title": "MedicalEquipmentInventoryItem", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for querying available equipment from health care distributors, including properties like equipmentId, equipmentName, and quantityAvailable.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "equipmentName": {"title": "Equipment Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["equipmentId", "equipmentName", "quantityAvailable"], "title": "AvailableEquipmentQuery", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON object for submitting a restock request to health care distributors, with properties such as productId, restockQuantity, and urgencyLevel.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "restockQuantity": {"title": "Restock Quantity", "type": "integer"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["low", "medium", "high"]}}, "required": ["productId", "restockQuantity", "urgencyLevel"], "title": "RestockRequest", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for a service appointment request with a health care provider, including properties like patientId, providerId, appointmentDate, and reasonForVisit.", "Schema": {"properties": {"patientId": {"title": "Patient ID", "type": "string"}, "providerId": {"title": "Provider ID", "type": "string"}, "appointmentDate": {"title": "Appointment Date", "type": "string", "format": "date-time"}, "reasonForVisit": {"title": "Reason for Visit", "type": "string"}}, "required": ["patientId", "providerId", "appointmentDate", "reasonForVisit"], "title": "ServiceAppointmentRequest", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for tracking patient feedback on health care services, with properties such as feedbackId, patientId, serviceDate, and comments.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "patientId": {"title": "Patient ID", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackId", "patientId", "serviceDate", "comments"], "title": "PatientFeedback", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object for a medical supply order, including properties like orderId, items, totalCost, and deliveryAddress.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"itemId": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "unitPrice": {"title": "Unit Price", "type": "number"}}, "required": ["itemId", "quantity", "unitPrice"]}}, "totalCost": {"title": "Total Cost", "type": "number"}, "deliveryAddress": {"title": "Delivery Address", "type": "string"}}, "required": ["orderId", "items", "totalCost", "deliveryAddress"], "title": "MedicalSupplyOrder", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for storing patient appointment details, including patient ID, doctor ID, appointment date, and appointment type.", "Schema": {"properties": {"patientId": {"title": "Patient ID", "type": "string"}, "doctorId": {"title": "Doctor ID", "type": "string"}, "appointmentDate": {"format": "date-time", "title": "Appointment Date", "type": "string"}, "appointmentType": {"title": "Appointment Type", "type": "string"}}, "required": ["patientId", "doctorId", "appointmentDate", "appointmentType"], "title": "PatientAppointment", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON object for recording a medical procedure, including procedure ID, patient ID, procedure date, and procedure details.", "Schema": {"properties": {"procedureId": {"title": "Procedure ID", "type": "string"}, "patientId": {"title": "Patient ID", "type": "string"}, "procedureDate": {"format": "date-time", "title": "Procedure Date", "type": "string"}, "procedureDetails": {"title": "Procedure Details", "type": "string"}}, "required": ["procedureId", "patientId", "procedureDate", "procedureDetails"], "title": "MedicalProcedure", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for a patient's billing information, including patient ID, invoice number, billing date, and total amount due.", "Schema": {"properties": {"patientId": {"title": "Patient ID", "type": "string"}, "invoiceNumber": {"title": "Invoice Number", "type": "string"}, "billingDate": {"format": "date-time", "title": "Billing Date", "type": "string"}, "totalAmountDue": {"title": "Total Amount Due", "type": "number", "format": "float"}}, "required": ["patientId", "invoiceNumber", "billingDate", "totalAmountDue"], "title": "PatientBilling", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for tracking patient lab results, including patient ID, test ID, test date, and test results.", "Schema": {"properties": {"patientId": {"title": "Patient ID", "type": "string"}, "testId": {"title": "Test ID", "type": "string"}, "testDate": {"format": "date-time", "title": "Test Date", "type": "string"}, "testResults": {"title": "Test Results", "type": "object", "properties": {"resultName": {"title": "Result Name", "type": "string"}, "value": {"title": "Value", "type": "string"}, "referenceRange": {"title": "Reference Range", "type": "string"}}}}, "required": ["patientId", "testId", "testDate", "testResults"], "title": "PatientLabResults", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object for a patient's insurance claim, including claim ID, patient ID, date of service, and claim details.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "patientId": {"title": "Patient ID", "type": "string"}, "dateOfService": {"format": "date-time", "title": "Date of Service", "type": "string"}, "claimDetails": {"title": "Claim Details", "type": "object", "properties": {"serviceCode": {"title": "Service Code", "type": "string"}, "description": {"title": "Description", "type": "string"}, "amountBilled": {"title": "Amount Billed", "type": "number", "format": "float"}}}}, "required": ["claimId", "patientId", "dateOfService", "claimDetails"], "title": "InsuranceClaim", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Create a JSON object for a new drug application, including properties like drugName, activeIngredient, dosageForm, and applicationNumber.", "Schema": {"properties": {"drugName": {"title": "Drug Name", "type": "string"}, "activeIngredient": {"title": "Active Ingredient", "type": "string"}, "dosageForm": {"title": "Dosage Form", "type": "string"}, "applicationNumber": {"title": "Application Number", "type": "string"}}, "required": ["drugName", "activeIngredient", "dosageForm", "applicationNumber"], "title": "NewDrugApplication", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Generate a JSON object for tracking clinical trial phases, including properties like trialName, phase, status, and studyResults.", "Schema": {"properties": {"trialName": {"title": "Trial Name", "type": "string"}, "phase": {"title": "Phase", "type": "string"}, "status": {"title": "Status", "type": "string"}, "studyResults": {"title": "Study Results", "type": "string"}}, "required": ["trialName", "phase", "status", "studyResults"], "title": "ClinicalTrialPhases", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Construct a JSON object for a medication guide, detailing properties such as guideId, medicationName, usageInstructions, and sideEffects.", "Schema": {"properties": {"guideId": {"title": "Guide ID", "type": "string"}, "medicationName": {"title": "Medication Name", "type": "string"}, "usageInstructions": {"title": "Usage Instructions", "type": "string"}, "sideEffects": {"title": "Side Effects", "type": "array", "items": {"type": "string"}}}, "required": ["guideId", "medicationName", "usageInstructions", "sideEffects"], "title": "MedicationGuide", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Design a JSON object for pharmaceutical patent information, including properties like patentNumber, drugName, patentExpiry, and holderName.", "Schema": {"properties": {"patentNumber": {"title": "Patent Number", "type": "string"}, "drugName": {"title": "Drug Name", "type": "string"}, "patentExpiry": {"title": "Patent Expiry", "type": "string", "format": "date"}, "holderName": {"title": "Holder Name", "type": "string"}}, "required": ["patentNumber", "drugName", "patentExpiry", "holderName"], "title": "PharmaceuticalPatent", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Formulate a JSON object for a drug recall notice, with properties like recallId, drugName, recallReason, and recallDate.", "Schema": {"properties": {"recallId": {"title": "Recall ID", "type": "string"}, "drugName": {"title": "Drug Name", "type": "string"}, "recallReason": {"title": "Recall Reason", "type": "string"}, "recallDate": {"title": "Recall Date", "type": "string", "format": "date"}}, "required": ["recallId", "drugName", "recallReason", "recallDate"], "title": "DrugRecallNotice", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for a managed health care plan, including properties like planName, coverageDetails, and monthlyPremium.", "Schema": {"properties": {"planName": {"title": "Plan Name", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "string"}, "monthlyPremium": {"title": "Monthly Premium", "type": "number", "format": "float"}}, "required": ["planName", "coverageDetails", "monthlyPremium"], "title": "ManagedHealthCarePlan", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON object for a patient's insurance claim, including properties such as claimID, patientID, serviceDate, and claimAmount.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "claimAmount": {"title": "Claim Amount", "type": "number", "format": "float"}}, "required": ["claimID", "patientID", "serviceDate", "claimAmount"], "title": "InsuranceClaim", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for a healthcare provider's profile, including properties like providerID, name, specialty, and contactInfo.", "Schema": {"properties": {"providerID": {"title": "Provider ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "specialty": {"title": "Specialty", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}}, "required": ["providerID", "name", "specialty", "contactInfo"], "title": "HealthcareProviderProfile", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for a medical appointment, including properties such as appointmentID, patientID, providerID, appointmentDate, and reasonForVisit.", "Schema": {"properties": {"appointmentID": {"title": "Appointment ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "providerID": {"title": "Provider ID", "type": "string"}, "appointmentDate": {"title": "Appointment Date", "type": "string", "format": "date-time"}, "reasonForVisit": {"title": "Reason for Visit", "type": "string"}}, "required": ["appointmentID", "patientID", "providerID", "appointmentDate", "reasonForVisit"], "title": "MedicalAppointment", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object for a patient's electronic health record (EHR), including properties like patientID, medicalHistory, medications, allergies, and labResults.", "Schema": {"properties": {"patientID": {"title": "Patient ID", "type": "string"}, "medicalHistory": {"title": "Medical History", "type": "array", "items": {"type": "string"}}, "medications": {"title": "Medications", "type": "array", "items": {"type": "string"}}, "allergies": {"title": "Allergies", "type": "array", "items": {"type": "string"}}, "labResults": {"title": "Lab Results", "type": "array", "items": {"type": "object", "properties": {"testName": {"title": "Test Name", "type": "string"}, "result": {"title": "Result", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}}, "required": ["testName", "result", "date"]}}}, "required": ["patientID", "medicalHistory", "medications", "allergies", "labResults"], "title": "ElectronicHealthRecord", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for a hospital facility, including properties like facilityName, facilityType, location, and accreditation status.", "Schema": {"properties": {"facilityName": {"title": "Facility Name", "type": "string"}, "facilityType": {"title": "Facility Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "accreditationStatus": {"title": "Accreditation Status", "type": "string"}}, "required": ["facilityName", "facilityType", "location", "accreditationStatus"], "title": "HospitalFacility", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON object for a nursing home profile, including properties such as name, capacity, services offered, and Medicare rating.", "Schema": {"properties": {"name": {"title": "Name", "type": "string"}, "capacity": {"title": "Capacity", "type": "integer"}, "servicesOffered": {"items": {"type": "string"}, "title": "Services Offered", "type": "array"}, "medicareRating": {"title": "Medicare Rating", "type": "integer"}}, "required": ["name", "capacity", "servicesOffered", "medicareRating"], "title": "NursingHomeProfile", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for a rehabilitation center, detailing properties like centerName, specialty, treatmentModalities, and insuranceAccepted.", "Schema": {"properties": {"centerName": {"title": "Center Name", "type": "string"}, "specialty": {"title": "Specialty", "type": "string"}, "treatmentModalities": {"items": {"type": "string"}, "title": "Treatment Modalities", "type": "array"}, "insuranceAccepted": {"items": {"type": "string"}, "title": "Insurance Accepted", "type": "array"}}, "required": ["centerName", "specialty", "treatmentModalities", "insuranceAccepted"], "title": "RehabilitationCenter", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for an animal hospital, including properties such as hospitalName, services, veterinarians, and emergencyCare availability.", "Schema": {"properties": {"hospitalName": {"title": "Hospital Name", "type": "string"}, "services": {"items": {"type": "string"}, "title": "Services", "type": "array"}, "veterinarians": {"items": {"type": "string"}, "title": "Veterinarians", "type": "array"}, "emergencyCare": {"title": "Emergency Care Availability", "type": "boolean"}}, "required": ["hospitalName", "services", "veterinarians", "emergencyCare"], "title": "AnimalHospital", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object representing a clinic's operational data, including properties like clinicName, operatingHours, staffCount, and patientCapacity.", "Schema": {"properties": {"clinicName": {"title": "Clinic Name", "type": "string"}, "operatingHours": {"title": "Operating Hours", "type": "string"}, "staffCount": {"title": "Staff Count", "type": "integer"}, "patientCapacity": {"title": "Patient Capacity", "type": "integer"}}, "required": ["clinicName", "operatingHours", "staffCount", "patientCapacity"], "title": "ClinicOperationalData", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Create a JSON object for a biotech product's gene expression profile, including properties like geneId, expressionLevel, and sampleOrigin.", "Schema": {"properties": {"geneId": {"title": "Gene ID", "type": "string"}, "expressionLevel": {"title": "Expression Level", "type": "number"}, "sampleOrigin": {"title": "Sample Origin", "type": "string"}}, "required": ["geneId", "expressionLevel", "sampleOrigin"], "title": "GeneExpressionProfile", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Develop a JSON schema for a clinical trial participant, including properties such as participantId, age, gender, and trialStatus.", "Schema": {"properties": {"participantId": {"title": "Participant ID", "type": "string"}, "age": {"title": "Age", "type": "integer"}, "gender": {"title": "Gender", "type": "string", "enum": ["male", "female", "other"]}, "trialStatus": {"title": "Trial Status", "type": "string"}}, "required": ["participantId", "age", "gender", "trialStatus"], "title": "ClinicalTrialParticipant", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Construct a JSON object for a biotech lab equipment inventory, including properties like equipmentId, equipmentType, location, and maintenanceSchedule.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "equipmentType": {"title": "Equipment Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["equipmentId", "equipmentType", "location", "maintenanceSchedule"], "title": "LabEquipmentInventory", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Design a JSON object for tracking biotech patent applications, including properties such as patentId, applicationDate, inventorNames, and currentStatus.", "Schema": {"properties": {"patentId": {"title": "Patent ID", "type": "string"}, "applicationDate": {"title": "Application Date", "type": "string", "format": "date"}, "inventorNames": {"title": "Inventor Names", "type": "array", "items": {"type": "string"}}, "currentStatus": {"title": "Current Status", "type": "string"}}, "required": ["patentId", "applicationDate", "inventorNames", "currentStatus"], "title": "BiotechPatentApplication", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Generate a JSON object representing a biotech company's R&D project, including properties like projectId, projectName, researchFocus, and budget.", "Schema": {"properties": {"projectId": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "researchFocus": {"title": "Research Focus", "type": "string"}, "budget": {"title": "Budget", "type": "number"}}, "required": ["projectId", "projectName", "researchFocus", "budget"], "title": "RnDProject", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Create a JSON object for a health care provider directory, including properties like providerName, specialty, location, and contact details.", "Schema": {"properties": {"providerName": {"title": "Provider Name", "type": "string"}, "specialty": {"title": "Specialty", "type": "string"}, "location": {"title": "Location", "type": "string"}, "contactDetails": {"type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}}, "required": ["providerName", "specialty", "location", "contactDetails"], "title": "HealthCareProviderDirectory", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Develop a JSON schema for patient appointment scheduling, including properties such as patientId, providerId, appointmentDate, and appointmentType.", "Schema": {"properties": {"patientId": {"title": "Patient ID", "type": "string"}, "providerId": {"title": "Provider ID", "type": "string"}, "appointmentDate": {"title": "Appointment Date", "type": "string", "format": "date-time"}, "appointmentType": {"title": "Appointment Type", "type": "string"}}, "required": ["patientId", "providerId", "appointmentDate", "appointmentType"], "title": "PatientAppointmentScheduling", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Construct a JSON object for electronic health records (EHR), capturing details like patientId, visitHistory, medications, and labResults.", "Schema": {"properties": {"patientId": {"title": "Patient ID", "type": "string"}, "visitHistory": {"type": "array", "items": {"type": "object", "properties": {"visitDate": {"title": "Visit Date", "type": "string", "format": "date-time"}, "visitType": {"title": "Visit Type", "type": "string"}, "notes": {"title": "Notes", "type": "string"}}, "required": ["visitDate", "visitType"]}}, "medications": {"type": "array", "items": {"type": "object", "properties": {"medicationName": {"title": "Medication Name", "type": "string"}, "dosage": {"title": "Dosage", "type": "string"}, "frequency": {"title": "Frequency", "type": "string"}}, "required": ["medicationName", "dosage", "frequency"]}}, "labResults": {"type": "array", "items": {"type": "object", "properties": {"testName": {"title": "Test Name", "type": "string"}, "result": {"title": "Result", "type": "string"}, "normalRange": {"title": "Normal Range", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}}, "required": ["testName", "result", "date"]}}}, "required": ["patientId", "visitHistory", "medications", "labResults"], "title": "ElectronicHealthRecords", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Design a JSON object for tracking medical equipment inventory, including fields like equipmentId, name, quantity, location, and maintenanceSchedule.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "maintenanceSchedule": {"type": "array", "items": {"type": "object", "properties": {"maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date-time"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}}, "required": ["maintenanceDate", "maintenanceType"]}}}, "required": ["equipmentId", "name", "quantity", "location", "maintenanceSchedule"], "title": "MedicalEquipmentInventory", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Generate a JSON object for a health care billing system, including properties like invoiceId, patientId, servicesRendered, totalAmount, and paymentStatus.", "Schema": {"properties": {"invoiceId": {"title": "Invoice ID", "type": "string"}, "patientId": {"title": "Patient ID", "type": "string"}, "servicesRendered": {"type": "array", "items": {"type": "object", "properties": {"serviceId": {"title": "Service ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "amount": {"title": "Amount", "type": "number", "format": "float"}}, "required": ["serviceId", "description", "amount"]}}, "totalAmount": {"title": "Total Amount", "type": "number", "format": "float"}, "paymentStatus": {"title": "Payment Status", "type": "string", "enum": ["Paid", "Unpaid", "Pending"]}}, "required": ["invoiceId", "patientId", "servicesRendered", "totalAmount", "paymentStatus"], "title": "HealthCareBillingSystem", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for HMO plan details, including properties like planName, coverageDetails, and monthlyPremium.", "Schema": {"properties": {"planName": {"title": "Plan Name", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "string"}, "monthlyPremium": {"title": "Monthly Premium", "type": "number"}}, "required": ["planName", "coverageDetails", "monthlyPremium"], "title": "HMOPlanDetails", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON schema for patient enrollment in an HMO, including properties such as memberID, enrollmentDate, and selectedPlan.", "Schema": {"properties": {"memberID": {"title": "Member ID", "type": "string"}, "enrollmentDate": {"format": "date", "title": "Enrollment Date", "type": "string"}, "selectedPlan": {"title": "Selected Plan", "type": "string"}}, "required": ["memberID", "enrollmentDate", "selectedPlan"], "title": "PatientEnrollment", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for tracking patient claims, including properties like claimID, dateOfService, serviceDescription, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "dateOfService": {"format": "date", "title": "Date of Service", "type": "string"}, "serviceDescription": {"title": "Service Description", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string"}}, "required": ["claimID", "dateOfService", "serviceDescription", "claimStatus"], "title": "PatientClaims", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for a provider directory, including properties such as providerID, providerName, specialty, and contactInfo.", "Schema": {"properties": {"providerID": {"title": "Provider ID", "type": "string"}, "providerName": {"title": "Provider Name", "type": "string"}, "specialty": {"title": "Specialty", "type": "string"}, "contactInfo": {"type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["phone", "email", "address"]}}, "required": ["providerID", "providerName", "specialty", "contactInfo"], "title": "ProviderDirectory", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object for managing patient feedback, including properties like feedbackID, patientID, serviceDate, comments, and rating.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "serviceDate": {"format": "date", "title": "Service Date", "type": "string"}, "comments": {"title": "Comments", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackID", "patientID", "serviceDate", "comments", "rating"], "title": "PatientFeedback", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Create a JSON object for a new gene therapy product, including properties such as productName, targetDisease, geneticModificationDetails, and FDAApprovalStatus.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "targetDisease": {"title": "Target Disease", "type": "string"}, "geneticModificationDetails": {"title": "Genetic Modification Details", "type": "string"}, "FDAApprovalStatus": {"title": "FDA Approval Status", "type": "string", "enum": ["Not Submitted", "Under Review", "Approved", "Rejected"]}}, "required": ["productName", "targetDisease", "geneticModificationDetails", "FDAApprovalStatus"], "title": "GeneTherapyProduct", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Develop a JSON object for tracking clinical trial phases for a biotech product, including properties like trialName, phase, status, startDate, and estimatedEndDate.", "Schema": {"properties": {"trialName": {"title": "Trial Name", "type": "string"}, "phase": {"title": "Phase", "type": "string", "enum": ["Phase I", "Phase II", "Phase III", "Phase IV"]}, "status": {"title": "Status", "type": "string", "enum": ["Not Started", "Ongoing", "Completed", "Suspended", "Terminated"]}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "estimatedEndDate": {"title": "Estimated End Date", "type": "string", "format": "date"}}, "required": ["trialName", "phase", "status", "startDate"], "title": "ClinicalTrial", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Construct a JSON object for a biotech company's patent portfolio, including properties such as patentID, title, filingDate, patentStatus, and technologyField.", "Schema": {"properties": {"patentID": {"title": "Patent ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "filingDate": {"title": "Filing Date", "type": "string", "format": "date"}, "patentStatus": {"title": "Patent Status", "type": "string", "enum": ["Filed", "Published", "Granted", "Expired", "Withdrawn"]}, "technologyField": {"title": "Technology Field", "type": "string"}}, "required": ["patentID", "title", "filingDate", "patentStatus"], "title": "PatentPortfolio", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Design a JSON object for a biotech research project, detailing properties such as projectID, projectName, leadScientist, researchFocus, and budget.", "Schema": {"properties": {"projectID": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "leadScientist": {"title": "Lead Scientist", "type": "string"}, "researchFocus": {"title": "Research Focus", "type": "string"}, "budget": {"title": "Budget", "type": "number", "format": "float"}}, "required": ["projectID", "projectName", "leadScientist", "researchFocus"], "title": "ResearchProject", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Biotechnology", "Task": "Generate a JSON object for a biotech product's market analysis, including properties such as marketID, productID, analysisDate, marketSize, and growthForecast.", "Schema": {"properties": {"marketID": {"title": "Market ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "analysisDate": {"title": "Analysis Date", "type": "string", "format": "date"}, "marketSize": {"title": "Market Size", "type": "number", "format": "float"}, "growthForecast": {"title": "Growth Forecast", "type": "string"}}, "required": ["marketID", "productID", "analysisDate", "marketSize"], "title": "MarketAnalysis", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Create a JSON object for querying available lab equipment, including properties like equipmentId, equipmentType, and availabilityStatus.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "equipmentType": {"title": "Equipment Type", "type": "string"}, "availabilityStatus": {"title": "Availability Status", "type": "string", "enum": ["Available", "In Use", "Maintenance", "Out of Service"]}}, "required": ["equipmentId", "equipmentType", "availabilityStatus"], "title": "LabEquipmentQuery", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Develop a JSON object for submitting a sample analysis request, with properties such as requestId, sampleType, testType, and urgencyLevel.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "sampleType": {"title": "Sample Type", "type": "string"}, "testType": {"title": "Test Type", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["Routine", "Urgent", "Stat"]}}, "required": ["requestId", "sampleType", "testType", "urgencyLevel"], "title": "SampleAnalysisRequest", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Construct a JSON object for tracking a research project's progress, including properties like projectId, projectTitle, currentPhase, and estimatedCompletionDate.", "Schema": {"properties": {"projectId": {"title": "Project ID", "type": "string"}, "projectTitle": {"title": "Project Title", "type": "string"}, "currentPhase": {"title": "Current Phase", "type": "string"}, "estimatedCompletionDate": {"title": "Estimated Completion Date", "type": "string", "format": "date"}}, "required": ["projectId", "projectTitle", "currentPhase", "estimatedCompletionDate"], "title": "ResearchProjectProgress", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Design a JSON object for a clinical trial participant's profile, including properties such as participantId, age, gender, and trialStatus.", "Schema": {"properties": {"participantId": {"title": "Participant ID", "type": "string"}, "age": {"title": "Age", "type": "integer", "minimum": 0}, "gender": {"title": "Gender", "type": "string", "enum": ["Male", "Female", "Other"]}, "trialStatus": {"title": "Trial Status", "type": "string", "enum": ["Not Started", "Active", "Completed", "Withdrawn"]}}, "required": ["participantId", "age", "gender", "trialStatus"], "title": "ClinicalTrialParticipantProfile", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Generate a JSON object for inventory management of lab supplies, including properties like itemCode, itemName, quantityInStock, and reorderThreshold.", "Schema": {"properties": {"itemCode": {"title": "Item Code", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantityInStock": {"title": "Quantity in Stock", "type": "integer", "minimum": 0}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer", "minimum": 0}}, "required": ["itemCode", "itemName", "quantityInStock", "reorderThreshold"], "title": "LabInventoryManagement", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Create a JSON object for querying patient monitoring device data, including properties like deviceID, patientID, metrics, and timestamp.", "Schema": {"properties": {"deviceID": {"title": "Device ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "metrics": {"title": "Metrics", "type": "object", "properties": {"heartRate": {"title": "Heart Rate", "type": "number"}, "bloodPressure": {"title": "Blood Pressure", "type": "string"}, "oxygenSaturation": {"title": "Oxygen Saturation", "type": "number"}}, "required": ["heartRate", "bloodPressure", "oxygenSaturation"]}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["deviceID", "patientID", "metrics", "timestamp"], "title": "PatientMonitoringData", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Develop a JSON object for a telemedicine session request, including properties like sessionID, patientID, doctorID, scheduledTime, and sessionNotes.", "Schema": {"properties": {"sessionID": {"title": "Session ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "doctorID": {"title": "Doctor ID", "type": "string"}, "scheduledTime": {"title": "Scheduled Time", "type": "string", "format": "date-time"}, "sessionNotes": {"title": "Session Notes", "type": "string"}}, "required": ["sessionID", "patientID", "doctorID", "scheduledTime"], "title": "TelemedicineSessionRequest", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Construct a JSON object for storing electronic health record updates, including properties like recordID, patientID, updateTimestamp, and changeLog.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "updateTimestamp": {"title": "Update Timestamp", "type": "string", "format": "date-time"}, "changeLog": {"title": "Change Log", "type": "array", "items": {"type": "object", "properties": {"changedBy": {"title": "Changed By", "type": "string"}, "changeType": {"title": "Change Type", "type": "string"}, "changeDetails": {"title": "Change Details", "type": "string"}}, "required": ["changedBy", "changeType", "changeDetails"]}}}, "required": ["recordID", "patientID", "updateTimestamp", "changeLog"], "title": "EHRUpdate", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Design a JSON object for a medical imaging request, including properties like requestID, patientID, imagingType, urgency, and physicianNotes.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "imagingType": {"title": "Imaging Type", "type": "string"}, "urgency": {"title": "Urgency", "type": "string"}, "physicianNotes": {"title": "Physician Notes", "type": "string"}}, "required": ["requestID", "patientID", "imagingType", "urgency"], "title": "MedicalImagingRequest", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Technology", "Task": "Generate a JSON object for a laboratory test order, including properties like orderID, patientID, testType, sampleRequired, and orderStatus.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "testType": {"title": "Test Type", "type": "string"}, "sampleRequired": {"title": "Sample Required", "type": "boolean"}, "orderStatus": {"title": "Order Status", "type": "string", "enum": ["pending", "in progress", "completed", "cancelled"]}}, "required": ["orderID", "patientID", "testType", "sampleRequired", "orderStatus"], "title": "LabTestOrder", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Create a JSON object for a new analytical instrument entry, including properties such as instrumentId, name, type, and specifications.", "Schema": {"properties": {"instrumentId": {"title": "Instrument ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"resolution": {"title": "Resolution", "type": "string"}, "accuracy": {"title": "Accuracy", "type": "string"}}, "required": ["resolution", "accuracy"]}}, "required": ["instrumentId", "name", "type", "specifications"], "title": "AnalyticalInstrument", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Develop a JSON schema for clinical trial service entry, including properties such as trialId, studyName, sponsor, phase, and status.", "Schema": {"properties": {"trialId": {"title": "Trial ID", "type": "string"}, "studyName": {"title": "Study Name", "type": "string"}, "sponsor": {"title": "Sponsor", "type": "string"}, "phase": {"title": "Phase", "type": "string"}, "status": {"title": "Status", "type": "string"}}, "required": ["trialId", "studyName", "sponsor", "phase", "status"], "title": "ClinicalTrialService", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Construct a JSON object for a consumable inventory item, including properties like itemId, itemName, quantity, and reorderLevel.", "Schema": {"properties": {"itemId": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "reorderLevel": {"title": "Reorder Level", "type": "integer"}}, "required": ["itemId", "itemName", "quantity", "reorderLevel"], "title": "ConsumableInventoryItem", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Design a JSON object for tracking contract research organization (CRO) projects, including properties such as projectId, CROName, therapeuticArea, and projectStatus.", "Schema": {"properties": {"projectId": {"title": "Project ID", "type": "string"}, "CROName": {"title": "CRO Name", "type": "string"}, "therapeuticArea": {"title": "Therapeutic Area", "type": "string"}, "projectStatus": {"title": "Project Status", "type": "string"}}, "required": ["projectId", "CROName", "therapeuticArea", "projectStatus"], "title": "CROProject", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Life Sciences Tools & Services", "Task": "Generate a JSON object representing a lab supply order, including properties like orderId, products, totalCost, and deliveryDate.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "products": {"title": "Products", "type": "array", "items": {"type": "object", "properties": {"productId": {"title": "Product ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "unitPrice": {"title": "Unit Price", "type": "number"}}, "required": ["productId", "quantity", "unitPrice"]}}, "totalCost": {"title": "Total Cost", "type": "number"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderId", "products", "totalCost", "deliveryDate"], "title": "LabSupplyOrder", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Create a JSON object for a dialysis center, including properties like centerName, location, servicesOffered, and operatingHours.", "Schema": {"properties": {"centerName": {"title": "Center Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "servicesOffered": {"items": {"type": "string"}, "title": "Services Offered", "type": "array"}, "operatingHours": {"title": "Operating Hours", "type": "string"}}, "required": ["centerName", "location", "servicesOffered", "operatingHours"], "title": "DialysisCenter", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Develop a JSON object for lab testing services, detailing properties such as testName, testCode, sampleRequired, and turnaroundTime.", "Schema": {"properties": {"testName": {"title": "Test Name", "type": "string"}, "testCode": {"title": "Test Code", "type": "string"}, "sampleRequired": {"title": "Sample Required", "type": "string"}, "turnaroundTime": {"title": "Turnaround Time", "type": "string"}}, "required": ["testName", "testCode", "sampleRequired", "turnaroundTime"], "title": "LabTestingService", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Construct a JSON object for pharmacy management services, including properties like pharmacyName, services, contactInfo, and contractDetails.", "Schema": {"properties": {"pharmacyName": {"title": "Pharmacy Name", "type": "string"}, "services": {"items": {"type": "string"}, "title": "Services", "type": "array"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}}, "required": ["phone", "email"]}, "contractDetails": {"title": "Contract Details", "type": "string"}}, "required": ["pharmacyName", "services", "contactInfo", "contractDetails"], "title": "PharmacyManagementService", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Design a JSON object for a company providing clerical support services to health care providers, with properties such as companyName, servicesProvided, clientList, and contactDetails.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "servicesProvided": {"items": {"type": "string"}, "title": "Services Provided", "type": "array"}, "clientList": {"items": {"type": "string"}, "title": "Client List", "type": "array"}, "contactDetails": {"title": "Contact Details", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}}, "required": ["phone", "email"]}}, "required": ["companyName", "servicesProvided", "clientList", "contactDetails"], "title": "ClericalSupportService", "type": "object"}}
{"Category": "Health Care Equipment & Services", "SubCategory": "Health Care Providers & Services", "Task": "Generate a JSON object for a staffing service company in the healthcare industry, including properties like staffingCompanyName, specialties, regionsServed, and partnershipDetails.", "Schema": {"properties": {"staffingCompanyName": {"title": "Staffing Company Name", "type": "string"}, "specialties": {"items": {"type": "string"}, "title": "Specialties", "type": "array"}, "regionsServed": {"items": {"type": "string"}, "title": "Regions Served", "type": "array"}, "partnershipDetails": {"title": "Partnership Details", "type": "string"}}, "required": ["staffingCompanyName", "specialties", "regionsServed", "partnershipDetails"], "title": "StaffingServiceCompany", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Create a JSON object for a new drug entry, including properties such as drugName, activeIngredients, dosageForm, and approvalStatus.", "Schema": {"properties": {"drugName": {"title": "Drug Name", "type": "string"}, "activeIngredients": {"title": "Active Ingredients", "type": "array", "items": {"type": "string"}}, "dosageForm": {"title": "Dosage Form", "type": "string"}, "approvalStatus": {"title": "Approval Status", "type": "string", "enum": ["approved", "pending", "rejected"]}}, "required": ["drugName", "activeIngredients", "dosageForm", "approvalStatus"], "title": "NewDrugEntry", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Develop a JSON object for a clinical trial record, including properties like trialID, drugName, phase, trialStatus, and participantCount.", "Schema": {"properties": {"trialID": {"title": "Trial ID", "type": "string"}, "drugName": {"title": "Drug Name", "type": "string"}, "phase": {"title": "Trial Phase", "type": "string", "enum": ["Phase I", "Phase II", "Phase III", "Phase IV"]}, "trialStatus": {"title": "Trial Status", "type": "string", "enum": ["not yet recruiting", "recruiting", "enrolling by invitation", "active, not recruiting", "completed", "suspended", "terminated", "withdrawn"]}, "participantCount": {"title": "Participant Count", "type": "integer", "minimum": 0}}, "required": ["trialID", "drugName", "phase", "trialStatus", "participantCount"], "title": "ClinicalTrialRecord", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Construct a JSON object for tracking drug inventory, including properties such as drugID, quantityAvailable, location, and reorderThreshold.", "Schema": {"properties": {"drugID": {"title": "Drug ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer", "minimum": 0}, "location": {"title": "Storage Location", "type": "string"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer", "minimum": 0}}, "required": ["drugID", "quantityAvailable", "location", "reorderThreshold"], "title": "DrugInventory", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Design a JSON object for a pharmaceutical patent, including properties such as patentID, drugName, filingDate, expiryDate, and patentStatus.", "Schema": {"properties": {"patentID": {"title": "Patent ID", "type": "string"}, "drugName": {"title": "Drug Name", "type": "string"}, "filingDate": {"title": "Filing Date", "type": "string", "format": "date"}, "expiryDate": {"title": "Expiry Date", "type": "string", "format": "date"}, "patentStatus": {"title": "Patent Status", "type": "string", "enum": ["active", "pending", "expired"]}}, "required": ["patentID", "drugName", "filingDate", "expiryDate", "patentStatus"], "title": "PharmaceuticalPatent", "type": "object"}}
{"Category": "Pharmaceuticals, Biotechnology & Life Sciences", "SubCategory": "Pharmaceuticals", "Task": "Generate a JSON object for a medication adverse event report, including properties such as reportID, patientID, drugName, eventDescription, and reportDate.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "patientID": {"title": "Patient ID", "type": "string"}, "drugName": {"title": "Drug Name", "type": "string"}, "eventDescription": {"title": "Event Description", "type": "string"}, "reportDate": {"title": "Report Date", "type": "string", "format": "date-time"}}, "required": ["reportID", "patientID", "drugName", "eventDescription", "reportDate"], "title": "AdverseEventReport", "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Create a JSON object for a mortgage application, including properties like applicantName, loanAmount, propertyValue, and creditScore.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "propertyValue": {"title": "Property Value", "type": "number"}, "creditScore": {"title": "Credit Score", "type": "integer"}}, "required": ["applicantName", "loanAmount", "propertyValue", "creditScore"], "title": "MortgageApplication", "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Develop a JSON object for a loan pre-approval response, including properties such as responseCode, approvedAmount, interestRate, and conditions.", "Schema": {"properties": {"responseCode": {"title": "Response Code", "type": "string"}, "approvedAmount": {"title": "Approved Amount", "type": "number"}, "interestRate": {"title": "Interest Rate", "type": "number"}, "conditions": {"title": "Conditions", "type": "string"}}, "required": ["responseCode", "approvedAmount", "interestRate"], "title": "LoanPreApprovalResponse", "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Construct a JSON object for tracking mortgage payment history, including properties like paymentDate, amountPaid, principalRemaining, and interestPaid.", "Schema": {"properties": {"paymentDate": {"title": "Payment Date", "type": "string", "format": "date"}, "amountPaid": {"title": "Amount Paid", "type": "number"}, "principalRemaining": {"title": "Principal Remaining", "type": "number"}, "interestPaid": {"title": "Interest Paid", "type": "number"}}, "required": ["paymentDate", "amountPaid", "principalRemaining", "interestPaid"], "title": "MortgagePaymentHistory", "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Design a JSON object for a customer's banking profile, including properties such as customerID, accountNumbers, accountTypes, and contactInformation.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "accountNumbers": {"title": "Account Numbers", "type": "array", "items": {"type": "string"}}, "accountTypes": {"title": "Account Types", "type": "array", "items": {"type": "string"}}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}}, "required": ["customerID", "accountNumbers", "accountTypes", "contactInformation"], "title": "CustomerBankingProfile", "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Generate a JSON object for a bank transaction, including properties like transactionID, date, amount, type, and accountID.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "amount": {"title": "Amount", "type": "number"}, "type": {"title": "Type", "type": "string"}, "accountID": {"title": "Account ID", "type": "string"}}, "required": ["transactionID", "date", "amount", "type", "accountID"], "title": "BankTransaction", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Create a JSON object for a national bank's branch information, including properties like branchID, address, services offered, and opening hours.", "Schema": {"properties": {"branchID": {"title": "Branch ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "servicesOffered": {"items": {"type": "string"}, "title": "Services Offered", "type": "array"}, "openingHours": {"title": "Opening Hours", "type": "string"}}, "required": ["branchID", "address", "servicesOffered", "openingHours"], "title": "BranchInformation", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Develop a JSON object for a customer profile in a banking system, including properties such as customerID, name, accounts, and contact information.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "accounts": {"items": {"type": "object", "properties": {"accountNumber": {"title": "Account Number", "type": "string"}, "accountType": {"title": "Account Type", "type": "string"}, "balance": {"title": "Balance", "type": "number"}}, "required": ["accountNumber", "accountType", "balance"]}, "title": "Accounts", "type": "array"}, "contactInformation": {"type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}}, "required": ["customerID", "name", "accounts", "contactInformation"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Construct a JSON object for a loan application, including properties like applicationID, applicantDetails, loanType, amount requested, and repayment schedule.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "applicantDetails": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "income": {"title": "Income", "type": "number"}, "creditScore": {"title": "Credit Score", "type": "integer"}}, "required": ["name", "income", "creditScore"]}, "loanType": {"title": "Loan Type", "type": "string"}, "amountRequested": {"title": "Amount Requested", "type": "number"}, "repaymentSchedule": {"title": "Repayment Schedule", "type": "string"}}, "required": ["applicationID", "applicantDetails", "loanType", "amountRequested", "repaymentSchedule"], "title": "LoanApplication", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Design a JSON object for a bank transaction, including properties such as transactionID, accountNumber, type, amount, and timestamp.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "accountNumber": {"title": "Account Number", "type": "string"}, "type": {"title": "Type", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionID", "accountNumber", "type", "amount", "timestamp"], "title": "BankTransaction", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Generate a JSON object for a bank's financial report, including properties like reportID, year, totalAssets, totalLiabilities, and netIncome.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "year": {"title": "Year", "type": "integer"}, "totalAssets": {"title": "Total Assets", "type": "number"}, "totalLiabilities": {"title": "Total Liabilities", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}}, "required": ["reportID", "year", "totalAssets", "totalLiabilities", "netIncome"], "title": "FinancialReport", "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Create a JSON object for storing mortgage application details, including applicant's personal information, employment details, property information, and loan details.", "Schema": {"properties": {"applicantPersonalInfo": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "dateOfBirth": {"type": "string", "format": "date"}, "ssn": {"type": "string"}}, "required": ["firstName", "lastName", "dateOfBirth", "ssn"]}, "employmentDetails": {"type": "object", "properties": {"employerName": {"type": "string"}, "position": {"type": "string"}, "income": {"type": "number"}, "yearsEmployed": {"type": "integer"}}, "required": ["employerName", "position", "income", "yearsEmployed"]}, "propertyInformation": {"type": "object", "properties": {"address": {"type": "string"}, "propertyType": {"type": "string"}, "valuation": {"type": "number"}}, "required": ["address", "propertyType", "valuation"]}, "loanDetails": {"type": "object", "properties": {"loanAmount": {"type": "number"}, "interestRate": {"type": "number"}, "loanTerm": {"type": "integer"}, "loanType": {"type": "string"}}, "required": ["loanAmount", "interestRate", "loanTerm", "loanType"]}}, "required": ["applicantPersonalInfo", "employmentDetails", "propertyInformation", "loanDetails"], "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Develop a JSON object for capturing mortgage payment history, including payment dates, amounts, and any penalties or fees.", "Schema": {"properties": {"paymentHistory": {"type": "array", "items": {"type": "object", "properties": {"paymentDate": {"type": "string", "format": "date"}, "paymentAmount": {"type": "number"}, "penalties": {"type": "number", "default": 0}, "fees": {"type": "number", "default": 0}}, "required": ["paymentDate", "paymentAmount"]}}}, "required": ["paymentHistory"], "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Construct a JSON object for a mortgage pre-approval process, including credit score, debt-to-income ratio, and pre-approval amount.", "Schema": {"properties": {"creditScore": {"type": "integer"}, "debtToIncomeRatio": {"type": "number"}, "preApprovalAmount": {"type": "number"}}, "required": ["creditScore", "debtToIncomeRatio", "preApprovalAmount"], "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Design a JSON object for tracking mortgage insurance policies, including policy number, coverage details, premium amounts, and insurer information.", "Schema": {"properties": {"policyNumber": {"type": "string"}, "coverageDetails": {"type": "object", "properties": {"coverageAmount": {"type": "number"}, "effectiveDate": {"type": "string", "format": "date"}, "expirationDate": {"type": "string", "format": "date"}}, "required": ["coverageAmount", "effectiveDate", "expirationDate"]}, "premium": {"type": "number"}, "insurer": {"type": "object", "properties": {"insurerName": {"type": "string"}, "insurerContact": {"type": "string"}}, "required": ["insurerName", "insurerContact"]}}, "required": ["policyNumber", "coverageDetails", "premium", "insurer"], "type": "object"}}
{"Category": "Banks", "SubCategory": "Thrifts & Mortgage Finance (Discontinued)", "Task": "Generate a JSON object for a mortgage refinancing quote, including current loan balance, estimated property value, desired cash out amount, and new loan terms.", "Schema": {"properties": {"currentLoanBalance": {"type": "number"}, "estimatedPropertyValue": {"type": "number"}, "desiredCashOutAmount": {"type": "number"}, "newLoanTerms": {"type": "object", "properties": {"newInterestRate": {"type": "number"}, "newLoanTerm": {"type": "integer"}, "newLoanType": {"type": "string"}}, "required": ["newInterestRate", "newLoanTerm", "newLoanType"]}}, "required": ["currentLoanBalance", "estimatedPropertyValue", "desiredCashOutAmount", "newLoanTerms"], "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Create a JSON object for querying regional bank definitions, including properties like bankName, region, and regulatoryBody.", "Schema": {"properties": {"bankName": {"title": "Bank Name", "type": "string"}, "region": {"title": "Region", "type": "string"}, "regulatoryBody": {"title": "Regulatory Body", "type": "string"}}, "required": ["bankName", "region", "regulatoryBody"], "title": "RegionalBankQuery", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Develop a JSON schema for a bank transaction query, including properties such as transactionId, amount, currency, and timestamp.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "currency": {"title": "Currency", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionId", "amount", "currency", "timestamp"], "title": "BankTransactionQuery", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Construct a JSON object for bank account details, including properties like accountId, accountType, balance, and accountHolderName.", "Schema": {"properties": {"accountId": {"title": "Account ID", "type": "string"}, "accountType": {"title": "Account Type", "type": "string"}, "balance": {"title": "Balance", "type": "number"}, "accountHolderName": {"title": "Account Holder Name", "type": "string"}}, "required": ["accountId", "accountType", "balance", "accountHolderName"], "title": "BankAccountDetails", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Design a JSON object for a loan application query, including properties such as applicationId, applicantName, requestedAmount, and loanType.", "Schema": {"properties": {"applicationId": {"title": "Application ID", "type": "string"}, "applicantName": {"title": "Applicant Name", "type": "string"}, "requestedAmount": {"title": "Requested Amount", "type": "number"}, "loanType": {"title": "Loan Type", "type": "string"}}, "required": ["applicationId", "applicantName", "requestedAmount", "loanType"], "title": "LoanApplicationQuery", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Generate a JSON object for a credit card transaction history, including properties like cardNumber, transactionHistory, and outstandingBalance.", "Schema": {"properties": {"cardNumber": {"title": "Card Number", "type": "string", "minLength": 16, "maxLength": 16}, "transactionHistory": {"title": "Transaction History", "type": "array", "items": {"type": "object", "properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "amount": {"title": "Amount", "type": "number"}, "description": {"title": "Description", "type": "string"}}, "required": ["transactionId", "date", "amount", "description"]}}, "outstandingBalance": {"title": "Outstanding Balance", "type": "number"}}, "required": ["cardNumber", "transactionHistory", "outstandingBalance"], "title": "CreditCardTransactionHistory", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Create a JSON object for a retail banking customer profile, including properties like customerID, fullName, accountNumber, and accountType.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "accountNumber": {"title": "Account Number", "type": "string"}, "accountType": {"title": "Account Type", "type": "string", "enum": ["Checking", "Savings", "Money Market", "CD", "IRA"]}}, "required": ["customerID", "fullName", "accountNumber", "accountType"], "title": "RetailBankingCustomerProfile", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Develop a JSON schema for a corporate lending application, including properties such as applicationID, companyName, requestedAmount, and purpose.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "requestedAmount": {"title": "Requested Amount", "type": "number"}, "purpose": {"title": "Purpose", "type": "string"}}, "required": ["applicationID", "companyName", "requestedAmount", "purpose"], "title": "CorporateLendingApplication", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Construct a JSON object for a mortgage loan record, including properties like loanID, borrowerName, propertyAddress, loanAmount, and interestRate.", "Schema": {"properties": {"loanID": {"title": "Loan ID", "type": "string"}, "borrowerName": {"title": "Borrower Name", "type": "string"}, "propertyAddress": {"title": "Property Address", "type": "string"}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "interestRate": {"title": "Interest Rate", "type": "number"}}, "required": ["loanID", "borrowerName", "propertyAddress", "loanAmount", "interestRate"], "title": "MortgageLoanRecord", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Design a JSON object for a bank transaction, including properties such as transactionID, accountNumber, type, amount, and timestamp.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "accountNumber": {"title": "Account Number", "type": "string"}, "type": {"title": "Type", "type": "string", "enum": ["Deposit", "Withdrawal", "Transfer", "Payment"]}, "amount": {"title": "Amount", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionID", "accountNumber", "type", "amount", "timestamp"], "title": "BankTransaction", "type": "object"}}
{"Category": "Banks", "SubCategory": "Banks", "Task": "Generate a JSON object representing a bank's branch information, including properties like branchID, branchName, location, and manager.", "Schema": {"properties": {"branchID": {"title": "Branch ID", "type": "string"}, "branchName": {"title": "Branch Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "manager": {"title": "Manager", "type": "string"}}, "required": ["branchID", "branchName", "location", "manager"], "title": "BankBranchInformation", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for storing client investment profiles, including properties like clientID, portfolio, riskTolerance, and investmentGoals.", "Schema": {"properties": {"clientID": {"title": "Client ID", "type": "string"}, "portfolio": {"title": "Portfolio", "type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "Asset Type", "type": "string"}, "assetValue": {"title": "Asset Value", "type": "number"}}, "required": ["assetType", "assetValue"]}}, "riskTolerance": {"title": "Risk Tolerance", "type": "string", "enum": ["Low", "Medium", "High"]}, "investmentGoals": {"title": "Investment Goals", "type": "string"}}, "required": ["clientID", "portfolio", "riskTolerance", "investmentGoals"], "title": "ClientInvestmentProfile", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON schema for a transaction record, including properties such as transactionID, date, amount, currency, and transactionType.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "amount": {"title": "Amount", "type": "number"}, "currency": {"title": "Currency", "type": "string"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["Deposit", "Withdrawal", "Transfer", "Payment"]}}, "required": ["transactionID", "date", "amount", "currency", "transactionType"], "title": "TransactionRecord", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a loan application, including properties like applicationID, applicantName, requestedAmount, loanType, and creditScore.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "applicantName": {"title": "Applicant Name", "type": "string"}, "requestedAmount": {"title": "Requested Amount", "type": "number"}, "loanType": {"title": "Loan Type", "type": "string", "enum": ["Personal", "Mortgage", "Auto", "Student"]}, "creditScore": {"title": "Credit Score", "type": "integer"}}, "required": ["applicationID", "applicantName", "requestedAmount", "loanType", "creditScore"], "title": "LoanApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for bank account details, including properties such as accountNumber, accountType, balance, and accountHolder.", "Schema": {"properties": {"accountNumber": {"title": "Account Number", "type": "string"}, "accountType": {"title": "Account Type", "type": "string", "enum": ["Checking", "Savings", "Credit", "Investment"]}, "balance": {"title": "Balance", "type": "number"}, "accountHolder": {"title": "Account Holder", "type": "string"}}, "required": ["accountNumber", "accountType", "balance", "accountHolder"], "title": "BankAccountDetails", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object representing a credit report, including properties like reportID, individualName, creditHistory, currentDebt, and creditScore.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "individualName": {"title": "Individual Name", "type": "string"}, "creditHistory": {"title": "Credit History", "type": "array", "items": {"type": "object", "properties": {"creditor": {"title": "Creditor", "type": "string"}, "accountStatus": {"title": "Account Status", "type": "string"}, "balance": {"title": "Balance", "type": "number"}, "dateOpened": {"title": "Date Opened", "type": "string", "format": "date"}}, "required": ["creditor", "accountStatus", "balance", "dateOpened"]}}, "currentDebt": {"title": "Current Debt", "type": "number"}, "creditScore": {"title": "Credit Score", "type": "integer"}}, "required": ["reportID", "individualName", "creditHistory", "currentDebt", "creditScore"], "title": "CreditReport", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for a customer's bank account details, including properties like accountNumber, accountType, balance, and transactionHistory.", "Schema": {"properties": {"accountNumber": {"title": "Account Number", "type": "string"}, "accountType": {"title": "Account Type", "type": "string"}, "balance": {"title": "Balance", "type": "number"}, "transactionHistory": {"type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "description": {"title": "Description", "type": "string"}}, "required": ["date", "amount", "description"]}, "title": "Transaction History"}}, "required": ["accountNumber", "accountType", "balance", "transactionHistory"], "title": "BankAccountDetails", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON object for an insurance claim, including properties such as claimID, policyNumber, claimDate, claimAmount, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "claimDate": {"title": "Claim Date", "type": "string", "format": "date"}, "claimAmount": {"title": "Claim Amount", "type": "number"}, "claimStatus": {"title": "Claim Status", "type": "string"}}, "required": ["claimID", "policyNumber", "claimDate", "claimAmount", "claimStatus"], "title": "InsuranceClaim", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a stock trade, including properties like tradeID, stockSymbol, tradeVolume, tradePrice, and tradeTime.", "Schema": {"properties": {"tradeID": {"title": "Trade ID", "type": "string"}, "stockSymbol": {"title": "Stock Symbol", "type": "string"}, "tradeVolume": {"title": "Trade Volume", "type": "integer"}, "tradePrice": {"title": "Trade Price", "type": "number"}, "tradeTime": {"title": "Trade Time", "type": "string", "format": "time"}}, "required": ["tradeID", "stockSymbol", "tradeVolume", "tradePrice", "tradeTime"], "title": "StockTrade", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for a loan application, including properties such as applicationID, applicantName, requestedAmount, loanPurpose, and creditScore.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "applicantName": {"title": "Applicant Name", "type": "string"}, "requestedAmount": {"title": "Requested Amount", "type": "number"}, "loanPurpose": {"title": "Loan Purpose", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}}, "required": ["applicationID", "applicantName", "requestedAmount", "loanPurpose", "creditScore"], "title": "LoanApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object for a credit card transaction, including properties like transactionID, cardNumber, merchant, transactionAmount, and transactionDate.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "cardNumber": {"title": "Card Number", "type": "string"}, "merchant": {"title": "Merchant", "type": "string"}, "transactionAmount": {"title": "Transaction Amount", "type": "number"}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date"}}, "required": ["transactionID", "cardNumber", "merchant", "transactionAmount", "transactionDate"], "title": "CreditCardTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for storing mortgage application details, including applicant's personal information, property details, loan amount, and interest rate.", "Schema": {"properties": {"applicantPersonalInfo": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "dateOfBirth": {"type": "string", "format": "date"}, "ssn": {"type": "string"}}, "required": ["firstName", "lastName", "dateOfBirth", "ssn"]}, "propertyDetails": {"type": "object", "properties": {"address": {"type": "string"}, "propertyType": {"type": "string"}, "valuation": {"type": "number"}}, "required": ["address", "propertyType", "valuation"]}, "loanAmount": {"type": "number"}, "interestRate": {"type": "number"}}, "required": ["applicantPersonalInfo", "propertyDetails", "loanAmount", "interestRate"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON object for capturing loan payment history, including payment dates, amounts, and remaining balance.", "Schema": {"properties": {"paymentHistory": {"type": "array", "items": {"type": "object", "properties": {"paymentDate": {"type": "string", "format": "date"}, "paymentAmount": {"type": "number"}, "remainingBalance": {"type": "number"}}, "required": ["paymentDate", "paymentAmount", "remainingBalance"]}}}, "required": ["paymentHistory"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a mortgage insurance policy, including policy number, coverage details, premium amount, and insured property information.", "Schema": {"properties": {"policyNumber": {"type": "string"}, "coverageDetails": {"type": "object", "properties": {"coverageAmount": {"type": "number"}, "deductible": {"type": "number"}}, "required": ["coverageAmount", "deductible"]}, "premiumAmount": {"type": "number"}, "insuredProperty": {"type": "object", "properties": {"propertyAddress": {"type": "string"}, "ownerName": {"type": "string"}}, "required": ["propertyAddress", "ownerName"]}}, "required": ["policyNumber", "coverageDetails", "premiumAmount", "insuredProperty"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for tracking real estate property listings, including listing ID, seller information, property features, and asking price.", "Schema": {"properties": {"listingId": {"type": "string"}, "sellerInformation": {"type": "object", "properties": {"sellerName": {"type": "string"}, "contactDetails": {"type": "string"}}, "required": ["sellerName", "contactDetails"]}, "propertyFeatures": {"type": "object", "properties": {"bedrooms": {"type": "integer"}, "bathrooms": {"type": "integer"}, "squareFootage": {"type": "number"}}, "required": ["bedrooms", "bathrooms", "squareFootage"]}, "askingPrice": {"type": "number"}}, "required": ["listingId", "sellerInformation", "propertyFeatures", "askingPrice"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object for a loan servicing record, including loan ID, borrower details, loan terms, and payment schedule.", "Schema": {"properties": {"loanId": {"type": "string"}, "borrowerDetails": {"type": "object", "properties": {"borrowerName": {"type": "string"}, "borrowerContact": {"type": "string"}}, "required": ["borrowerName", "borrowerContact"]}, "loanTerms": {"type": "object", "properties": {"loanAmount": {"type": "number"}, "interestRate": {"type": "number"}, "loanDuration": {"type": "string"}}, "required": ["loanAmount", "interestRate", "loanDuration"]}, "paymentSchedule": {"type": "array", "items": {"type": "object", "properties": {"dueDate": {"type": "string", "format": "date"}, "amountDue": {"type": "number"}}, "required": ["dueDate", "amountDue"]}}}, "required": ["loanId", "borrowerDetails", "loanTerms", "paymentSchedule"], "type": "object"}}
{"Category": "Banks", "SubCategory": "Diversified Banks", "Task": "Create a JSON object for a bank customer profile, including properties like customerID, fullName, address, accountType, and accountBalance.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "accountType": {"title": "Account Type", "type": "string", "enum": ["Checking", "Savings", "Credit", "Loan"]}, "accountBalance": {"title": "Account Balance", "type": "number", "minimum": 0}}, "required": ["customerID", "fullName", "address", "accountType", "accountBalance"], "title": "CustomerProfile", "type": "object"}}
{"Category": "Banks", "SubCategory": "Diversified Banks", "Task": "Develop a JSON object for a bank transaction, including properties like transactionID, customerID, transactionType, amount, and timestamp.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["Deposit", "Withdrawal", "Transfer", "Payment"]}, "amount": {"title": "Amount", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionID", "customerID", "transactionType", "amount", "timestamp"], "title": "BankTransaction", "type": "object"}}
{"Category": "Banks", "SubCategory": "Diversified Banks", "Task": "Construct a JSON object for a loan application, including properties like applicationID, customerID, loanAmount, loanType, and creditScore.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "loanAmount": {"title": "Loan Amount", "type": "number", "minimum": 0}, "loanType": {"title": "Loan Type", "type": "string", "enum": ["Personal", "Mortgage", "Auto", "Student"]}, "creditScore": {"title": "Credit Score", "type": "integer", "minimum": 300, "maximum": 850}}, "required": ["applicationID", "customerID", "loanAmount", "loanType", "creditScore"], "title": "LoanApplication", "type": "object"}}
{"Category": "Banks", "SubCategory": "Diversified Banks", "Task": "Design a JSON object for a credit card authorization, including properties like authorizationID, customerID, merchantID, amount, and authorizationCode.", "Schema": {"properties": {"authorizationID": {"title": "Authorization ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "merchantID": {"title": "Merchant ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "authorizationCode": {"title": "Authorization Code", "type": "string"}}, "required": ["authorizationID", "customerID", "merchantID", "amount", "authorizationCode"], "title": "CreditCardAuthorization", "type": "object"}}
{"Category": "Banks", "SubCategory": "Diversified Banks", "Task": "Generate a JSON object for an account statement, including properties like statementID, customerID, startDate, endDate, and transactions.", "Schema": {"properties": {"statementID": {"title": "Statement ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "transactions": {"title": "Transactions", "type": "array", "items": {"type": "object", "properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "transactionType": {"title": "Transaction Type", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionID", "transactionType", "amount", "timestamp"]}}}, "required": ["statementID", "customerID", "startDate", "endDate", "transactions"], "title": "AccountStatement", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for storing client investment portfolios, including properties like clientID, portfolioID, holdings, and totalValue.", "Schema": {"properties": {"clientID": {"title": "Client ID", "type": "string"}, "portfolioID": {"title": "Portfolio ID", "type": "string"}, "holdings": {"title": "Holdings", "type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "Asset Type", "type": "string"}, "assetID": {"title": "Asset ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "number"}, "value": {"title": "Value", "type": "number"}}, "required": ["assetType", "assetID", "quantity", "value"]}}, "totalValue": {"title": "Total Value", "type": "number"}}, "required": ["clientID", "portfolioID", "holdings", "totalValue"], "title": "ClientInvestmentPortfolio", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON schema for a bank transaction, including properties such as transactionID, accountID, type, amount, and timestamp.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "accountID": {"title": "Account ID", "type": "string"}, "type": {"title": "Transaction Type", "type": "string", "enum": ["deposit", "withdrawal", "transfer", "payment"]}, "amount": {"title": "Amount", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionID", "accountID", "type", "amount", "timestamp"], "title": "BankTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a loan application, including properties like applicationID, applicantName, requestedAmount, creditScore, and loanType.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "applicantName": {"title": "Applicant Name", "type": "string"}, "requestedAmount": {"title": "Requested Amount", "type": "number"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "loanType": {"title": "Loan Type", "type": "string", "enum": ["personal", "mortgage", "auto", "student"]}}, "required": ["applicationID", "applicantName", "requestedAmount", "creditScore", "loanType"], "title": "LoanApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for an insurance claim, including properties such as claimID, policyHolderID, claimType, dateOfLoss, and claimAmount.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "policyHolderID": {"title": "Policy Holder ID", "type": "string"}, "claimType": {"title": "Claim Type", "type": "string", "enum": ["auto", "home", "life", "health"]}, "dateOfLoss": {"title": "Date of Loss", "type": "string", "format": "date"}, "claimAmount": {"title": "Claim Amount", "type": "number"}}, "required": ["claimID", "policyHolderID", "claimType", "dateOfLoss", "claimAmount"], "title": "InsuranceClaim", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object representing a credit report, including properties like reportID, consumerID, creditScore, openAccounts, and delinquencies.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "consumerID": {"title": "Consumer ID", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "openAccounts": {"title": "Open Accounts", "type": "array", "items": {"type": "object", "properties": {"accountID": {"title": "Account ID", "type": "string"}, "balance": {"title": "Balance", "type": "number"}}, "required": ["accountID", "balance"]}}, "delinquencies": {"title": "Delinquencies", "type": "array", "items": {"type": "object", "properties": {"accountID": {"title": "Account ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "dateReported": {"title": "Date Reported", "type": "string", "format": "date"}}, "required": ["accountID", "amount", "dateReported"]}}}, "required": ["reportID", "consumerID", "creditScore", "openAccounts", "delinquencies"], "title": "CreditReport", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for querying loan applications, including properties like applicantName, loanAmount, applicationDate, and status.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "applicationDate": {"format": "date", "title": "Application Date", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "approved", "rejected"]}}, "required": ["applicantName", "loanAmount", "applicationDate", "status"], "title": "LoanApplicationQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON object for a credit score check, including properties such as personName, SSN, requestedBy, and creditScore.", "Schema": {"properties": {"personName": {"title": "Person Name", "type": "string"}, "SSN": {"title": "Social Security Number", "type": "string", "pattern": "^(\\d{3}-?\\d{2}-?\\d{4}|XXX-XX-XXXX)$"}, "requestedBy": {"title": "Requested By", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}}, "required": ["personName", "SSN", "requestedBy", "creditScore"], "title": "CreditScoreCheck", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a bank account creation request, with properties like accountHolderName, accountType, initialDeposit, and currency.", "Schema": {"properties": {"accountHolderName": {"title": "Account Holder Name", "type": "string"}, "accountType": {"title": "Account Type", "type": "string", "enum": ["savings", "checking", "business"]}, "initialDeposit": {"title": "Initial Deposit", "type": "number"}, "currency": {"title": "Currency", "type": "string", "pattern": "^[A-Z]{3}$"}}, "required": ["accountHolderName", "accountType", "initialDeposit", "currency"], "title": "BankAccountCreation", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for an investment portfolio summary, including properties such as investorName, portfolioID, assets, and totalValue.", "Schema": {"properties": {"investorName": {"title": "Investor Name", "type": "string"}, "portfolioID": {"title": "Portfolio ID", "type": "string"}, "assets": {"title": "Assets", "type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "Asset Type", "type": "string"}, "assetValue": {"title": "Asset Value", "type": "number"}}, "required": ["assetType", "assetValue"]}}, "totalValue": {"title": "Total Value", "type": "number"}}, "required": ["investorName", "portfolioID", "assets", "totalValue"], "title": "InvestmentPortfolioSummary", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object for a transaction history query, with properties like accountNumber, fromDate, toDate, and transactionType.", "Schema": {"properties": {"accountNumber": {"title": "Account Number", "type": "string"}, "fromDate": {"format": "date", "title": "From Date", "type": "string"}, "toDate": {"format": "date", "title": "To Date", "type": "string"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["deposit", "withdrawal", "transfer", "payment"]}}, "required": ["accountNumber", "fromDate", "toDate", "transactionType"], "title": "TransactionHistoryQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for a commercial financing application, including properties like applicantName, loanAmount, businessType, and creditScore.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "businessType": {"title": "Business Type", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}}, "required": ["applicantName", "loanAmount", "businessType", "creditScore"], "title": "CommercialFinancingApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON schema for a leasing agreement, with properties such as lesseeName, assetType, leaseTerm, and monthlyPayment.", "Schema": {"properties": {"lesseeName": {"title": "Lessee Name", "type": "string"}, "assetType": {"title": "Asset Type", "type": "string"}, "leaseTerm": {"title": "Lease Term", "type": "integer"}, "monthlyPayment": {"title": "Monthly Payment", "type": "number"}}, "required": ["lesseeName", "assetType", "leaseTerm", "monthlyPayment"], "title": "LeasingAgreement", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a factoring service transaction, including properties like clientName, invoiceAmount, dueDate, and advanceRate.", "Schema": {"properties": {"clientName": {"title": "Client Name", "type": "string"}, "invoiceAmount": {"title": "Invoice Amount", "type": "number"}, "dueDate": {"format": "date", "title": "Due Date", "type": "string"}, "advanceRate": {"title": "Advance Rate", "type": "number"}}, "required": ["clientName", "invoiceAmount", "dueDate", "advanceRate"], "title": "FactoringServiceTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for a central bank's currency exchange rate query, including properties such as baseCurrency, targetCurrency, and exchangeRate.", "Schema": {"properties": {"baseCurrency": {"title": "Base Currency", "type": "string"}, "targetCurrency": {"title": "Target Currency", "type": "string"}, "exchangeRate": {"title": "Exchange Rate", "type": "number"}}, "required": ["baseCurrency", "targetCurrency", "exchangeRate"], "title": "CurrencyExchangeRateQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object representing a specialty boutique's investment portfolio, including properties like portfolioID, assetAllocation, and performanceMetrics.", "Schema": {"properties": {"portfolioID": {"title": "Portfolio ID", "type": "string"}, "assetAllocation": {"title": "Asset Allocation", "type": "object", "properties": {"stocks": {"type": "number"}, "bonds": {"type": "number"}, "cash": {"type": "number"}, "other": {"type": "number"}}}, "performanceMetrics": {"title": "Performance Metrics", "type": "object", "properties": {"return": {"type": "number"}, "volatility": {"type": "number"}}}}, "required": ["portfolioID", "assetAllocation", "performanceMetrics"], "title": "InvestmentPortfolio", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for storing digital wallet transactions, including properties like transactionId, amount, currency, and timestamp.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "currency": {"title": "Currency", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionId", "amount", "currency", "timestamp"], "title": "DigitalWalletTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON schema for a payment gateway transaction query, including properties like merchantId, terminalId, transactionDate, and status.", "Schema": {"properties": {"merchantId": {"title": "Merchant ID", "type": "string"}, "terminalId": {"title": "Terminal ID", "type": "string"}, "transactionDate": {"title": "Transaction Date", "type": "string", "format": "date"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "completed", "failed", "refunded"]}}, "required": ["merchantId", "terminalId", "transactionDate", "status"], "title": "PaymentGatewayTransactionQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for mobile payment processing, including properties like userId, paymentMethod, amount, and vendor.", "Schema": {"properties": {"userId": {"title": "User ID", "type": "string"}, "paymentMethod": {"title": "Payment Method", "type": "string", "enum": ["credit_card", "debit_card", "paypal", "apple_pay", "google_pay"]}, "amount": {"title": "Amount", "type": "number"}, "vendor": {"title": "Vendor", "type": "string"}}, "required": ["userId", "paymentMethod", "amount", "vendor"], "title": "MobilePaymentProcessing", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for a digital wallet provider's user profile, including properties like userId, email, phone, and linkedBankAccounts.", "Schema": {"properties": {"userId": {"title": "User ID", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}, "linkedBankAccounts": {"title": "Linked Bank Accounts", "type": "array", "items": {"type": "object", "properties": {"bankName": {"title": "Bank Name", "type": "string"}, "accountNumber": {"title": "Account Number", "type": "string"}, "accountType": {"title": "Account Type", "type": "string", "enum": ["checking", "savings", "credit"]}}, "required": ["bankName", "accountNumber", "accountType"]}}}, "required": ["userId", "email", "phone", "linkedBankAccounts"], "title": "DigitalWalletUserProfile", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object representing a payment service provider's transaction report, including properties like reportId, generatedDate, transactions, and totalAmount.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "generatedDate": {"title": "Generated Date", "type": "string", "format": "date-time"}, "transactions": {"title": "Transactions", "type": "array", "items": {"$ref": "#/$defs/DigitalWalletTransaction"}}, "totalAmount": {"title": "Total Amount", "type": "number"}}, "required": ["reportId", "generatedDate", "transactions", "totalAmount"], "title": "PaymentServiceProviderTransactionReport", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for querying customer account details, including properties like accountNumber, accountType, balance, and transactionHistory.", "Schema": {"properties": {"accountNumber": {"title": "Account Number", "type": "string"}, "accountType": {"title": "Account Type", "type": "string"}, "balance": {"title": "Balance", "type": "number"}, "transactionHistory": {"type": "array", "items": {"type": "object", "properties": {"transactionDate": {"title": "Transaction Date", "type": "string", "format": "date-time"}, "transactionAmount": {"title": "Transaction Amount", "type": "number"}, "transactionType": {"title": "Transaction Type", "type": "string"}}, "required": ["transactionDate", "transactionAmount", "transactionType"]}, "title": "Transaction History"}}, "required": ["accountNumber", "accountType", "balance", "transactionHistory"], "title": "CustomerAccountDetails", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON schema for a loan application, including properties such as applicantName, creditScore, loanAmount, and repaymentSchedule.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "repaymentSchedule": {"type": "array", "items": {"type": "object", "properties": {"dueDate": {"title": "Due Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["dueDate", "amount"]}, "title": "Repayment Schedule"}}, "required": ["applicantName", "creditScore", "loanAmount", "repaymentSchedule"], "title": "LoanApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a credit card transaction, including properties like transactionId, cardNumber, merchantDetails, amount, and timestamp.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "cardNumber": {"title": "Card Number", "type": "string"}, "merchantDetails": {"type": "object", "properties": {"merchantName": {"title": "Merchant Name", "type": "string"}, "merchantLocation": {"title": "Merchant Location", "type": "string"}}, "required": ["merchantName", "merchantLocation"], "title": "Merchant Details"}, "amount": {"title": "Amount", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["transactionId", "cardNumber", "merchantDetails", "amount", "timestamp"], "title": "CreditCardTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for an investment portfolio summary, including properties such as investorName, portfolioId, assets, and totalValue.", "Schema": {"properties": {"investorName": {"title": "Investor Name", "type": "string"}, "portfolioId": {"title": "Portfolio ID", "type": "string"}, "assets": {"type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "Asset Type", "type": "string"}, "assetValue": {"title": "Asset Value", "type": "number"}}, "required": ["assetType", "assetValue"]}, "title": "Assets"}, "totalValue": {"title": "Total Value", "type": "number"}}, "required": ["investorName", "portfolioId", "assets", "totalValue"], "title": "InvestmentPortfolioSummary", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object for a stock market trade, including properties like tradeId, stockSymbol, quantity, price, and tradeTime.", "Schema": {"properties": {"tradeId": {"title": "Trade ID", "type": "string"}, "stockSymbol": {"title": "Stock Symbol", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}, "tradeTime": {"title": "Trade Time", "type": "string", "format": "date-time"}}, "required": ["tradeId", "stockSymbol", "quantity", "price", "tradeTime"], "title": "StockMarketTrade", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for storing commercial mortgage finance details, including properties like propertyType, loanAmount, interestRate, and maturityDate.", "Schema": {"properties": {"propertyType": {"title": "Property Type", "type": "string", "enum": ["Commercial", "Residential"]}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "interestRate": {"title": "Interest Rate", "type": "number"}, "maturityDate": {"format": "date", "title": "Maturity Date", "type": "string"}}, "required": ["propertyType", "loanAmount", "interestRate", "maturityDate"], "title": "CommercialMortgageFinance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON schema for a residential mortgage application, including applicantName, creditScore, employmentStatus, and requestedLoanAmount.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "employmentStatus": {"title": "Employment Status", "type": "string"}, "requestedLoanAmount": {"title": "Requested Loan Amount", "type": "number"}}, "required": ["applicantName", "creditScore", "employmentStatus", "requestedLoanAmount"], "title": "ResidentialMortgageApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a loan amortization schedule, including properties such as paymentNumber, principalAmount, interestAmount, and remainingBalance.", "Schema": {"properties": {"paymentNumber": {"title": "Payment Number", "type": "integer"}, "principalAmount": {"title": "Principal Amount", "type": "number"}, "interestAmount": {"title": "Interest Amount", "type": "number"}, "remainingBalance": {"title": "Remaining Balance", "type": "number"}}, "required": ["paymentNumber", "principalAmount", "interestAmount", "remainingBalance"], "title": "LoanAmortizationSchedule", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for tracking mortgage payment history, including properties like paymentDate, amountPaid, principalPaid, interestPaid, and lateFees.", "Schema": {"properties": {"paymentDate": {"format": "date", "title": "Payment Date", "type": "string"}, "amountPaid": {"title": "Amount Paid", "type": "number"}, "principalPaid": {"title": "Principal Paid", "type": "number"}, "interestPaid": {"title": "Interest Paid", "type": "number"}, "lateFees": {"title": "Late Fees", "type": "number"}}, "required": ["paymentDate", "amountPaid", "principalPaid", "interestPaid", "lateFees"], "title": "MortgagePaymentHistory", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object representing a borrower's credit report, including properties such as borrowerName, creditScore, creditHistory, and currentDebt.", "Schema": {"properties": {"borrowerName": {"title": "Borrower Name", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "creditHistory": {"title": "Credit History", "type": "array", "items": {"type": "object", "properties": {"accountType": {"title": "Account Type", "type": "string"}, "accountStatus": {"title": "Account Status", "type": "string"}, "openingDate": {"format": "date", "title": "Opening Date", "type": "string"}, "closingDate": {"format": "date", "title": "Closing Date", "type": "string"}, "balance": {"title": "Balance", "type": "number"}}}}, "currentDebt": {"title": "Current Debt", "type": "number"}}, "required": ["borrowerName", "creditScore", "creditHistory", "currentDebt"], "title": "BorrowerCreditReport", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Create a JSON object for processing a credit card transaction, including properties like transactionId, amount, currency, and merchant details.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "currency": {"title": "Currency", "type": "string"}, "merchantDetails": {"title": "Merchant Details", "type": "object", "properties": {"merchantId": {"title": "Merchant ID", "type": "string"}, "merchantName": {"title": "Merchant Name", "type": "string"}}, "required": ["merchantId", "merchantName"]}}, "required": ["transactionId", "amount", "currency", "merchantDetails"], "title": "CreditCardTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Develop a JSON object for a bank account query, including properties like accountId, accountType, balance, and transaction history.", "Schema": {"properties": {"accountId": {"title": "Account ID", "type": "string"}, "accountType": {"title": "Account Type", "type": "string"}, "balance": {"title": "Balance", "type": "number"}, "transactionHistory": {"title": "Transaction History", "type": "array", "items": {"type": "object", "properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "description": {"title": "Description", "type": "string"}}, "required": ["transactionId", "date", "amount", "description"]}}}, "required": ["accountId", "accountType", "balance", "transactionHistory"], "title": "BankAccountQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Construct a JSON object for a loan application, including properties like applicantName, loanAmount, loanType, creditScore, and employment information.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "loanType": {"title": "Loan Type", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "employmentInformation": {"title": "Employment Information", "type": "object", "properties": {"employerName": {"title": "Employer Name", "type": "string"}, "employmentDuration": {"title": "Employment Duration", "type": "string"}, "annualIncome": {"title": "Annual Income", "type": "number"}}, "required": ["employerName", "employmentDuration", "annualIncome"]}}, "required": ["applicantName", "loanAmount", "loanType", "creditScore", "employmentInformation"], "title": "LoanApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Design a JSON object for an insurance claim submission, including properties like claimId, policyNumber, claimType, dateOfLoss, and estimatedClaimAmount.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "claimType": {"title": "Claim Type", "type": "string"}, "dateOfLoss": {"title": "Date of Loss", "type": "string", "format": "date"}, "estimatedClaimAmount": {"title": "Estimated Claim Amount", "type": "number"}}, "required": ["claimId", "policyNumber", "claimType", "dateOfLoss", "estimatedClaimAmount"], "title": "InsuranceClaimSubmission", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Financial Services (New Name)", "Task": "Generate a JSON object for a stock trade order, including properties like orderId, stockSymbol, orderType, quantity, and price.", "Schema": {"properties": {"orderId": {"title": "Order ID", "type": "string"}, "stockSymbol": {"title": "Stock Symbol", "type": "string"}, "orderType": {"title": "Order Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}}, "required": ["orderId", "stockSymbol", "orderType", "quantity", "price"], "title": "StockTradeOrder", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Create a JSON object for a loan application, including applicant details, loan amount, and credit score.", "Schema": {"properties": {"applicantDetails": {"type": "object", "properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}, "dateOfBirth": {"type": "string", "format": "date"}, "employmentStatus": {"type": "string"}}, "required": ["firstName", "lastName", "dateOfBirth", "employmentStatus"]}, "loanAmount": {"type": "number"}, "creditScore": {"type": "integer"}}, "required": ["applicantDetails", "loanAmount", "creditScore"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Generate a JSON object for credit card application status, including application ID, applicant name, and status.", "Schema": {"properties": {"applicationId": {"type": "string"}, "applicantName": {"type": "string"}, "status": {"type": "string", "enum": ["pending", "approved", "rejected"]}}, "required": ["applicationId", "applicantName", "status"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Construct a JSON object for a mortgage pre-approval, including property details, applicant income, and pre-approval amount.", "Schema": {"properties": {"propertyDetails": {"type": "object", "properties": {"address": {"type": "string"}, "propertyType": {"type": "string"}, "valuation": {"type": "number"}}, "required": ["address", "propertyType", "valuation"]}, "applicantIncome": {"type": "number"}, "preApprovalAmount": {"type": "number"}}, "required": ["propertyDetails", "applicantIncome", "preApprovalAmount"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Design a JSON object for tracking a personal loan repayment, including loan ID, repayment amount, and repayment date.", "Schema": {"properties": {"loanId": {"type": "string"}, "repaymentAmount": {"type": "number"}, "repaymentDate": {"type": "string", "format": "date"}}, "required": ["loanId", "repaymentAmount", "repaymentDate"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Formulate a JSON object for an investment portfolio summary, including investor name, portfolio value, and asset allocation.", "Schema": {"properties": {"investorName": {"type": "string"}, "portfolioValue": {"type": "number"}, "assetAllocation": {"type": "array", "items": {"type": "object", "properties": {"assetType": {"type": "string"}, "percentage": {"type": "number"}}, "required": ["assetType", "percentage"]}}}, "required": ["investorName", "portfolioValue", "assetAllocation"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for storing investment portfolio details, including properties like portfolioID, ownerName, assetDetails, and totalValue.", "Schema": {"properties": {"portfolioID": {"title": "PortfolioID", "type": "string"}, "ownerName": {"title": "OwnerName", "type": "string"}, "assetDetails": {"type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "AssetType", "type": "string"}, "assetValue": {"title": "AssetValue", "type": "number"}}, "required": ["assetType", "assetValue"]}, "title": "AssetDetails"}, "totalValue": {"title": "TotalValue", "type": "number"}}, "required": ["portfolioID", "ownerName", "assetDetails", "totalValue"], "title": "InvestmentPortfolio", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Develop a JSON schema for representing a mutual fund's performance data, including properties such as fundName, inceptionDate, NAV, and YTDReturn.", "Schema": {"properties": {"fundName": {"title": "FundName", "type": "string"}, "inceptionDate": {"title": "InceptionDate", "type": "string", "format": "date"}, "NAV": {"title": "NAV", "type": "number"}, "YTDReturn": {"title": "YTDReturn", "type": "number"}}, "required": ["fundName", "inceptionDate", "NAV", "YTDReturn"], "title": "MutualFundPerformance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object representing a stock trade, including properties like tradeID, stockSymbol, quantity, price, and tradeTime.", "Schema": {"properties": {"tradeID": {"title": "TradeID", "type": "string"}, "stockSymbol": {"title": "StockSymbol", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}, "tradeTime": {"title": "TradeTime", "type": "string", "format": "date-time"}}, "required": ["tradeID", "stockSymbol", "quantity", "price", "tradeTime"], "title": "StockTrade", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for a bond issuance profile, including properties such as bondID, issuerName, maturityDate, couponRate, and faceValue.", "Schema": {"properties": {"bondID": {"title": "BondID", "type": "string"}, "issuerName": {"title": "IssuerName", "type": "string"}, "maturityDate": {"title": "MaturityDate", "type": "string", "format": "date"}, "couponRate": {"title": "CouponRate", "type": "number"}, "faceValue": {"title": "FaceValue", "type": "number"}}, "required": ["bondID", "issuerName", "maturityDate", "couponRate", "faceValue"], "title": "BondIssuance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object representing a client's transaction history, including properties like clientID, transactions, and accountBalance.", "Schema": {"properties": {"clientID": {"title": "ClientID", "type": "string"}, "transactions": {"type": "array", "items": {"type": "object", "properties": {"transactionID": {"title": "TransactionID", "type": "string"}, "transactionType": {"title": "TransactionType", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "transactionDate": {"title": "TransactionDate", "type": "string", "format": "date-time"}}, "required": ["transactionID", "transactionType", "amount", "transactionDate"]}, "title": "Transactions"}, "accountBalance": {"title": "AccountBalance", "type": "number"}}, "required": ["clientID", "transactions", "accountBalance"], "title": "ClientTransactionHistory", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for querying current stock prices, including properties like symbol, lastPrice, and timestamp.", "Schema": {"properties": {"symbol": {"title": "Symbol", "type": "string"}, "lastPrice": {"title": "LastPrice", "type": "number"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["symbol", "lastPrice", "timestamp"], "title": "StockPriceQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Develop a JSON object for submitting a trade order, including properties such as orderType, quantity, price, and securityId.", "Schema": {"properties": {"orderType": {"title": "OrderType", "type": "string", "enum": ["market", "limit", "stop", "stop-limit"]}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}, "securityId": {"title": "SecurityId", "type": "string"}}, "required": ["orderType", "quantity", "price", "securityId"], "title": "TradeOrderSubmission", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object for a portfolio summary, including properties like portfolioId, ownerName, totalValue, and positions.", "Schema": {"properties": {"portfolioId": {"title": "PortfolioId", "type": "string"}, "ownerName": {"title": "OwnerName", "type": "string"}, "totalValue": {"title": "TotalValue", "type": "number"}, "positions": {"title": "Positions", "type": "array", "items": {"type": "object", "properties": {"symbol": {"title": "Symbol", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "currentPrice": {"title": "CurrentPrice", "type": "number"}}, "required": ["symbol", "quantity", "currentPrice"]}}}, "required": ["portfolioId", "ownerName", "totalValue", "positions"], "title": "PortfolioSummary", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for a financial news query, including properties such as keywords, dateRange, and source.", "Schema": {"properties": {"keywords": {"title": "Keywords", "type": "array", "items": {"type": "string"}}, "dateRange": {"title": "DateRange", "type": "object", "properties": {"startDate": {"title": "StartDate", "type": "string", "format": "date"}, "endDate": {"title": "EndDate", "type": "string", "format": "date"}}, "required": ["startDate", "endDate"]}, "source": {"title": "Source", "type": "string"}}, "required": ["keywords", "dateRange"], "title": "FinancialNewsQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object representing a client's risk profile, including properties like clientId, riskTolerance, investmentObjectives, and timeHorizon.", "Schema": {"properties": {"clientId": {"title": "ClientId", "type": "string"}, "riskTolerance": {"title": "RiskTolerance", "type": "string", "enum": ["low", "medium", "high"]}, "investmentObjectives": {"title": "InvestmentObjectives", "type": "array", "items": {"type": "string"}}, "timeHorizon": {"title": "TimeHorizon", "type": "string"}}, "required": ["clientId", "riskTolerance", "investmentObjectives", "timeHorizon"], "title": "ClientRiskProfile", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Create a JSON object for storing credit card application details, including applicant name, address, income, credit score, and requested credit limit.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "income": {"title": "Income", "type": "number"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "requestedCreditLimit": {"title": "Requested Credit Limit", "type": "number"}}, "required": ["applicantName", "address", "income", "creditScore", "requestedCreditLimit"], "title": "CreditCardApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Develop a JSON schema for a personal loan application, including fields such as applicant name, purpose of loan, amount requested, and employment details.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "purposeOfLoan": {"title": "Purpose of Loan", "type": "string"}, "amountRequested": {"title": "Amount Requested", "type": "number"}, "employmentDetails": {"title": "Employment Details", "type": "object", "properties": {"employerName": {"title": "Employer Name", "type": "string"}, "employmentDuration": {"title": "Employment Duration", "type": "string"}, "annualIncome": {"title": "Annual Income", "type": "number"}}, "required": ["employerName", "employmentDuration", "annualIncome"]}}, "required": ["applicantName", "purposeOfLoan", "amountRequested", "employmentDetails"], "title": "PersonalLoanApplication", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Construct a JSON object for lease financing agreements, capturing details such as lessee name, asset type, lease term, monthly payments, and interest rate.", "Schema": {"properties": {"lesseeName": {"title": "Lessee Name", "type": "string"}, "assetType": {"title": "Asset Type", "type": "string"}, "leaseTerm": {"title": "Lease Term", "type": "string"}, "monthlyPayments": {"title": "Monthly Payments", "type": "number"}, "interestRate": {"title": "Interest Rate", "type": "number"}}, "required": ["lesseeName", "assetType", "leaseTerm", "monthlyPayments", "interestRate"], "title": "LeaseFinancingAgreement", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Design a JSON object for tracking travel-related money service transactions, including fields such as transaction ID, customer name, destination country, amount sent, and currency type.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "destinationCountry": {"title": "Destination Country", "type": "string"}, "amountSent": {"title": "Amount Sent", "type": "number"}, "currencyType": {"title": "Currency Type", "type": "string"}}, "required": ["transactionID", "customerName", "destinationCountry", "amountSent", "currencyType"], "title": "TravelMoneyServiceTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Consumer Finance", "Task": "Generate a JSON object for pawn shop inventory items, including properties such as item ID, description, condition, valuation, and loan amount offered.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "condition": {"title": "Condition", "type": "string"}, "valuation": {"title": "Valuation", "type": "number"}, "loanAmountOffered": {"title": "Loan Amount Offered", "type": "number"}}, "required": ["itemID", "description", "condition", "valuation", "loanAmountOffered"], "title": "PawnShopInventoryItem", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for querying asset management portfolios, including properties like portfolioID, managerName, and assetAllocation.", "Schema": {"properties": {"portfolioID": {"title": "Portfolio ID", "type": "string"}, "managerName": {"title": "Manager Name", "type": "string"}, "assetAllocation": {"title": "Asset Allocation", "type": "object", "properties": {"equities": {"title": "Equities", "type": "number"}, "fixedIncome": {"title": "Fixed Income", "type": "number"}, "commodities": {"title": "Commodities", "type": "number"}, "cash": {"title": "Cash", "type": "number"}}, "required": ["equities", "fixedIncome", "commodities", "cash"]}}, "required": ["portfolioID", "managerName", "assetAllocation"], "title": "AssetManagementPortfolioQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Develop a JSON object for a custody bank's client account, including properties like accountNumber, clientName, and holdings.", "Schema": {"properties": {"accountNumber": {"title": "Account Number", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "holdings": {"title": "Holdings", "type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "Asset Type", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "value": {"title": "Value", "type": "number"}}, "required": ["assetType", "quantity", "value"]}}}, "required": ["accountNumber", "clientName", "holdings"], "title": "CustodyBankClientAccount", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object for tracking securities transactions, including properties like transactionID, securityName, quantity, and transactionType.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "securityName": {"title": "Security Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["buy", "sell", "transfer"]}}, "required": ["transactionID", "securityName", "quantity", "transactionType"], "title": "SecuritiesTransactionTracking", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for a stock market order, including properties like orderID, traderID, stockSymbol, orderType, and quantity.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "traderID": {"title": "Trader ID", "type": "string"}, "stockSymbol": {"title": "Stock Symbol", "type": "string"}, "orderType": {"title": "Order Type", "type": "string", "enum": ["market", "limit", "stop"]}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["orderID", "traderID", "stockSymbol", "orderType", "quantity"], "title": "StockMarketOrder", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object for a bond issuance, including properties like issuanceID, issuerName, bondType, maturityDate, and couponRate.", "Schema": {"properties": {"issuanceID": {"title": "Issuance ID", "type": "string"}, "issuerName": {"title": "Issuer Name", "type": "string"}, "bondType": {"title": "Bond Type", "type": "string"}, "maturityDate": {"title": "Maturity Date", "type": "string", "format": "date"}, "couponRate": {"title": "Coupon Rate", "type": "number"}}, "required": ["issuanceID", "issuerName", "bondType", "maturityDate", "couponRate"], "title": "BondIssuance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Create a JSON object for querying mortgage REITs by property type, including residential, commercial, and mixed-use.", "Schema": {"properties": {"propertyType": {"title": "Property Type", "type": "string", "enum": ["residential", "commercial", "mixed-use"]}}, "required": ["propertyType"], "title": "MortgageREITsQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Develop a JSON schema for a mortgage REIT investment profile, including properties such as REIT name, asset size, and dividend yield.", "Schema": {"properties": {"reitName": {"title": "REIT Name", "type": "string"}, "assetSize": {"title": "Asset Size", "type": "number", "format": "float"}, "dividendYield": {"title": "Dividend Yield", "type": "number", "format": "percentage"}}, "required": ["reitName", "assetSize", "dividendYield"], "title": "InvestmentProfile", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Construct a JSON object for a mortgage REIT's financial statement, including income, expenses, and net income.", "Schema": {"properties": {"income": {"title": "Income", "type": "number", "format": "currency"}, "expenses": {"title": "Expenses", "type": "number", "format": "currency"}, "netIncome": {"title": "Net Income", "type": "number", "format": "currency"}}, "required": ["income", "expenses", "netIncome"], "title": "FinancialStatement", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Design a JSON object for tracking a mortgage REIT's portfolio performance, including metrics like capital gains, interest income, and total return.", "Schema": {"properties": {"capitalGains": {"title": "Capital Gains", "type": "number", "format": "currency"}, "interestIncome": {"title": "Interest Income", "type": "number", "format": "currency"}, "totalReturn": {"title": "Total Return", "type": "number", "format": "percentage"}}, "required": ["capitalGains", "interestIncome", "totalReturn"], "title": "PortfolioPerformance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Generate a JSON object for a mortgage REIT's risk assessment, including properties like credit risk, market risk, and operational risk.", "Schema": {"properties": {"creditRisk": {"title": "Credit Risk", "type": "string", "enum": ["low", "medium", "high"]}, "marketRisk": {"title": "Market Risk", "type": "string", "enum": ["low", "medium", "high"]}, "operationalRisk": {"title": "Operational Risk", "type": "string", "enum": ["low", "medium", "high"]}}, "required": ["creditRisk", "marketRisk", "operationalRisk"], "title": "RiskAssessment", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for querying current stock prices, including properties like symbol, lastTradePrice, and tradeTime.", "Schema": {"properties": {"symbol": {"title": "Symbol", "type": "string"}, "lastTradePrice": {"title": "LastTradePrice", "type": "number"}, "tradeTime": {"title": "TradeTime", "type": "string", "format": "date-time"}}, "required": ["symbol", "lastTradePrice", "tradeTime"], "title": "StockPriceQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Develop a JSON object for a bond yield request, with properties such as ISIN, couponRate, maturityDate, and yieldToMaturity.", "Schema": {"properties": {"ISIN": {"title": "ISIN", "type": "string"}, "couponRate": {"title": "CouponRate", "type": "number"}, "maturityDate": {"title": "MaturityDate", "type": "string", "format": "date"}, "yieldToMaturity": {"title": "YieldToMaturity", "type": "number"}}, "required": ["ISIN", "couponRate", "maturityDate", "yieldToMaturity"], "title": "BondYieldRequest", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object for a foreign exchange rate query, including properties like baseCurrency, targetCurrency, and exchangeRate.", "Schema": {"properties": {"baseCurrency": {"title": "BaseCurrency", "type": "string"}, "targetCurrency": {"title": "TargetCurrency", "type": "string"}, "exchangeRate": {"title": "ExchangeRate", "type": "number"}}, "required": ["baseCurrency", "targetCurrency", "exchangeRate"], "title": "ForexRateQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for a mutual fund performance report, including properties such as fundName, NAV, annualReturn, and expenseRatio.", "Schema": {"properties": {"fundName": {"title": "FundName", "type": "string"}, "NAV": {"title": "NAV", "type": "number"}, "annualReturn": {"title": "AnnualReturn", "type": "number"}, "expenseRatio": {"title": "ExpenseRatio", "type": "number"}}, "required": ["fundName", "NAV", "annualReturn", "expenseRatio"], "title": "MutualFundPerformance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object representing a trader's portfolio, including properties like traderID, holdings, totalValue, and performanceMetrics.", "Schema": {"properties": {"traderID": {"title": "TraderID", "type": "string"}, "holdings": {"title": "Holdings", "type": "array", "items": {"type": "object", "properties": {"asset": {"title": "Asset", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "averageCost": {"title": "AverageCost", "type": "number"}}, "required": ["asset", "quantity", "averageCost"]}}, "totalValue": {"title": "TotalValue", "type": "number"}, "performanceMetrics": {"title": "PerformanceMetrics", "type": "object", "properties": {"returnOnInvestment": {"title": "ReturnOnInvestment", "type": "number"}, "volatility": {"title": "Volatility", "type": "number"}}, "required": ["returnOnInvestment", "volatility"]}}, "required": ["traderID", "holdings", "totalValue", "performanceMetrics"], "title": "TraderPortfolio", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for querying stock market data, including properties like tickerSymbol, companyName, marketCap, and currentPrice.", "Schema": {"properties": {"tickerSymbol": {"title": "Ticker Symbol", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "marketCap": {"title": "Market Capitalization", "type": "number"}, "currentPrice": {"title": "Current Stock Price", "type": "number"}}, "required": ["tickerSymbol", "companyName", "marketCap", "currentPrice"], "title": "StockMarketDataQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object for a bond information query, including properties such as bondIdentifier, issuer, maturityDate, and couponRate.", "Schema": {"properties": {"bondIdentifier": {"title": "Bond Identifier", "type": "string"}, "issuer": {"title": "Issuer", "type": "string"}, "maturityDate": {"format": "date", "title": "Maturity Date", "type": "string"}, "couponRate": {"title": "Coupon Rate", "type": "number"}}, "required": ["bondIdentifier", "issuer", "maturityDate", "couponRate"], "title": "BondInformationQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for retrieving foreign exchange rates, with properties like baseCurrency, targetCurrency, and exchangeRate.", "Schema": {"properties": {"baseCurrency": {"title": "Base Currency", "type": "string"}, "targetCurrency": {"title": "Target Currency", "type": "string"}, "exchangeRate": {"title": "Exchange Rate", "type": "number"}}, "required": ["baseCurrency", "targetCurrency", "exchangeRate"], "title": "ForexRateQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object for mutual fund performance data, including properties like fundIdentifier, netAssetValue, yearToDateReturn, and expenseRatio.", "Schema": {"properties": {"fundIdentifier": {"title": "Fund Identifier", "type": "string"}, "netAssetValue": {"title": "Net Asset Value", "type": "number"}, "yearToDateReturn": {"title": "Year To Date Return", "type": "number"}, "expenseRatio": {"title": "Expense Ratio", "type": "number"}}, "required": ["fundIdentifier", "netAssetValue", "yearToDateReturn", "expenseRatio"], "title": "MutualFundPerformanceQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Formulate a JSON object for an investment portfolio summary, including properties such as portfolioId, ownerName, totalValue, and assetAllocation.", "Schema": {"properties": {"portfolioId": {"title": "Portfolio ID", "type": "string"}, "ownerName": {"title": "Owner Name", "type": "string"}, "totalValue": {"title": "Total Value", "type": "number"}, "assetAllocation": {"title": "Asset Allocation", "type": "object", "properties": {"stocks": {"title": "Stocks", "type": "number"}, "bonds": {"title": "Bonds", "type": "number"}, "cash": {"title": "Cash", "type": "number"}, "other": {"title": "Other", "type": "number"}}}}, "required": ["portfolioId", "ownerName", "totalValue", "assetAllocation"], "title": "InvestmentPortfolioSummary", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for storing investment portfolio details, with properties like portfolioID, ownerName, assetType, and totalValue.", "Schema": {"properties": {"portfolioID": {"title": "Portfolio ID", "type": "string"}, "ownerName": {"title": "Owner Name", "type": "string"}, "assetType": {"title": "Asset Type", "type": "string"}, "totalValue": {"title": "Total Value", "type": "number"}}, "required": ["portfolioID", "ownerName", "assetType", "totalValue"], "title": "InvestmentPortfolio", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Develop a JSON schema for representing a stock transaction, including properties such as transactionID, stockSymbol, quantity, price, and transactionDate.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "stockSymbol": {"title": "Stock Symbol", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}, "transactionDate": {"format": "date-time", "title": "Transaction Date", "type": "string"}}, "required": ["transactionID", "stockSymbol", "quantity", "price", "transactionDate"], "title": "StockTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object representing a bond issuance, including properties like issuanceID, issuerName, maturityDate, couponRate, and faceValue.", "Schema": {"properties": {"issuanceID": {"title": "Issuance ID", "type": "string"}, "issuerName": {"title": "Issuer Name", "type": "string"}, "maturityDate": {"format": "date", "title": "Maturity Date", "type": "string"}, "couponRate": {"title": "Coupon Rate", "type": "number"}, "faceValue": {"title": "Face Value", "type": "number"}}, "required": ["issuanceID", "issuerName", "maturityDate", "couponRate", "faceValue"], "title": "BondIssuance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for a merger and acquisition deal, including properties such as dealID, buyerName, sellerName, dealValue, and dealDate.", "Schema": {"properties": {"dealID": {"title": "Deal ID", "type": "string"}, "buyerName": {"title": "Buyer Name", "type": "string"}, "sellerName": {"title": "Seller Name", "type": "string"}, "dealValue": {"title": "Deal Value", "type": "number"}, "dealDate": {"format": "date-time", "title": "Deal Date", "type": "string"}}, "required": ["dealID", "buyerName", "sellerName", "dealValue", "dealDate"], "title": "MergersAndAcquisitionsDeal", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object representing a securities lending transaction, including properties like lendingID, securityISIN, lender, borrower, and returnDate.", "Schema": {"properties": {"lendingID": {"title": "Lending ID", "type": "string"}, "securityISIN": {"title": "Security ISIN", "type": "string"}, "lender": {"title": "Lender", "type": "string"}, "borrower": {"title": "Borrower", "type": "string"}, "returnDate": {"format": "date", "title": "Return Date", "type": "string"}}, "required": ["lendingID", "securityISIN", "lender", "borrower", "returnDate"], "title": "SecuritiesLendingTransaction", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Create a JSON object for storing information about a mortgage loan, including properties like loanID, borrowerName, loanAmount, interestRate, and loanTerm.", "Schema": {"properties": {"loanID": {"title": "Loan ID", "type": "string"}, "borrowerName": {"title": "Borrower Name", "type": "string"}, "loanAmount": {"title": "Loan Amount", "type": "number"}, "interestRate": {"title": "Interest Rate", "type": "number"}, "loanTerm": {"title": "Loan Term", "type": "integer"}}, "required": ["loanID", "borrowerName", "loanAmount", "interestRate", "loanTerm"], "title": "MortgageLoan", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Develop a JSON schema for representing a mortgage-backed security, including properties such as securityID, poolOfMortgages, averageMaturity, and expectedYield.", "Schema": {"properties": {"securityID": {"title": "Security ID", "type": "string"}, "poolOfMortgages": {"title": "Pool of Mortgages", "type": "array", "items": {"type": "string"}}, "averageMaturity": {"title": "Average Maturity", "type": "number"}, "expectedYield": {"title": "Expected Yield", "type": "number"}}, "required": ["securityID", "poolOfMortgages", "averageMaturity", "expectedYield"], "title": "MortgageBackedSecurity", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Construct a JSON object representing a REIT's portfolio, including properties like portfolioID, assetsUnderManagement, numberOfProperties, and sectorAllocation.", "Schema": {"properties": {"portfolioID": {"title": "Portfolio ID", "type": "string"}, "assetsUnderManagement": {"title": "Assets Under Management", "type": "number"}, "numberOfProperties": {"title": "Number of Properties", "type": "integer"}, "sectorAllocation": {"title": "Sector Allocation", "type": "object", "properties": {"residential": {"type": "number"}, "commercial": {"type": "number"}, "industrial": {"type": "number"}, "retail": {"type": "number"}}}}, "required": ["portfolioID", "assetsUnderManagement", "numberOfProperties", "sectorAllocation"], "title": "REITPortfolio", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Design a JSON object for an investor profile in a REIT, including properties such as investorID, name, investmentAmount, and sharePercentage.", "Schema": {"properties": {"investorID": {"title": "Investor ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "investmentAmount": {"title": "Investment Amount", "type": "number"}, "sharePercentage": {"title": "Share Percentage", "type": "number"}}, "required": ["investorID", "name", "investmentAmount", "sharePercentage"], "title": "InvestorProfile", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Mortgage Real Estate Investment Trusts (REITs)", "Task": "Generate a JSON object representing a REIT's financial statement, including properties like statementID, totalRevenue, netIncome, and dividendsPaid.", "Schema": {"properties": {"statementID": {"title": "Statement ID", "type": "string"}, "totalRevenue": {"title": "Total Revenue", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}, "dividendsPaid": {"title": "Dividends Paid", "type": "number"}}, "required": ["statementID", "totalRevenue", "netIncome", "dividendsPaid"], "title": "FinancialStatement", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for storing life insurance policy details, including policy number, policyholder's name, coverage amount, and beneficiaries.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "policyHolderName": {"title": "Policyholder's Name", "type": "string"}, "coverageAmount": {"title": "Coverage Amount", "type": "number"}, "beneficiaries": {"type": "array", "items": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "relationship": {"title": "Relationship", "type": "string"}}, "required": ["name", "relationship"]}}}, "required": ["policyNumber", "policyHolderName", "coverageAmount", "beneficiaries"], "title": "LifeInsurancePolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Develop a JSON schema for a disability insurance claim, including claim ID, claimant details, date of disability, and claim status.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "claimantDetails": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}}, "required": ["name", "policyNumber"]}, "dateOfDisability": {"title": "Date of Disability", "type": "string", "format": "date"}, "claimStatus": {"title": "Claim Status", "type": "string"}}, "required": ["claimID", "claimantDetails", "dateOfDisability", "claimStatus"], "title": "DisabilityInsuranceClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for indemnity insurance policy data, including policy ID, insured events, coverage limits, and deductible amounts.", "Schema": {"properties": {"policyID": {"title": "Policy ID", "type": "string"}, "insuredEvents": {"type": "array", "items": {"type": "string"}}, "coverageLimits": {"title": "Coverage Limits", "type": "number"}, "deductibleAmounts": {"title": "Deductible Amounts", "type": "number"}}, "required": ["policyID", "insuredEvents", "coverageLimits", "deductibleAmounts"], "title": "IndemnityInsurancePolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON schema for supplemental health insurance applications, including applicant information, requested coverage, and pre-existing conditions.", "Schema": {"properties": {"applicantInformation": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "dateOfBirth": {"title": "Date of Birth", "type": "string", "format": "date"}, "employmentStatus": {"title": "Employment Status", "type": "string"}}, "required": ["name", "dateOfBirth", "employmentStatus"]}, "requestedCoverage": {"title": "Requested Coverage", "type": "string"}, "preExistingConditions": {"type": "array", "items": {"type": "string"}}}, "required": ["applicantInformation", "requestedCoverage"], "title": "SupplementalHealthInsuranceApplication", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object for an insurance premium quote request, including customer details, type of insurance, and coverage options.", "Schema": {"properties": {"customerDetails": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "typeOfInsurance": {"title": "Type of Insurance", "type": "string"}, "coverageOptions": {"type": "array", "items": {"type": "object", "properties": {"optionName": {"title": "Option Name", "type": "string"}, "optionDetails": {"title": "Option Details", "type": "string"}}, "required": ["optionName", "optionDetails"]}}}, "required": ["customerDetails", "typeOfInsurance", "coverageOptions"], "title": "InsurancePremiumQuoteRequest", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for storing insurance broker details, including properties like brokerName, licenseNumber, and activePolicies.", "Schema": {"properties": {"brokerName": {"title": "Broker Name", "type": "string"}, "licenseNumber": {"title": "License Number", "type": "string"}, "activePolicies": {"items": {"type": "string"}, "title": "Active Policies", "type": "array"}}, "required": ["brokerName", "licenseNumber", "activePolicies"], "title": "InsuranceBrokerDetails", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Develop a JSON schema for an insurance claim, including properties such as claimId, claimantName, incidentDate, and claimStatus.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "claimantName": {"title": "Claimant Name", "type": "string"}, "incidentDate": {"format": "date", "title": "Incident Date", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string"}}, "required": ["claimId", "claimantName", "incidentDate", "claimStatus"], "title": "InsuranceClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for an insurance policy, including properties like policyNumber, policyHolder, coverageDetails, and premiumAmount.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "policyHolder": {"title": "Policy Holder", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "string"}, "premiumAmount": {"title": "Premium Amount", "type": "number"}}, "required": ["policyNumber", "policyHolder", "coverageDetails", "premiumAmount"], "title": "InsurancePolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON object for customer feedback on insurance services, including properties such as customerId, feedbackText, serviceRating, and dateSubmitted.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "feedbackText": {"title": "Feedback Text", "type": "string"}, "serviceRating": {"title": "Service Rating", "type": "integer", "minimum": 1, "maximum": 5}, "dateSubmitted": {"format": "date-time", "title": "Date Submitted", "type": "string"}}, "required": ["customerId", "feedbackText", "serviceRating", "dateSubmitted"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object representing an insurance rate quote, including properties like quoteId, applicantDetails, vehicleInformation, and quotedPremium.", "Schema": {"properties": {"quoteId": {"title": "Quote ID", "type": "string"}, "applicantDetails": {"title": "Applicant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}, "drivingHistory": {"title": "Driving History", "type": "string"}}, "required": ["name", "age", "drivingHistory"]}, "vehicleInformation": {"title": "Vehicle Information", "type": "object", "properties": {"make": {"title": "Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer"}}, "required": ["make", "model", "year"]}, "quotedPremium": {"title": "Quoted Premium", "type": "number"}}, "required": ["quoteId", "applicantDetails", "vehicleInformation", "quotedPremium"], "title": "InsuranceRateQuote", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for a multi-line insurance policy, including properties for policyholder information, coverage details, and premium amounts.", "Schema": {"properties": {"policyholder": {"type": "object", "properties": {"name": {"type": "string"}, "address": {"type": "string"}, "phone": {"type": "string"}}, "required": ["name", "address", "phone"]}, "coverageDetails": {"type": "array", "items": {"type": "object", "properties": {"coverageType": {"type": "string"}, "coverageAmount": {"type": "number"}}, "required": ["coverageType", "coverageAmount"]}}, "premium": {"type": "object", "properties": {"amount": {"type": "number"}, "frequency": {"type": "string"}}, "required": ["amount", "frequency"]}}, "required": ["policyholder", "coverageDetails", "premium"], "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object for an insurance claim, including details such as claimant information, date of loss, claim amount, and status.", "Schema": {"properties": {"claimant": {"type": "object", "properties": {"name": {"type": "string"}, "policyNumber": {"type": "string"}}, "required": ["name", "policyNumber"]}, "dateOfLoss": {"type": "string", "format": "date"}, "claimAmount": {"type": "number"}, "status": {"type": "string", "enum": ["Submitted", "Processing", "Approved", "Denied"]}}, "required": ["claimant", "dateOfLoss", "claimAmount", "status"], "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for an insurance quote request, including customer details, requested coverages, and quote expiration date.", "Schema": {"properties": {"customer": {"type": "object", "properties": {"name": {"type": "string"}, "address": {"type": "string"}, "phone": {"type": "string"}}, "required": ["name", "address", "phone"]}, "requestedCoverages": {"type": "array", "items": {"type": "string"}}, "quoteExpirationDate": {"type": "string", "format": "date"}}, "required": ["customer", "requestedCoverages", "quoteExpirationDate"], "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON object for tracking insurance policy renewals, including policy number, renewal date, and renewal terms.", "Schema": {"properties": {"policyNumber": {"type": "string"}, "renewalDate": {"type": "string", "format": "date"}, "renewalTerms": {"type": "object", "properties": {"newPremium": {"type": "number"}, "newCoverageDetails": {"type": "array", "items": {"type": "object", "properties": {"coverageType": {"type": "string"}, "coverageAmount": {"type": "number"}}}}}, "required": ["newPremium", "newCoverageDetails"]}}, "required": ["policyNumber", "renewalDate", "renewalTerms"], "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Formulate a JSON object for an insurance policy endorsement, including original policy details, endorsement changes, and effective date.", "Schema": {"properties": {"originalPolicy": {"type": "object", "properties": {"policyNumber": {"type": "string"}, "policyholderName": {"type": "string"}, "coverageDetails": {"type": "array", "items": {"type": "object", "properties": {"coverageType": {"type": "string"}, "coverageAmount": {"type": "number"}}}}}, "required": ["policyNumber", "policyholderName", "coverageDetails"]}, "endorsementChanges": {"type": "object", "properties": {"changeType": {"type": "string"}, "description": {"type": "string"}}, "required": ["changeType", "description"]}, "effectiveDate": {"type": "string", "format": "date"}}, "required": ["originalPolicy", "endorsementChanges", "effectiveDate"], "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for querying stock prices, including properties like symbol, date range, and data source.", "Schema": {"properties": {"symbol": {"title": "Symbol", "type": "string"}, "dateRange": {"title": "Date Range", "type": "object", "properties": {"startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}}, "required": ["startDate", "endDate"]}, "dataSource": {"title": "Data Source", "type": "string"}}, "required": ["symbol", "dateRange", "dataSource"], "title": "StockPriceQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Develop a JSON object for submitting a trade order, with properties like orderType, quantity, price, and tradingVenue.", "Schema": {"properties": {"orderType": {"title": "Order Type", "type": "string", "enum": ["market", "limit", "stop", "stop-limit"]}, "quantity": {"title": "Quantity", "type": "integer", "minimum": 1}, "price": {"title": "Price", "type": "number"}, "tradingVenue": {"title": "Trading Venue", "type": "string"}}, "required": ["orderType", "quantity", "price", "tradingVenue"], "title": "TradeOrder", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object for a portfolio summary, including properties such as portfolioID, owner, assets, and totalValue.", "Schema": {"properties": {"portfolioID": {"title": "Portfolio ID", "type": "string"}, "owner": {"title": "Owner", "type": "string"}, "assets": {"title": "Assets", "type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "Asset Type", "type": "string"}, "assetValue": {"title": "Asset Value", "type": "number"}}, "required": ["assetType", "assetValue"]}}, "totalValue": {"title": "Total Value", "type": "number"}}, "required": ["portfolioID", "owner", "assets", "totalValue"], "title": "PortfolioSummary", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for a financial instrument's historical performance, including properties like instrumentID, historicalData, and timeFrame.", "Schema": {"properties": {"instrumentID": {"title": "Instrument ID", "type": "string"}, "historicalData": {"title": "Historical Data", "type": "array", "items": {"type": "object", "properties": {"date": {"format": "date", "title": "Date", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["date", "price"]}}, "timeFrame": {"title": "Time Frame", "type": "string"}}, "required": ["instrumentID", "historicalData", "timeFrame"], "title": "FinancialInstrumentPerformance", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object representing a client's investment profile, including properties like clientID, riskTolerance, investmentGoals, and currentPortfolio.", "Schema": {"properties": {"clientID": {"title": "Client ID", "type": "string"}, "riskTolerance": {"title": "Risk Tolerance", "type": "string", "enum": ["low", "medium", "high"]}, "investmentGoals": {"title": "Investment Goals", "type": "array", "items": {"type": "string"}}, "currentPortfolio": {"title": "Current Portfolio", "type": "object", "properties": {"assets": {"title": "Assets", "type": "array", "items": {"type": "object", "properties": {"assetType": {"title": "Asset Type", "type": "string"}, "assetValue": {"title": "Asset Value", "type": "number"}}, "required": ["assetType", "assetValue"]}}, "totalValue": {"title": "Total Value", "type": "number"}}, "required": ["assets", "totalValue"]}}, "required": ["clientID", "riskTolerance", "investmentGoals", "currentPortfolio"], "title": "ClientInvestmentProfile", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for submitting a life insurance application, including properties like applicantName, dateOfBirth, policyAmount, and beneficiary details.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "dateOfBirth": {"title": "Date of Birth", "type": "string", "format": "date"}, "policyAmount": {"title": "Policy Amount", "type": "number"}, "beneficiaryDetails": {"type": "object", "properties": {"beneficiaryName": {"title": "Beneficiary Name", "type": "string"}, "relationship": {"title": "Relationship to Applicant", "type": "string"}, "percentage": {"title": "Percentage of Policy", "type": "number", "minimum": 0, "maximum": 100}}, "required": ["beneficiaryName", "relationship", "percentage"]}}, "required": ["applicantName", "dateOfBirth", "policyAmount", "beneficiaryDetails"], "title": "LifeInsuranceApplication", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for a health insurance claim, including properties like policyNumber, claimantName, dateOfService, diagnosisCode, and totalClaimAmount.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "claimantName": {"title": "Claimant Name", "type": "string"}, "dateOfService": {"title": "Date of Service", "type": "string", "format": "date"}, "diagnosisCode": {"title": "Diagnosis Code", "type": "string"}, "totalClaimAmount": {"title": "Total Claim Amount", "type": "number"}}, "required": ["policyNumber", "claimantName", "dateOfService", "diagnosisCode", "totalClaimAmount"], "title": "HealthInsuranceClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON object for property insurance policy details, including properties like policyHolderName, propertyType, coverageAmount, and premiumDueDate.", "Schema": {"properties": {"policyHolderName": {"title": "Policy Holder Name", "type": "string"}, "propertyType": {"title": "Property Type", "type": "string"}, "coverageAmount": {"title": "Coverage Amount", "type": "number"}, "premiumDueDate": {"title": "Premium Due Date", "type": "string", "format": "date"}}, "required": ["policyHolderName", "propertyType", "coverageAmount", "premiumDueDate"], "title": "PropertyInsurancePolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object for an auto insurance quote request, including properties like driverName, vehicleMakeModel, yearOfManufacture, and estimatedAnnualMileage.", "Schema": {"properties": {"driverName": {"title": "Driver Name", "type": "string"}, "vehicleMakeModel": {"title": "Vehicle Make and Model", "type": "string"}, "yearOfManufacture": {"title": "Year of Manufacture", "type": "integer", "minimum": 1900}, "estimatedAnnualMileage": {"title": "Estimated Annual Mileage", "type": "number"}}, "required": ["driverName", "vehicleMakeModel", "yearOfManufacture", "estimatedAnnualMileage"], "title": "AutoInsuranceQuoteRequest", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Formulate a JSON object for casualty insurance incident reporting, including properties like reportNumber, incidentDate, incidentDescription, and estimatedLoss.", "Schema": {"properties": {"reportNumber": {"title": "Report Number", "type": "string"}, "incidentDate": {"title": "Incident Date", "type": "string", "format": "date-time"}, "incidentDescription": {"title": "Incident Description", "type": "string"}, "estimatedLoss": {"title": "Estimated Loss", "type": "number"}}, "required": ["reportNumber", "incidentDate", "incidentDescription", "estimatedLoss"], "title": "CasualtyInsuranceIncidentReport", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for storing insurance policy details, including policy number, policyholder's name, coverage details, and premium amount.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "policyHolderName": {"title": "Policyholder's Name", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "object", "properties": {"coverageType": {"title": "Coverage Type", "type": "string"}, "coverageAmount": {"title": "Coverage Amount", "type": "number"}}, "required": ["coverageType", "coverageAmount"]}, "premiumAmount": {"title": "Premium Amount", "type": "number"}}, "required": ["policyNumber", "policyHolderName", "coverageDetails", "premiumAmount"], "title": "InsurancePolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Develop a JSON object for an insurance claim, including claim ID, policy number, date of loss, claim amount, and claim status.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "dateOfLoss": {"title": "Date of Loss", "type": "string", "format": "date"}, "claimAmount": {"title": "Claim Amount", "type": "number"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "Processing", "Approved", "Denied"]}}, "required": ["claimId", "policyNumber", "dateOfLoss", "claimAmount", "claimStatus"], "title": "InsuranceClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for an insurance quote request, including customer details, requested coverage, and quote amount.", "Schema": {"properties": {"customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}, "drivingHistory": {"title": "Driving History", "type": "string"}}, "required": ["name", "age", "drivingHistory"]}, "requestedCoverage": {"title": "Requested Coverage", "type": "string"}, "quoteAmount": {"title": "Quote Amount", "type": "number"}}, "required": ["customerDetails", "requestedCoverage", "quoteAmount"], "title": "InsuranceQuoteRequest", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON object for an insurance agent's profile, including agent ID, name, contact information, and list of policies sold.", "Schema": {"properties": {"agentId": {"title": "Agent ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "policiesSold": {"title": "Policies Sold", "type": "array", "items": {"type": "string"}}}, "required": ["agentId", "name", "contactInformation"], "title": "InsuranceAgentProfile", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object representing a customer's insurance portfolio, including customer ID, personal details, and list of active policies.", "Schema": {"properties": {"customerId": {"title": "Customer ID", "type": "string"}, "personalDetails": {"title": "Personal Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "activePolicies": {"title": "Active Policies", "type": "array", "items": {"type": "object", "properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "coverageType": {"title": "Coverage Type", "type": "string"}}, "required": ["policyNumber", "coverageType"]}}}, "required": ["customerId", "personalDetails", "activePolicies"], "title": "CustomerInsurancePortfolio", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for querying life insurance policies, including properties like policyNumber, insuredName, coverageAmount, and beneficiaries.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "insuredName": {"title": "Insured Name", "type": "string"}, "coverageAmount": {"title": "Coverage Amount", "type": "number"}, "beneficiaries": {"type": "array", "items": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "relationship": {"title": "Relationship", "type": "string"}}, "required": ["name", "relationship"]}, "title": "Beneficiaries"}}, "required": ["policyNumber", "insuredName", "coverageAmount", "beneficiaries"], "title": "LifeInsurancePolicyQuery", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Develop a JSON object for health insurance claim submissions, with properties such as claimId, patientId, serviceDate, diagnosisCodes, and claimAmount.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "patientId": {"title": "Patient ID", "type": "string"}, "serviceDate": {"title": "Service Date", "type": "string", "format": "date"}, "diagnosisCodes": {"type": "array", "items": {"type": "string"}, "title": "Diagnosis Codes"}, "claimAmount": {"title": "Claim Amount", "type": "number"}}, "required": ["claimId", "patientId", "serviceDate", "diagnosisCodes", "claimAmount"], "title": "HealthInsuranceClaimSubmission", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for an auto insurance quote request, including properties like vehicleIdentificationNumber, driverLicenseNumber, vehicleMakeModel, and coverageOptions.", "Schema": {"properties": {"vehicleIdentificationNumber": {"title": "Vehicle Identification Number", "type": "string"}, "driverLicenseNumber": {"title": "Driver License Number", "type": "string"}, "vehicleMakeModel": {"title": "Vehicle Make and Model", "type": "string"}, "coverageOptions": {"type": "array", "items": {"type": "string"}, "title": "Coverage Options"}}, "required": ["vehicleIdentificationNumber", "driverLicenseNumber", "vehicleMakeModel", "coverageOptions"], "title": "AutoInsuranceQuoteRequest", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON object for tracking property insurance claims, with properties such as claimNumber, policyHolderName, incidentDate, damageDescription, and estimatedRepairCost.", "Schema": {"properties": {"claimNumber": {"title": "Claim Number", "type": "string"}, "policyHolderName": {"title": "Policy Holder Name", "type": "string"}, "incidentDate": {"title": "Incident Date", "type": "string", "format": "date"}, "damageDescription": {"title": "Damage Description", "type": "string"}, "estimatedRepairCost": {"title": "Estimated Repair Cost", "type": "number"}}, "required": ["claimNumber", "policyHolderName", "incidentDate", "damageDescription", "estimatedRepairCost"], "title": "PropertyInsuranceClaimTracking", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object for an insurance policy renewal notice, including properties like policyId, renewalDate, premiumAmount, and paymentDueDate.", "Schema": {"properties": {"policyId": {"title": "Policy ID", "type": "string"}, "renewalDate": {"title": "Renewal Date", "type": "string", "format": "date"}, "premiumAmount": {"title": "Premium Amount", "type": "number"}, "paymentDueDate": {"title": "Payment Due Date", "type": "string", "format": "date"}}, "required": ["policyId", "renewalDate", "premiumAmount", "paymentDueDate"], "title": "InsurancePolicyRenewalNotice", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Create a JSON object for querying current stock prices, including properties like symbol, market, and timestamp.", "Schema": {"properties": {"symbol": {"title": "Symbol", "type": "string"}, "market": {"title": "Market", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["symbol", "market", "timestamp"], "title": "StockPriceQuery", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Develop a JSON object for submitting a trade order, with properties such as orderType, quantity, price, and securityId.", "Schema": {"properties": {"orderType": {"title": "OrderType", "type": "string", "enum": ["market", "limit", "stop", "stop-limit"]}, "quantity": {"title": "Quantity", "type": "integer"}, "price": {"title": "Price", "type": "number"}, "securityId": {"title": "SecurityId", "type": "string"}}, "required": ["orderType", "quantity", "price", "securityId"], "title": "TradeOrder", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Construct a JSON object for a portfolio summary, including properties like portfolioId, owner, totalValue, and positions.", "Schema": {"properties": {"portfolioId": {"title": "PortfolioId", "type": "string"}, "owner": {"title": "Owner", "type": "string"}, "totalValue": {"title": "TotalValue", "type": "number"}, "positions": {"title": "Positions", "type": "array", "items": {"type": "object", "properties": {"securityId": {"title": "SecurityId", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "currentPrice": {"title": "CurrentPrice", "type": "number"}}, "required": ["securityId", "quantity", "currentPrice"]}}}, "required": ["portfolioId", "owner", "totalValue", "positions"], "title": "PortfolioSummary", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Design a JSON object for tracking market news related to a specific stock, including properties like newsId, symbol, headline, and content.", "Schema": {"properties": {"newsId": {"title": "NewsId", "type": "string"}, "symbol": {"title": "Symbol", "type": "string"}, "headline": {"title": "Headline", "type": "string"}, "content": {"title": "Content", "type": "string"}}, "required": ["newsId", "symbol", "headline", "content"], "title": "MarketNews", "type": "object"}}
{"Category": "Financial Services (New Name)", "SubCategory": "Capital Markets", "Task": "Generate a JSON object representing an investor's profile, including properties like investorId, name, contactInfo, and investmentPreferences.", "Schema": {"properties": {"investorId": {"title": "InvestorId", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "ContactInfo", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}, "investmentPreferences": {"title": "InvestmentPreferences", "type": "object", "properties": {"riskTolerance": {"title": "RiskTolerance", "type": "string", "enum": ["low", "medium", "high"]}, "investmentGoals": {"title": "InvestmentGoals", "type": "array", "items": {"type": "string"}}}, "required": ["riskTolerance", "investmentGoals"]}}, "required": ["investorId", "name", "contactInfo", "investmentPreferences"], "title": "InvestorProfile", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Create a JSON object for logging IT service requests, including properties like requestID, clientName, issueDescription, priority, and status.", "Schema": {"properties": {"requestID": {"title": "RequestID", "type": "string"}, "clientName": {"title": "ClientName", "type": "string"}, "issueDescription": {"title": "IssueDescription", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High", "Critical"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["requestID", "clientName", "issueDescription", "priority", "status"], "title": "ITServiceRequest", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Develop a JSON object for tracking software deployment status, including properties like deploymentID, softwareName, version, deploymentDate, and successFlag.", "Schema": {"properties": {"deploymentID": {"title": "DeploymentID", "type": "string"}, "softwareName": {"title": "SoftwareName", "type": "string"}, "version": {"title": "Version", "type": "string"}, "deploymentDate": {"format": "date-time", "title": "DeploymentDate", "type": "string"}, "successFlag": {"title": "SuccessFlag", "type": "boolean"}}, "required": ["deploymentID", "softwareName", "version", "deploymentDate", "successFlag"], "title": "SoftwareDeploymentStatus", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Construct a JSON object for IT asset management, including properties like assetID, assetType, manufacturer, purchaseDate, and warrantyExpiry.", "Schema": {"properties": {"assetID": {"title": "AssetID", "type": "string"}, "assetType": {"title": "AssetType", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "purchaseDate": {"format": "date", "title": "PurchaseDate", "type": "string"}, "warrantyExpiry": {"format": "date", "title": "WarrantyExpiry", "type": "string"}}, "required": ["assetID", "assetType", "manufacturer", "purchaseDate", "warrantyExpiry"], "title": "ITAssetManagement", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Design a JSON object for user access logs, including properties like logID, userID, accessTime, accessedResource, and actionTaken.", "Schema": {"properties": {"logID": {"title": "LogID", "type": "string"}, "userID": {"title": "UserID", "type": "string"}, "accessTime": {"format": "date-time", "title": "AccessTime", "type": "string"}, "accessedResource": {"title": "AccessedResource", "type": "string"}, "actionTaken": {"title": "ActionTaken", "type": "string"}}, "required": ["logID", "userID", "accessTime", "accessedResource", "actionTaken"], "title": "UserAccessLog", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Generate a JSON object for documenting network incidents, including properties like incidentID, detectedBy, incidentTime, severityLevel, and resolutionStatus.", "Schema": {"properties": {"incidentID": {"title": "IncidentID", "type": "string"}, "detectedBy": {"title": "DetectedBy", "type": "string"}, "incidentTime": {"format": "date-time", "title": "IncidentTime", "type": "string"}, "severityLevel": {"title": "SeverityLevel", "type": "string", "enum": ["Informational", "Warning", "Minor", "Major", "Critical"]}, "resolutionStatus": {"title": "ResolutionStatus", "type": "string", "enum": ["Unresolved", "In Progress", "Resolved"]}}, "required": ["incidentID", "detectedBy", "incidentTime", "severityLevel", "resolutionStatus"], "title": "NetworkIncident", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for storing insurance policy details, including policy number, policyholder's name, coverage details, and premium amount.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "policyHolderName": {"title": "Policyholder's Name", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "object", "properties": {"coverageType": {"title": "Coverage Type", "type": "string"}, "coverageAmount": {"title": "Coverage Amount", "type": "number"}}, "required": ["coverageType", "coverageAmount"]}, "premiumAmount": {"title": "Premium Amount", "type": "number"}}, "required": ["policyNumber", "policyHolderName", "coverageDetails", "premiumAmount"], "title": "InsurancePolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Develop a JSON schema for a claim report, including claim ID, date of loss, claimant details, and estimated loss amount.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "dateOfLoss": {"title": "Date of Loss", "type": "string", "format": "date"}, "claimantDetails": {"title": "Claimant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}}, "required": ["name", "contactInfo"]}, "estimatedLossAmount": {"title": "Estimated Loss Amount", "type": "number"}}, "required": ["claimID", "dateOfLoss", "claimantDetails", "estimatedLossAmount"], "title": "ClaimReport", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for an insurance quote request, including customer details, requested coverage, and vehicle information for auto insurance.", "Schema": {"properties": {"customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["name", "address"]}, "requestedCoverage": {"title": "Requested Coverage", "type": "object", "properties": {"coverageType": {"title": "Coverage Type", "type": "string"}, "coverageAmount": {"title": "Coverage Amount", "type": "number"}}, "required": ["coverageType", "coverageAmount"]}, "vehicleInformation": {"title": "Vehicle Information", "type": "object", "properties": {"make": {"title": "Make", "type": "string"}, "model": {"title": "Model", "type": "string"}, "year": {"title": "Year", "type": "integer"}}, "required": ["make", "model", "year"]}}, "required": ["customerDetails", "requestedCoverage", "vehicleInformation"], "title": "InsuranceQuoteRequest", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON object for an underwriting decision, including application ID, risk assessment, and underwriting decision with justification.", "Schema": {"properties": {"applicationID": {"title": "Application ID", "type": "string"}, "riskAssessment": {"title": "Risk Assessment", "type": "object", "properties": {"riskLevel": {"title": "Risk Level", "type": "string", "enum": ["Low", "Medium", "High"]}, "riskFactors": {"title": "Risk Factors", "type": "array", "items": {"type": "string"}}}, "required": ["riskLevel", "riskFactors"]}, "underwritingDecision": {"title": "Underwriting Decision", "type": "object", "properties": {"decision": {"title": "Decision", "type": "string", "enum": ["Accepted", "Rejected", "Review"]}, "justification": {"title": "Justification", "type": "string"}}, "required": ["decision", "justification"]}}, "required": ["applicationID", "riskAssessment", "underwritingDecision"], "title": "UnderwritingDecision", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object for an insurance renewal notice, including policy number, renewal date, and updated premium details.", "Schema": {"properties": {"policyNumber": {"title": "Policy Number", "type": "string"}, "renewalDate": {"title": "Renewal Date", "type": "string", "format": "date"}, "updatedPremiumDetails": {"title": "Updated Premium Details", "type": "object", "properties": {"newPremiumAmount": {"title": "New Premium Amount", "type": "number"}, "changeReason": {"title": "Change Reason", "type": "string"}}, "required": ["newPremiumAmount", "changeReason"]}}, "required": ["policyNumber", "renewalDate", "updatedPremiumDetails"], "title": "InsuranceRenewalNotice", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Create a JSON object for IT consulting service inquiry, including properties like companyName, contactPerson, serviceRequired, and estimatedBudget.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "contactPerson": {"title": "Contact Person", "type": "string"}, "serviceRequired": {"title": "Service Required", "type": "string"}, "estimatedBudget": {"title": "Estimated Budget", "type": "number"}}, "required": ["companyName", "contactPerson", "serviceRequired", "estimatedBudget"], "title": "ITConsultingInquiry", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Develop a JSON object for software upgrade request, including properties like softwareName, currentVersion, targetVersion, and urgency.", "Schema": {"properties": {"softwareName": {"title": "Software Name", "type": "string"}, "currentVersion": {"title": "Current Version", "type": "string"}, "targetVersion": {"title": "Target Version", "type": "string"}, "urgency": {"title": "Urgency", "type": "string", "enum": ["Low", "Medium", "High"]}}, "required": ["softwareName", "currentVersion", "targetVersion", "urgency"], "title": "SoftwareUpgradeRequest", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Construct a JSON object for a cybersecurity incident report, including properties like incidentType, affectedSystems, severity, and incidentDescription.", "Schema": {"properties": {"incidentType": {"title": "Incident Type", "type": "string"}, "affectedSystems": {"title": "Affected Systems", "type": "array", "items": {"type": "string"}}, "severity": {"title": "Severity", "type": "string", "enum": ["Low", "Medium", "High", "Critical"]}, "incidentDescription": {"title": "Incident Description", "type": "string"}}, "required": ["incidentType", "affectedSystems", "severity", "incidentDescription"], "title": "CybersecurityIncidentReport", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Design a JSON object for a cloud service subscription, including properties like subscriberName, serviceTier, subscriptionTerm, and paymentMethod.", "Schema": {"properties": {"subscriberName": {"title": "Subscriber Name", "type": "string"}, "serviceTier": {"title": "Service Tier", "type": "string"}, "subscriptionTerm": {"title": "Subscription Term", "type": "string", "enum": ["Monthly", "Quarterly", "Yearly"]}, "paymentMethod": {"title": "Payment Method", "type": "string"}}, "required": ["subscriberName", "serviceTier", "subscriptionTerm", "paymentMethod"], "title": "CloudServiceSubscription", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Generate a JSON object for a technical support ticket, including properties like ticketID, customerName, issueDescription, priority, and status.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["ticketID", "customerName", "issueDescription", "priority", "status"], "title": "TechnicalSupportTicket", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Reinsurance", "Task": "Create a JSON object for storing reinsurance contract details, including properties like contractNumber, insurer, reinsurer, coverageDetails, and effectiveDates.", "Schema": {"properties": {"contractNumber": {"title": "Contract Number", "type": "string"}, "insurer": {"title": "Insurer", "type": "string"}, "reinsurer": {"title": "Reinsurer", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "string"}, "effectiveDates": {"title": "Effective Dates", "type": "object", "properties": {"startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}}, "required": ["startDate", "endDate"]}}, "required": ["contractNumber", "insurer", "reinsurer", "coverageDetails", "effectiveDates"], "title": "ReinsuranceContract", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Reinsurance", "Task": "Develop a JSON schema for a reinsurance claim, including properties such as claimId, insuredEvent, dateOfLoss, claimAmount, and status.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "insuredEvent": {"title": "Insured Event", "type": "string"}, "dateOfLoss": {"format": "date", "title": "Date of Loss", "type": "string"}, "claimAmount": {"title": "Claim Amount", "type": "number"}, "status": {"title": "Status", "type": "string", "enum": ["Open", "Closed", "Under Investigation", "Settled"]}}, "required": ["claimId", "insuredEvent", "dateOfLoss", "claimAmount", "status"], "title": "ReinsuranceClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Reinsurance", "Task": "Construct a JSON object for reinsurance treaty information, including properties like treatyId, type, partiesInvolved, treatyTerms, and signatureDate.", "Schema": {"properties": {"treatyId": {"title": "Treaty ID", "type": "string"}, "type": {"title": "Type", "type": "string"}, "partiesInvolved": {"title": "Parties Involved", "type": "array", "items": {"type": "string"}}, "treatyTerms": {"title": "Treaty Terms", "type": "string"}, "signatureDate": {"format": "date", "title": "Signature Date", "type": "string"}}, "required": ["treatyId", "type", "partiesInvolved", "treatyTerms", "signatureDate"], "title": "ReinsuranceTreaty", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Reinsurance", "Task": "Design a JSON object for tracking reinsurance premiums, with properties such as premiumId, policyNumber, amount, paymentSchedule, and dueDates.", "Schema": {"properties": {"premiumId": {"title": "Premium ID", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "paymentSchedule": {"title": "Payment Schedule", "type": "string", "enum": ["Monthly", "Quarterly", "Semi-Annually", "Annually"]}, "dueDates": {"title": "Due Dates", "type": "array", "items": {"format": "date", "type": "string"}}}, "required": ["premiumId", "policyNumber", "amount", "paymentSchedule", "dueDates"], "title": "ReinsurancePremium", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Reinsurance", "Task": "Generate a JSON object for reinsurance policyholder details, including properties like holderId, name, contactInfo, policies, and riskProfile.", "Schema": {"properties": {"holderId": {"title": "Holder ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}}, "required": ["phone", "email"]}, "policies": {"title": "Policies", "type": "array", "items": {"type": "string"}}, "riskProfile": {"title": "Risk Profile", "type": "string"}}, "required": ["holderId", "name", "contactInfo", "policies", "riskProfile"], "title": "PolicyholderDetails", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Property & Casualty Insurance", "Task": "Create a JSON object for submitting a property insurance claim, including properties like claimantName, policyNumber, incidentDate, incidentDescription, and estimatedDamageCost.", "Schema": {"properties": {"claimantName": {"title": "Claimant Name", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "incidentDate": {"format": "date", "title": "Incident Date", "type": "string"}, "incidentDescription": {"title": "Incident Description", "type": "string"}, "estimatedDamageCost": {"title": "Estimated Damage Cost", "type": "number"}}, "required": ["claimantName", "policyNumber", "incidentDate", "incidentDescription", "estimatedDamageCost"], "title": "PropertyInsuranceClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Property & Casualty Insurance", "Task": "Develop a JSON object for a car insurance quote request, including properties like driverName, vehicleMake, vehicleModel, yearOfManufacture, and drivingHistory.", "Schema": {"properties": {"driverName": {"title": "Driver Name", "type": "string"}, "vehicleMake": {"title": "Vehicle Make", "type": "string"}, "vehicleModel": {"title": "Vehicle Model", "type": "string"}, "yearOfManufacture": {"title": "Year of Manufacture", "type": "integer"}, "drivingHistory": {"title": "Driving History", "type": "object", "properties": {"incidents": {"type": "array", "items": {"type": "string"}}, "yearsLicensed": {"type": "integer"}}}}, "required": ["driverName", "vehicleMake", "vehicleModel", "yearOfManufacture", "drivingHistory"], "title": "CarInsuranceQuote", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Property & Casualty Insurance", "Task": "Construct a JSON object for a home insurance policy renewal, including properties like policyHolderName, policyNumber, propertyAddress, renewalDate, and coverageDetails.", "Schema": {"properties": {"policyHolderName": {"title": "Policy Holder Name", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "propertyAddress": {"title": "Property Address", "type": "string"}, "renewalDate": {"format": "date", "title": "Renewal Date", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "object", "properties": {"coverageType": {"type": "string"}, "coverageAmount": {"type": "number"}}}}, "required": ["policyHolderName", "policyNumber", "propertyAddress", "renewalDate", "coverageDetails"], "title": "HomeInsuranceRenewal", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Property & Casualty Insurance", "Task": "Design a JSON object for reporting a vehicle theft claim, including properties like claimantName, policyNumber, dateOfTheft, lastKnownLocation, and policeReportNumber.", "Schema": {"properties": {"claimantName": {"title": "Claimant Name", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "dateOfTheft": {"format": "date", "title": "Date of Theft", "type": "string"}, "lastKnownLocation": {"title": "Last Known Location", "type": "string"}, "policeReportNumber": {"title": "Police Report Number", "type": "string"}}, "required": ["claimantName", "policyNumber", "dateOfTheft", "lastKnownLocation", "policeReportNumber"], "title": "VehicleTheftClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Property & Casualty Insurance", "Task": "Generate a JSON object for a liability insurance claim, including properties like claimantName, policyNumber, incidentDate, liabilityDetails, and claimAmount.", "Schema": {"properties": {"claimantName": {"title": "Claimant Name", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "incidentDate": {"format": "date", "title": "Incident Date", "type": "string"}, "liabilityDetails": {"title": "Liability Details", "type": "string"}, "claimAmount": {"title": "Claim Amount", "type": "number"}}, "required": ["claimantName", "policyNumber", "incidentDate", "liabilityDetails", "claimAmount"], "title": "LiabilityInsuranceClaim", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Create a JSON object for a customer support ticket, including properties like ticketID, customerName, issueDescription, priority, and status.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High", "Urgent"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["ticketID", "customerName", "issueDescription", "priority", "status"], "title": "CustomerSupportTicket", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Develop a JSON object for IT asset management, detailing properties such as assetID, assetType, manufacturer, purchaseDate, and warrantyExpiry.", "Schema": {"properties": {"assetID": {"title": "Asset ID", "type": "string"}, "assetType": {"title": "Asset Type", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "purchaseDate": {"format": "date", "title": "Purchase Date", "type": "string"}, "warrantyExpiry": {"format": "date", "title": "Warranty Expiry", "type": "string"}}, "required": ["assetID", "assetType", "manufacturer", "purchaseDate", "warrantyExpiry"], "title": "ITAssetManagement", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Construct a JSON object for tracking software licenses, including properties like licenseKey, softwareName, activationDate, expirationDate, and assignedUser.", "Schema": {"properties": {"licenseKey": {"title": "License Key", "type": "string"}, "softwareName": {"title": "Software Name", "type": "string"}, "activationDate": {"format": "date", "title": "Activation Date", "type": "string"}, "expirationDate": {"format": "date", "title": "Expiration Date", "type": "string"}, "assignedUser": {"title": "Assigned User", "type": "string"}}, "required": ["licenseKey", "softwareName", "activationDate", "expirationDate", "assignedUser"], "title": "SoftwareLicenseTracking", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Design a JSON object for a service level agreement (SLA) metric, with properties such as metricID, description, targetValue, currentValue, and status.", "Schema": {"properties": {"metricID": {"title": "Metric ID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "targetValue": {"title": "Target Value", "type": "number"}, "currentValue": {"title": "Current Value", "type": "number"}, "status": {"title": "Status", "type": "string", "enum": ["On Track", "At Risk", "Off Track"]}}, "required": ["metricID", "description", "targetValue", "currentValue", "status"], "title": "SLAMetric", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Generate a JSON object for an IT incident report, including properties like reportID, reportedBy, incidentType, dateReported, and resolutionDetails.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "reportedBy": {"title": "Reported By", "type": "string"}, "incidentType": {"title": "Incident Type", "type": "string"}, "dateReported": {"format": "date-time", "title": "Date Reported", "type": "string"}, "resolutionDetails": {"title": "Resolution Details", "type": "string"}}, "required": ["reportID", "reportedBy", "incidentType", "dateReported", "resolutionDetails"], "title": "ITIncidentReport", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Create a JSON object for a data center asset inventory, including properties like assetID, assetType, location, and status.", "Schema": {"properties": {"assetID": {"title": "Asset ID", "type": "string"}, "assetType": {"title": "Asset Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "status": {"title": "Status", "type": "string"}}, "required": ["assetID", "assetType", "location", "status"], "title": "DataCenterAsset", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Develop a JSON schema for cloud storage usage, detailing properties such as userID, storagePlan, currentUsage, and maxCapacity.", "Schema": {"properties": {"userID": {"title": "User ID", "type": "string"}, "storagePlan": {"title": "Storage Plan", "type": "string"}, "currentUsage": {"title": "Current Usage", "type": "number"}, "maxCapacity": {"title": "Max Capacity", "type": "number"}}, "required": ["userID", "storagePlan", "currentUsage", "maxCapacity"], "title": "CloudStorageUsage", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Construct a JSON object for tracking web hosting service subscriptions, including properties like subscriptionID, domainName, hostingPlan, and renewalDate.", "Schema": {"properties": {"subscriptionID": {"title": "Subscription ID", "type": "string"}, "domainName": {"title": "Domain Name", "type": "string"}, "hostingPlan": {"title": "Hosting Plan", "type": "string"}, "renewalDate": {"format": "date", "title": "Renewal Date", "type": "string"}}, "required": ["subscriptionID", "domainName", "hostingPlan", "renewalDate"], "title": "WebHostingSubscription", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Design a JSON object for a cloud networking configuration, with properties such as networkID, region, bandwidthLimit, and connectedServices.", "Schema": {"properties": {"networkID": {"title": "Network ID", "type": "string"}, "region": {"title": "Region", "type": "string"}, "bandwidthLimit": {"title": "Bandwidth Limit", "type": "number"}, "connectedServices": {"items": {"type": "string"}, "title": "Connected Services", "type": "array"}}, "required": ["networkID", "region", "bandwidthLimit", "connectedServices"], "title": "CloudNetworkingConfig", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Generate a JSON object representing an IT support ticket, including properties like ticketID, issueDescription, priority, and resolutionStatus.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["ticketID", "issueDescription", "priority", "resolutionStatus"], "title": "ITSupportTicket", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Create a JSON object for user authentication, including properties like username, password, and twoFactorEnabled.", "Schema": {"properties": {"username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}, "twoFactorEnabled": {"title": "TwoFactorEnabled", "type": "boolean"}}, "required": ["username", "password"], "title": "UserAuthentication", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Construct a JSON object for a server status report, including properties like serverId, status, uptime, and lastMaintenanceDate.", "Schema": {"properties": {"serverId": {"title": "ServerId", "type": "string"}, "status": {"title": "Status", "type": "string"}, "uptime": {"title": "Uptime", "type": "number"}, "lastMaintenanceDate": {"format": "date-time", "title": "LastMaintenanceDate", "type": "string"}}, "required": ["serverId", "status", "uptime"], "title": "ServerStatusReport", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Design a JSON object for tracking software license usage, including properties like licenseKey, assignedTo, expirationDate, and isActive.", "Schema": {"properties": {"licenseKey": {"title": "LicenseKey", "type": "string"}, "assignedTo": {"title": "AssignedTo", "type": "string"}, "expirationDate": {"format": "date", "title": "ExpirationDate", "type": "string"}, "isActive": {"title": "IsActive", "type": "boolean"}}, "required": ["licenseKey", "assignedTo", "expirationDate"], "title": "SoftwareLicenseUsage", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Generate a JSON object for a customer support ticket, including properties like ticketId, customerName, issueDescription, priority, and resolutionStatus.", "Schema": {"properties": {"ticketId": {"title": "TicketId", "type": "string"}, "customerName": {"title": "CustomerName", "type": "string"}, "issueDescription": {"title": "IssueDescription", "type": "string"}, "priority": {"title": "Priority", "type": "string"}, "resolutionStatus": {"title": "ResolutionStatus", "type": "string"}}, "required": ["ticketId", "customerName", "issueDescription", "priority"], "title": "CustomerSupportTicket", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Create a JSON object for a network traffic log, including properties like sourceIP, destinationIP, bytesTransferred, and timestamp.", "Schema": {"properties": {"sourceIP": {"title": "SourceIP", "type": "string"}, "destinationIP": {"title": "DestinationIP", "type": "string"}, "bytesTransferred": {"title": "BytesTransferred", "type": "integer"}, "timestamp": {"format": "date-time", "title": "Timestamp", "type": "string"}}, "required": ["sourceIP", "destinationIP", "bytesTransferred", "timestamp"], "title": "NetworkTrafficLog", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Create a JSON object for a user profile in an application software, including properties like username, email, and role.", "Schema": {"properties": {"username": {"title": "Username", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}, "role": {"title": "Role", "type": "string", "enum": ["admin", "user", "guest"]}}, "required": ["username", "email", "role"], "title": "UserProfile", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Develop a JSON object for a software license, including properties such as licenseKey, issueDate, and expirationDate.", "Schema": {"properties": {"licenseKey": {"title": "LicenseKey", "type": "string"}, "issueDate": {"format": "date", "title": "IssueDate", "type": "string"}, "expirationDate": {"format": "date", "title": "ExpirationDate", "type": "string"}}, "required": ["licenseKey", "issueDate", "expirationDate"], "title": "SoftwareLicense", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Construct a JSON object for a bug report, including properties like reportID, description, severity, and status.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "description": {"title": "Description", "type": "string"}, "severity": {"title": "Severity", "type": "string", "enum": ["low", "medium", "high", "critical"]}, "status": {"title": "Status", "type": "string", "enum": ["open", "in progress", "resolved", "closed"]}}, "required": ["reportID", "description", "severity", "status"], "title": "BugReport", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Design a JSON object for a project task, including properties such as taskID, title, assignee, dueDate, and completionStatus.", "Schema": {"properties": {"taskID": {"title": "TaskID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "assignee": {"title": "Assignee", "type": "string"}, "dueDate": {"format": "date", "title": "DueDate", "type": "string"}, "completionStatus": {"title": "CompletionStatus", "type": "string", "enum": ["not started", "in progress", "completed"]}}, "required": ["taskID", "title", "assignee", "dueDate", "completionStatus"], "title": "ProjectTask", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Generate a JSON object for a software configuration setting, including properties like settingName, value, and lastUpdated.", "Schema": {"properties": {"settingName": {"title": "SettingName", "type": "string"}, "value": {"title": "Value", "type": "string"}, "lastUpdated": {"format": "date-time", "title": "LastUpdated", "type": "string"}}, "required": ["settingName", "value", "lastUpdated"], "title": "SoftwareConfiguration", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Create a JSON object for storing user internet service preferences, including properties like serviceType, bandwidthLimit, and contractLength.", "Schema": {"properties": {"serviceType": {"title": "Service Type", "type": "string", "enum": ["DSL", "Cable", "Fiber", "Satellite"]}, "bandwidthLimit": {"title": "Bandwidth Limit", "type": "integer", "minimum": 0}, "contractLength": {"title": "Contract Length", "type": "integer", "description": "Length of the contract in months"}}, "required": ["serviceType", "bandwidthLimit", "contractLength"], "title": "UserInternetServicePreferences", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Develop a JSON schema for an API query to retrieve server uptime statistics, including properties like serverId, startDate, and endDate.", "Schema": {"properties": {"serverId": {"title": "Server ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date-time"}, "endDate": {"title": "End Date", "type": "string", "format": "date-time"}}, "required": ["serverId", "startDate", "endDate"], "title": "ServerUptimeQuery", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Construct a JSON object for a cloud storage configuration, including properties like storageSize, redundancyType, and accessLevel.", "Schema": {"properties": {"storageSize": {"title": "Storage Size", "type": "integer", "description": "Size in gigabytes"}, "redundancyType": {"title": "Redundancy Type", "type": "string", "enum": ["Local", "Geo", "Zone"]}, "accessLevel": {"title": "Access Level", "type": "string", "enum": ["Private", "Public-read", "Public-read-write"]}}, "required": ["storageSize", "redundancyType", "accessLevel"], "title": "CloudStorageConfiguration", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Design a JSON object for tracking software license usage, including properties like licenseKey, assignedUser, and expirationDate.", "Schema": {"properties": {"licenseKey": {"title": "License Key", "type": "string"}, "assignedUser": {"title": "Assigned User", "type": "string"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}}, "required": ["licenseKey", "assignedUser", "expirationDate"], "title": "SoftwareLicenseUsage", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "IT Services", "Task": "Generate a JSON object representing a network security policy, including properties like policyName, firewallRules, and vpnRequirements.", "Schema": {"properties": {"policyName": {"title": "Policy Name", "type": "string"}, "firewallRules": {"title": "Firewall Rules", "type": "array", "items": {"type": "object", "properties": {"ruleId": {"title": "Rule ID", "type": "string"}, "action": {"title": "Action", "type": "string", "enum": ["Allow", "Deny", "Limit"]}, "protocol": {"title": "Protocol", "type": "string"}, "portRange": {"title": "Port Range", "type": "string"}}, "required": ["ruleId", "action", "protocol", "portRange"]}}, "vpnRequirements": {"title": "VPN Requirements", "type": "object", "properties": {"vpnType": {"title": "VPN Type", "type": "string"}, "encryptionStandards": {"title": "Encryption Standards", "type": "string"}}, "required": ["vpnType", "encryptionStandards"]}}, "required": ["policyName", "firewallRules", "vpnRequirements"], "title": "NetworkSecurityPolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Create a JSON object for storing reinsurance contract details, including properties like contractNumber, insurer, reinsurer, and coverage details.", "Schema": {"properties": {"contractNumber": {"title": "Contract Number", "type": "string"}, "insurer": {"title": "Insurer", "type": "string"}, "reinsurer": {"title": "Reinsurer", "type": "string"}, "coverageDetails": {"title": "Coverage Details", "type": "object", "properties": {"coverageType": {"title": "Coverage Type", "type": "string"}, "coverageLimit": {"title": "Coverage Limit", "type": "number"}}, "required": ["coverageType", "coverageLimit"]}}, "required": ["contractNumber", "insurer", "reinsurer", "coverageDetails"], "title": "ReinsuranceContract", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Develop a JSON object for an insurance claim, including properties like claimId, policyNumber, claimantDetails, incidentDetails, and claimStatus.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "policyNumber": {"title": "Policy Number", "type": "string"}, "claimantDetails": {"title": "Claimant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}}, "required": ["name", "contactInfo"]}, "incidentDetails": {"title": "Incident Details", "type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "description": {"title": "Description", "type": "string"}}, "required": ["date", "description"]}, "claimStatus": {"title": "Claim Status", "type": "string"}}, "required": ["claimId", "policyNumber", "claimantDetails", "incidentDetails", "claimStatus"], "title": "InsuranceClaim", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Construct a JSON object for an insurance policy, including properties like policyId, insuredEntity, coverageTerms, premium, and beneficiaries.", "Schema": {"properties": {"policyId": {"title": "Policy ID", "type": "string"}, "insuredEntity": {"title": "Insured Entity", "type": "string"}, "coverageTerms": {"title": "Coverage Terms", "type": "object", "properties": {"coverageType": {"title": "Coverage Type", "type": "string"}, "coverageAmount": {"title": "Coverage Amount", "type": "number"}}, "required": ["coverageType", "coverageAmount"]}, "premium": {"title": "Premium", "type": "number"}, "beneficiaries": {"title": "Beneficiaries", "type": "array", "items": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "relationship": {"title": "Relationship", "type": "string"}}, "required": ["name", "relationship"]}}}, "required": ["policyId", "insuredEntity", "coverageTerms", "premium", "beneficiaries"], "title": "InsurancePolicy", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Design a JSON object for an underwriting decision, including properties like applicationId, applicantDetails, riskAssessment, and underwritingDecision.", "Schema": {"properties": {"applicationId": {"title": "Application ID", "type": "string"}, "applicantDetails": {"title": "Applicant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "age": {"title": "Age", "type": "integer"}, "healthInfo": {"title": "Health Info", "type": "object", "properties": {"smoker": {"title": "Smoker", "type": "boolean"}, "preExistingConditions": {"title": "Pre-existing Conditions", "type": "array", "items": {"type": "string"}}}, "required": ["smoker", "preExistingConditions"]}}, "required": ["name", "age", "healthInfo"]}, "riskAssessment": {"title": "Risk Assessment", "type": "string"}, "underwritingDecision": {"title": "Underwriting Decision", "type": "string"}}, "required": ["applicationId", "applicantDetails", "riskAssessment", "underwritingDecision"], "title": "UnderwritingDecision", "type": "object"}}
{"Category": "Insurance", "SubCategory": "Insurance", "Task": "Generate a JSON object for an insurance premium calculation, including properties like policyId, basePremium, riskFactors, and totalPremium.", "Schema": {"properties": {"policyId": {"title": "Policy ID", "type": "string"}, "basePremium": {"title": "Base Premium", "type": "number"}, "riskFactors": {"title": "Risk Factors", "type": "object", "properties": {"age": {"title": "Age", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "vehicleType": {"title": "Vehicle Type", "type": "string"}}, "required": ["age", "location", "vehicleType"]}, "totalPremium": {"title": "Total Premium", "type": "number"}}, "required": ["policyId", "basePremium", "riskFactors", "totalPremium"], "title": "InsurancePremiumCalculation", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Create a JSON object for a user authentication request, including properties like username, password, and twoFactorAuthCode.", "Schema": {"properties": {"username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string", "format": "password"}, "twoFactorAuthCode": {"title": "TwoFactorAuthCode", "type": "string"}}, "required": ["username", "password"], "title": "UserAuthenticationRequest", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Construct a JSON object for a software error report, including properties such as errorCode, errorMessage, and timestamp.", "Schema": {"properties": {"errorCode": {"title": "ErrorCode", "type": "integer"}, "errorMessage": {"title": "ErrorMessage", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["errorCode", "errorMessage", "timestamp"], "title": "SoftwareErrorReport", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Design a JSON object for a feature toggle, including properties like featureName, isEnabled, and rolloutPercentage.", "Schema": {"properties": {"featureName": {"title": "FeatureName", "type": "string"}, "isEnabled": {"title": "IsEnabled", "type": "boolean"}, "rolloutPercentage": {"title": "RolloutPercentage", "type": "integer", "minimum": 0, "maximum": 100}}, "required": ["featureName", "isEnabled"], "title": "FeatureToggle", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Generate a JSON object for a software license key, including properties such as licenseKey, owner, and expirationDate.", "Schema": {"properties": {"licenseKey": {"title": "LicenseKey", "type": "string"}, "owner": {"title": "Owner", "type": "string"}, "expirationDate": {"title": "ExpirationDate", "type": "string", "format": "date"}}, "required": ["licenseKey", "owner"], "title": "SoftwareLicenseKey", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Formulate a JSON object for a user's software preferences, including properties like theme, notificationsEnabled, and language.", "Schema": {"properties": {"theme": {"title": "Theme", "type": "string", "enum": ["light", "dark", "system"]}, "notificationsEnabled": {"title": "NotificationsEnabled", "type": "boolean"}, "language": {"title": "Language", "type": "string"}}, "required": ["theme", "notificationsEnabled"], "title": "UserSoftwarePreferences", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Create a JSON object for a customer support ticket system, including properties like ticketID, customerName, issueDescription, priority, and status.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High", "Urgent"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["ticketID", "customerName", "issueDescription", "priority", "status"], "title": "CustomerSupportTicket", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Develop a JSON object for a project management tool, including properties like projectID, projectName, startDate, endDate, and assignedTeamMembers.", "Schema": {"properties": {"projectID": {"title": "Project ID", "type": "string"}, "projectName": {"title": "Project Name", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "assignedTeamMembers": {"title": "Assigned Team Members", "type": "array", "items": {"type": "string"}}}, "required": ["projectID", "projectName", "startDate", "endDate", "assignedTeamMembers"], "title": "ProjectManagement", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Construct a JSON object for a software licensing record, including properties like licenseKey, softwareName, licenseType, issueDate, and expirationDate.", "Schema": {"properties": {"licenseKey": {"title": "License Key", "type": "string"}, "softwareName": {"title": "Software Name", "type": "string"}, "licenseType": {"title": "License Type", "type": "string"}, "issueDate": {"title": "Issue Date", "type": "string", "format": "date"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}}, "required": ["licenseKey", "softwareName", "licenseType", "issueDate", "expirationDate"], "title": "SoftwareLicensingRecord", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Design a JSON object for a user profile in a SaaS application, including properties like userID, username, email, role, and lastLogin.", "Schema": {"properties": {"userID": {"title": "User ID", "type": "string"}, "username": {"title": "Username", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "role": {"title": "Role", "type": "string"}, "lastLogin": {"title": "Last Login", "type": "string", "format": "date-time"}}, "required": ["userID", "username", "email", "role", "lastLogin"], "title": "UserProfile", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Generate a JSON object for tracking software version updates, including properties like versionNumber, releaseDate, changes, and updateURL.", "Schema": {"properties": {"versionNumber": {"title": "Version Number", "type": "string"}, "releaseDate": {"title": "Release Date", "type": "string", "format": "date"}, "changes": {"title": "Changes", "type": "array", "items": {"type": "string"}}, "updateURL": {"title": "Update URL", "type": "string", "format": "uri"}}, "required": ["versionNumber", "releaseDate", "changes", "updateURL"], "title": "SoftwareVersionUpdate", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Create a JSON object for a user query to retrieve system software details, including properties like softwareName, version, and licenseKey.", "Schema": {"properties": {"softwareName": {"title": "Software Name", "type": "string"}, "version": {"title": "Version", "type": "string"}, "licenseKey": {"title": "License Key", "type": "string"}}, "required": ["softwareName", "version", "licenseKey"], "title": "SystemSoftwareDetails", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Develop a JSON object for an API call to check database management software updates, including properties like currentVersion, updateAvailable, and releaseNotes.", "Schema": {"properties": {"currentVersion": {"title": "Current Version", "type": "string"}, "updateAvailable": {"title": "Update Available", "type": "boolean"}, "releaseNotes": {"title": "Release Notes", "type": "string"}}, "required": ["currentVersion", "updateAvailable"], "title": "DatabaseSoftwareUpdateCheck", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Construct a JSON object for a user query to list all installed software applications, including properties like applicationList and totalCount.", "Schema": {"properties": {"applicationList": {"title": "Application List", "type": "array", "items": {"type": "object", "properties": {"appName": {"title": "App Name", "type": "string"}, "appVersion": {"title": "App Version", "type": "string"}}, "required": ["appName", "appVersion"]}}, "totalCount": {"title": "Total Count", "type": "integer"}}, "required": ["applicationList", "totalCount"], "title": "InstalledSoftwareList", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Design a JSON object for a user query to retrieve license information for a specific software, including properties like softwareId, licenseType, and expirationDate.", "Schema": {"properties": {"softwareId": {"title": "Software ID", "type": "string"}, "licenseType": {"title": "License Type", "type": "string"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}}, "required": ["softwareId", "licenseType", "expirationDate"], "title": "SoftwareLicenseInfo", "type": "object"}}
{"Category": "Software & Services", "SubCategory": "Software", "Task": "Generate a JSON object for an API call to log a new software installation, including properties like installerId, softwareName, installationDate, and systemId.", "Schema": {"properties": {"installerId": {"title": "Installer ID", "type": "string"}, "softwareName": {"title": "Software Name", "type": "string"}, "installationDate": {"title": "Installation Date", "type": "string", "format": "date-time"}, "systemId": {"title": "System ID", "type": "string"}}, "required": ["installerId", "softwareName", "installationDate", "systemId"], "title": "NewSoftwareInstallationLog", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for querying available electronic components, with properties like componentID, componentName, and specifications.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"size": {"title": "Size", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "power": {"title": "Power", "type": "string"}}, "required": ["size", "weight", "power"]}}, "required": ["componentID", "componentName", "specifications"], "title": "ElectronicComponentQuery", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON object for adding a new electronic component to inventory, including properties like componentID, componentName, quantity, and supplier.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["componentID", "componentName", "quantity", "supplier"], "title": "NewComponentInventory", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for updating the price of an electronic component, with properties such as componentID, newPrice, and effectiveDate.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "newPrice": {"title": "New Price", "type": "number", "format": "float"}, "effectiveDate": {"title": "Effective Date", "type": "string", "format": "date"}}, "required": ["componentID", "newPrice", "effectiveDate"], "title": "ComponentPriceUpdate", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for tracking the shipment status of electronic components, including properties like shipmentID, componentID, status, and estimatedDelivery.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "componentID": {"title": "Component ID", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["ordered", "shipped", "in transit", "delivered", "delayed"]}, "estimatedDelivery": {"title": "Estimated Delivery", "type": "string", "format": "date"}}, "required": ["shipmentID", "componentID", "status", "estimatedDelivery"], "title": "ShipmentStatusTracker", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for a warranty claim on an electronic component, with properties like warrantyID, componentID, issueDescription, and claimDate.", "Schema": {"properties": {"warrantyID": {"title": "Warranty ID", "type": "string"}, "componentID": {"title": "Component ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimDate": {"title": "Claim Date", "type": "string", "format": "date"}}, "required": ["warrantyID", "componentID", "issueDescription", "claimDate"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Create a JSON object for storing router configurations, including properties like model, firmwareVersion, and ipConfig.", "Schema": {"properties": {"model": {"title": "Model", "type": "string"}, "firmwareVersion": {"title": "FirmwareVersion", "type": "string"}, "ipConfig": {"title": "IPConfig", "type": "object", "properties": {"ipAddress": {"title": "IPAddress", "type": "string", "format": "ipv4"}, "subnetMask": {"title": "SubnetMask", "type": "string", "format": "ipv4"}, "gateway": {"title": "Gateway", "type": "string", "format": "ipv4"}}, "required": ["ipAddress", "subnetMask", "gateway"]}}, "required": ["model", "firmwareVersion", "ipConfig"], "title": "RouterConfiguration", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Develop a JSON object for a network switch inventory, including properties like serialNumber, portCount, and location.", "Schema": {"properties": {"serialNumber": {"title": "SerialNumber", "type": "string"}, "portCount": {"title": "PortCount", "type": "integer"}, "location": {"title": "Location", "type": "string"}}, "required": ["serialNumber", "portCount", "location"], "title": "NetworkSwitchInventory", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Construct a JSON object representing a wireless access point, including properties like ssid, securityProtocol, and bandwidth.", "Schema": {"properties": {"ssid": {"title": "SSID", "type": "string"}, "securityProtocol": {"title": "SecurityProtocol", "type": "string"}, "bandwidth": {"title": "Bandwidth", "type": "string"}}, "required": ["ssid", "securityProtocol", "bandwidth"], "title": "WirelessAccessPoint", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Design a JSON object for a server's hardware specifications, including properties such as cpuModel, memoryCapacity, and storageCapacity.", "Schema": {"properties": {"cpuModel": {"title": "CPUModel", "type": "string"}, "memoryCapacity": {"title": "MemoryCapacity", "type": "string"}, "storageCapacity": {"title": "StorageCapacity", "type": "string"}}, "required": ["cpuModel", "memoryCapacity", "storageCapacity"], "title": "ServerHardwareSpecifications", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Generate a JSON object representing a mobile device's details, including properties like deviceId, operatingSystem, and batteryStatus.", "Schema": {"properties": {"deviceId": {"title": "DeviceID", "type": "string"}, "operatingSystem": {"title": "OperatingSystem", "type": "string"}, "batteryStatus": {"title": "BatteryStatus", "type": "string"}}, "required": ["deviceId", "operatingSystem", "batteryStatus"], "title": "MobileDeviceDetails", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Create a JSON object for storing router configurations, including properties like model, firmwareVersion, ipConfig, and supportedProtocols.", "Schema": {"properties": {"model": {"title": "Model", "type": "string"}, "firmwareVersion": {"title": "FirmwareVersion", "type": "string"}, "ipConfig": {"title": "IPConfig", "type": "object", "properties": {"ipAddress": {"title": "IPAddress", "type": "string", "format": "ipv4"}, "subnetMask": {"title": "SubnetMask", "type": "string", "format": "ipv4"}, "gateway": {"title": "Gateway", "type": "string", "format": "ipv4"}}, "required": ["ipAddress", "subnetMask", "gateway"]}, "supportedProtocols": {"title": "SupportedProtocols", "type": "array", "items": {"type": "string"}}}, "required": ["model", "firmwareVersion", "ipConfig", "supportedProtocols"], "title": "RouterConfiguration", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Develop a JSON object for a telephone system, including properties like serialNumber, manufacturer, supportedFeatures, and installationDate.", "Schema": {"properties": {"serialNumber": {"title": "SerialNumber", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}, "supportedFeatures": {"title": "SupportedFeatures", "type": "array", "items": {"type": "string"}}, "installationDate": {"title": "InstallationDate", "type": "string", "format": "date"}}, "required": ["serialNumber", "manufacturer", "supportedFeatures", "installationDate"], "title": "TelephoneSystem", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Construct a JSON object representing a switchboard's operational data, including properties like uptime, activeConnections, errorRate, and maintenanceSchedule.", "Schema": {"properties": {"uptime": {"title": "Uptime", "type": "string"}, "activeConnections": {"title": "ActiveConnections", "type": "integer"}, "errorRate": {"title": "ErrorRate", "type": "number"}, "maintenanceSchedule": {"title": "MaintenanceSchedule", "type": "object", "properties": {"lastMaintenance": {"title": "LastMaintenance", "type": "string", "format": "date-time"}, "nextMaintenance": {"title": "NextMaintenance", "type": "string", "format": "date-time"}}, "required": ["lastMaintenance", "nextMaintenance"]}}, "required": ["uptime", "activeConnections", "errorRate", "maintenanceSchedule"], "title": "SwitchboardOperationalData", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Design a JSON object for tracking WAN performance metrics, including properties such as networkId, latency, packetLoss, and bandwidthUsage.", "Schema": {"properties": {"networkId": {"title": "NetworkID", "type": "string"}, "latency": {"title": "Latency", "type": "number", "description": "Measured in milliseconds"}, "packetLoss": {"title": "PacketLoss", "type": "number", "description": "Measured in percentage"}, "bandwidthUsage": {"title": "BandwidthUsage", "type": "object", "properties": {"upload": {"title": "Upload", "type": "number", "description": "Measured in Mbps"}, "download": {"title": "Download", "type": "number", "description": "Measured in Mbps"}}, "required": ["upload", "download"]}}, "required": ["networkId", "latency", "packetLoss", "bandwidthUsage"], "title": "WANPerformanceMetrics", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Communications Equipment", "Task": "Generate a JSON object for an exchange server's status report, including properties like serverId, activeUsers, queuedMessages, and serverLoad.", "Schema": {"properties": {"serverId": {"title": "ServerID", "type": "string"}, "activeUsers": {"title": "ActiveUsers", "type": "integer"}, "queuedMessages": {"title": "QueuedMessages", "type": "integer"}, "serverLoad": {"title": "ServerLoad", "type": "number", "description": "Measured in percentage"}}, "required": ["serverId", "activeUsers", "queuedMessages", "serverLoad"], "title": "ExchangeServerStatus", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Create a JSON object for a hardware inventory item, including properties like itemID, itemName, itemCategory, quantity, and supplier.", "Schema": {"properties": {"itemID": {"title": "Item ID", "type": "string"}, "itemName": {"title": "Item Name", "type": "string"}, "itemCategory": {"title": "Item Category", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["itemID", "itemName", "itemCategory", "quantity", "supplier"], "title": "HardwareInventoryItem", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Develop a JSON schema for a device configuration profile, including properties like deviceID, firmwareVersion, settings, and lastUpdated.", "Schema": {"properties": {"deviceID": {"title": "Device ID", "type": "string"}, "firmwareVersion": {"title": "Firmware Version", "type": "string"}, "settings": {"title": "Settings", "type": "object"}, "lastUpdated": {"title": "Last Updated", "type": "string", "format": "date-time"}}, "required": ["deviceID", "firmwareVersion", "settings", "lastUpdated"], "title": "DeviceConfigurationProfile", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Construct a JSON object for tracking software licenses, including properties like licenseKey, softwareName, purchaseDate, expirationDate, and assignedDevice.", "Schema": {"properties": {"licenseKey": {"title": "License Key", "type": "string"}, "softwareName": {"title": "Software Name", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}, "assignedDevice": {"title": "Assigned Device", "type": "string"}}, "required": ["licenseKey", "softwareName", "purchaseDate", "expirationDate", "assignedDevice"], "title": "SoftwareLicenseTracking", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Design a JSON object for a peripheral device's warranty information, including properties like warrantyID, deviceID, warrantyStartDate, warrantyEndDate, and terms.", "Schema": {"properties": {"warrantyID": {"title": "Warranty ID", "type": "string"}, "deviceID": {"title": "Device ID", "type": "string"}, "warrantyStartDate": {"title": "Warranty Start Date", "type": "string", "format": "date"}, "warrantyEndDate": {"title": "Warranty End Date", "type": "string", "format": "date"}, "terms": {"title": "Terms", "type": "string"}}, "required": ["warrantyID", "deviceID", "warrantyStartDate", "warrantyEndDate", "terms"], "title": "PeripheralWarrantyInformation", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Generate a JSON object for a data center rack layout, including properties like rackID, location, units, powerConsumption, and coolingRequirements.", "Schema": {"properties": {"rackID": {"title": "Rack ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "units": {"title": "Units", "type": "array", "items": {"type": "object", "properties": {"unitID": {"title": "Unit ID", "type": "string"}, "deviceType": {"title": "Device Type", "type": "string"}, "deviceID": {"title": "Device ID", "type": "string"}}, "required": ["unitID", "deviceType", "deviceID"]}}, "powerConsumption": {"title": "Power Consumption", "type": "number"}, "coolingRequirements": {"title": "Cooling Requirements", "type": "string"}}, "required": ["rackID", "location", "units", "powerConsumption", "coolingRequirements"], "title": "DataCenterRackLayout", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for storing electronic component specifications, including properties like componentID, componentName, specifications, and OEM compatibility.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"size": {"title": "Size", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "powerRequirements": {"title": "Power Requirements", "type": "string"}}, "required": ["size", "weight", "powerRequirements"]}, "OEMCompatibility": {"title": "OEM Compatibility", "type": "array", "items": {"type": "string"}}}, "required": ["componentID", "componentName", "specifications", "OEMCompatibility"], "title": "ElectronicComponentSpecs", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON schema for an API query to retrieve a list of compatible electronic components for a given OEM model.", "Schema": {"properties": {"OEMModel": {"title": "OEM Model", "type": "string"}, "CompatibleComponents": {"title": "Compatible Components", "type": "array", "items": {"type": "object", "properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}}, "required": ["componentID", "componentName"]}}}, "required": ["OEMModel", "CompatibleComponents"], "title": "OEMCompatibleComponentsQuery", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for logging quality assurance tests on electronic components, including properties like testID, componentID, testName, testResults, and testDate.", "Schema": {"properties": {"testID": {"title": "Test ID", "type": "string"}, "componentID": {"title": "Component ID", "type": "string"}, "testName": {"title": "Test Name", "type": "string"}, "testResults": {"title": "Test Results", "type": "string"}, "testDate": {"title": "Test Date", "type": "string", "format": "date"}}, "required": ["testID", "componentID", "testName", "testResults", "testDate"], "title": "QualityAssuranceTestLog", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for tracking inventory levels of electronic components, including properties such as componentID, componentName, quantityAvailable, and reorderThreshold.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["componentID", "componentName", "quantityAvailable", "reorderThreshold"], "title": "InventoryLevelTracker", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for a new product registration, including properties like productID, productName, releaseDate, and technicalSpecifications.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "releaseDate": {"title": "Release Date", "type": "string", "format": "date"}, "technicalSpecifications": {"title": "Technical Specifications", "type": "object", "properties": {"dimensions": {"title": "Dimensions", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "batteryLife": {"title": "Battery Life", "type": "string"}}, "required": ["dimensions", "weight", "batteryLife"]}}, "required": ["productID", "productName", "releaseDate", "technicalSpecifications"], "title": "ProductRegistration", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for storing electronic component specifications, including properties like componentID, componentName, specifications, and manufacturer details.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"size": {"title": "Size", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "powerRequirements": {"title": "Power Requirements", "type": "string"}}, "required": ["size", "weight", "powerRequirements"]}, "manufacturer": {"title": "Manufacturer", "type": "object", "properties": {"manufacturerID": {"title": "Manufacturer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["manufacturerID", "name", "contactInfo"]}}, "required": ["componentID", "componentName", "specifications", "manufacturer"], "title": "ElectronicComponent", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON object for tracking inventory of electronic parts, including properties like partNumber, quantityAvailable, location, and reorderThreshold.", "Schema": {"properties": {"partNumber": {"title": "Part Number", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["partNumber", "quantityAvailable", "location", "reorderThreshold"], "title": "InventoryItem", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for a product warranty registration, including properties like warrantyID, productModel, purchaseDate, and customerDetails.", "Schema": {"properties": {"warrantyID": {"title": "Warranty ID", "type": "string"}, "productModel": {"title": "Product Model", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerID": {"title": "Customer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["customerID", "name", "contactInfo"]}}, "required": ["warrantyID", "productModel", "purchaseDate", "customerDetails"], "title": "ProductWarrantyRegistration", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for a service request ticket, including properties like ticketID, deviceSerialNumber, issueDescription, and serviceStatus.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "deviceSerialNumber": {"title": "Device Serial Number", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "serviceStatus": {"title": "Service Status", "type": "string", "enum": ["Pending", "In Progress", "Completed", "On Hold"]}}, "required": ["ticketID", "deviceSerialNumber", "issueDescription", "serviceStatus"], "title": "ServiceRequestTicket", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for an electronic device's firmware update history, including properties like deviceID, firmwareVersion, updateTimestamp, and updateMethod.", "Schema": {"properties": {"deviceID": {"title": "Device ID", "type": "string"}, "firmwareVersion": {"title": "Firmware Version", "type": "string"}, "updateTimestamp": {"title": "Update Timestamp", "type": "string", "format": "date-time"}, "updateMethod": {"title": "Update Method", "type": "string"}}, "required": ["deviceID", "firmwareVersion", "updateTimestamp", "updateMethod"], "title": "FirmwareUpdateHistory", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for querying available technology products, including properties like productId, productName, specifications, and price.", "Schema": {"properties": {"productId": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"weight": {"title": "Weight", "type": "number"}, "dimensions": {"title": "Dimensions", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}}}, "price": {"title": "Price", "type": "number"}}, "required": ["productId", "productName", "specifications", "price"], "title": "ProductQuery", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON object for tracking inventory levels, including properties such as itemId, quantityAvailable, reorderThreshold, and supplierId.", "Schema": {"properties": {"itemId": {"title": "Item ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}, "supplierId": {"title": "Supplier ID", "type": "string"}}, "required": ["itemId", "quantityAvailable", "reorderThreshold", "supplierId"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for a warranty claim submission, including properties like claimId, customerId, productSerialNumber, issueDescription, and claimStatus.", "Schema": {"properties": {"claimId": {"title": "Claim ID", "type": "string"}, "customerId": {"title": "Customer ID", "type": "string"}, "productSerialNumber": {"title": "Product Serial Number", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "In Review", "Approved", "Rejected"]}}, "required": ["claimId", "customerId", "productSerialNumber", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for customer feedback on products, including properties such as feedbackId, productId, rating, comments, and submissionDate.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "productId": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}, "submissionDate": {"title": "Submission Date", "type": "string", "format": "date"}}, "required": ["feedbackId", "productId", "rating", "comments", "submissionDate"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for service request tickets, including properties like ticketId, issueType, priority, assignedTechnician, and resolutionStatus.", "Schema": {"properties": {"ticketId": {"title": "Ticket ID", "type": "string"}, "issueType": {"title": "Issue Type", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High", "Urgent"]}, "assignedTechnician": {"title": "Assigned Technician", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["ticketId", "issueType", "priority", "assignedTechnician", "resolutionStatus"], "title": "ServiceRequestTicket", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Create a JSON object for storing specifications of a personal computer, including properties like CPU model, RAM size, storage capacity, and GPU model.", "Schema": {"properties": {"cpuModel": {"title": "CPU Model", "type": "string"}, "ramSize": {"title": "RAM Size", "type": "string"}, "storageCapacity": {"title": "Storage Capacity", "type": "string"}, "gpuModel": {"title": "GPU Model", "type": "string"}}, "required": ["cpuModel", "ramSize", "storageCapacity", "gpuModel"], "title": "PersonalComputerSpecs", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Develop a JSON schema for a server inventory system, capturing details such as serverID, location, rack number, and maintenance schedule.", "Schema": {"properties": {"serverID": {"title": "Server ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "rackNumber": {"title": "Rack Number", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["serverID", "location", "rackNumber", "maintenanceSchedule"], "title": "ServerInventory", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Construct a JSON object for tracking printer usage, including properties such as printerID, model, total pages printed, and ink levels.", "Schema": {"properties": {"printerID": {"title": "Printer ID", "type": "string"}, "model": {"title": "Model", "type": "string"}, "totalPagesPrinted": {"title": "Total Pages Printed", "type": "integer"}, "inkLevels": {"title": "Ink Levels", "type": "object", "properties": {"black": {"title": "Black Ink Level", "type": "number"}, "cyan": {"title": "Cyan Ink Level", "type": "number"}, "magenta": {"title": "Magenta Ink Level", "type": "number"}, "yellow": {"title": "Yellow Ink Level", "type": "number"}}, "required": ["black", "cyan", "magenta", "yellow"]}}, "required": ["printerID", "model", "totalPagesPrinted", "inkLevels"], "title": "PrinterUsage", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Design a JSON object for a computer monitor inventory, including properties such as monitorID, resolution, screen size, and connection ports.", "Schema": {"properties": {"monitorID": {"title": "Monitor ID", "type": "string"}, "resolution": {"title": "Resolution", "type": "string"}, "screenSize": {"title": "Screen Size", "type": "string"}, "connectionPorts": {"title": "Connection Ports", "type": "array", "items": {"type": "string"}}}, "required": ["monitorID", "resolution", "screenSize", "connectionPorts"], "title": "MonitorInventory", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Technology Hardware, Storage & Peripherals", "Task": "Generate a JSON object representing a keyboard product, including properties like keyboardID, layout, switch type, and wireless connectivity.", "Schema": {"properties": {"keyboardID": {"title": "Keyboard ID", "type": "string"}, "layout": {"title": "Layout", "type": "string"}, "switchType": {"title": "Switch Type", "type": "string"}, "wirelessConnectivity": {"title": "Wireless Connectivity", "type": "boolean"}}, "required": ["keyboardID", "layout", "switchType", "wirelessConnectivity"], "title": "KeyboardProduct", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for querying a distributor's available technology hardware, including properties like productID, productName, category, and quantityAvailable.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "category": {"title": "Category", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["productID", "productName", "category", "quantityAvailable"], "title": "TechnologyHardwareQuery", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON object for submitting a restock request, including properties such as restockID, productID, requestedQuantity, and restockDate.", "Schema": {"properties": {"restockID": {"title": "Restock ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "requestedQuantity": {"title": "Requested Quantity", "type": "integer"}, "restockDate": {"format": "date", "title": "Restock Date", "type": "string"}}, "required": ["restockID", "productID", "requestedQuantity", "restockDate"], "title": "RestockRequest", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for a warranty claim submission, including properties like claimID, productID, issueDescription, and claimDate.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimDate": {"format": "date", "title": "Claim Date", "type": "string"}}, "required": ["claimID", "productID", "issueDescription", "claimDate"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for tracking shipment of electronic components, including properties such as shipmentID, productID, destination, and expectedDeliveryDate.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "expectedDeliveryDate": {"format": "date", "title": "Expected Delivery Date", "type": "string"}}, "required": ["shipmentID", "productID", "destination", "expectedDeliveryDate"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for a customer feedback form on electronic equipment, including properties like feedbackID, customerID, productID, rating, and comments.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}}, "required": ["feedbackID", "customerID", "productID", "rating", "comments"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for querying available electronic components, with properties like componentID, componentName, and quantityAvailable.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["componentID", "componentName", "quantityAvailable"], "title": "ElectronicComponentQuery", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON schema for a user query to check the warranty status of an electronic device, including properties like serialNumber, purchaseDate, and warrantyPeriod.", "Schema": {"properties": {"serialNumber": {"title": "Serial Number", "type": "string"}, "purchaseDate": {"format": "date", "title": "Purchase Date", "type": "string"}, "warrantyPeriod": {"title": "Warranty Period", "type": "integer"}}, "required": ["serialNumber", "purchaseDate", "warrantyPeriod"], "title": "WarrantyStatusQuery", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for submitting a service request for electronic equipment repair, including properties like customerID, equipmentModel, issueDescription, and preferredServiceDate.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "equipmentModel": {"title": "Equipment Model", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "preferredServiceDate": {"format": "date", "title": "Preferred Service Date", "type": "string"}}, "required": ["customerID", "equipmentModel", "issueDescription", "preferredServiceDate"], "title": "ServiceRequest", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for tracking shipment of electronic parts, with properties such as trackingNumber, origin, destination, and estimatedDeliveryDate.", "Schema": {"properties": {"trackingNumber": {"title": "Tracking Number", "type": "string"}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "estimatedDeliveryDate": {"format": "date", "title": "Estimated Delivery Date", "type": "string"}}, "required": ["trackingNumber", "origin", "destination", "estimatedDeliveryDate"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for a customer feedback form on electronic products, including properties like productID, customerID, rating, and feedbackText.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "feedbackText": {"title": "Feedback Text", "type": "string"}}, "required": ["productID", "customerID", "rating", "feedbackText"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Create a JSON object for querying semiconductor material inventory, including properties like materialID, quantity, location, and supplier.", "Schema": {"properties": {"materialID": {"title": "Material ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "supplier": {"title": "Supplier", "type": "string"}}, "required": ["materialID", "quantity", "location"], "title": "SemiconductorMaterialInventoryQuery", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Develop a JSON object for submitting a purchase order for semiconductor equipment, including properties like orderID, equipmentDetails, quantity, and deliveryDate.", "Schema": {"properties": {"orderID": {"title": "Order ID", "type": "string"}, "equipmentDetails": {"title": "Equipment Details", "type": "object", "properties": {"equipmentName": {"title": "Equipment Name", "type": "string"}, "modelNumber": {"title": "Model Number", "type": "string"}}, "required": ["equipmentName", "modelNumber"]}, "quantity": {"title": "Quantity", "type": "integer"}, "deliveryDate": {"title": "Delivery Date", "type": "string", "format": "date"}}, "required": ["orderID", "equipmentDetails", "quantity", "deliveryDate"], "title": "SemiconductorEquipmentPurchaseOrder", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Construct a JSON object for tracking semiconductor production batches, including properties like batchID, productionDate, yieldRate, and defects.", "Schema": {"properties": {"batchID": {"title": "Batch ID", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "yieldRate": {"title": "Yield Rate", "type": "number", "minimum": 0, "maximum": 100}, "defects": {"title": "Defects", "type": "array", "items": {"type": "string"}}}, "required": ["batchID", "productionDate", "yieldRate"], "title": "SemiconductorProductionBatchTracking", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Design a JSON object for a semiconductor device specification, including properties like deviceID, specifications, performanceMetrics, and complianceStandards.", "Schema": {"properties": {"deviceID": {"title": "Device ID", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"dimension": {"title": "Dimension", "type": "string"}, "powerConsumption": {"title": "Power Consumption", "type": "string"}}, "required": ["dimension", "powerConsumption"]}, "performanceMetrics": {"title": "Performance Metrics", "type": "object", "properties": {"speed": {"title": "Speed", "type": "string"}, "efficiency": {"title": "Efficiency", "type": "string"}}, "required": ["speed", "efficiency"]}, "complianceStandards": {"title": "Compliance Standards", "type": "array", "items": {"type": "string"}}}, "required": ["deviceID", "specifications", "performanceMetrics"], "title": "SemiconductorDeviceSpecification", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Generate a JSON object for logging semiconductor testing results, including properties like testID, deviceTested, testParameters, results, and technician.", "Schema": {"properties": {"testID": {"title": "Test ID", "type": "string"}, "deviceTested": {"title": "Device Tested", "type": "string"}, "testParameters": {"title": "Test Parameters", "type": "object", "properties": {"voltage": {"title": "Voltage", "type": "number"}, "temperature": {"title": "Temperature", "type": "number"}}, "required": ["voltage", "temperature"]}, "results": {"title": "Results", "type": "object", "properties": {"passed": {"title": "Passed", "type": "boolean"}, "failureReason": {"title": "Failure Reason", "type": "string"}}, "required": ["passed"]}, "technician": {"title": "Technician", "type": "string"}}, "required": ["testID", "deviceTested", "testParameters", "results"], "title": "SemiconductorTestingLog", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Create a JSON object for querying available semiconductor components, with properties like componentID, componentName, specifications, and quantityAvailable.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"size": {"title": "Size", "type": "string"}, "power": {"title": "Power", "type": "string"}, "frequency": {"title": "Frequency", "type": "string"}}}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}}, "required": ["componentID", "componentName", "specifications", "quantityAvailable"], "title": "SemiconductorComponentQuery", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Develop a JSON object for submitting a new semiconductor design, including properties like designID, designerName, designSpecifications, and estimatedProductionCost.", "Schema": {"properties": {"designID": {"title": "Design ID", "type": "string"}, "designerName": {"title": "Designer Name", "type": "string"}, "designSpecifications": {"title": "Design Specifications", "type": "object", "properties": {"architecture": {"title": "Architecture", "type": "string"}, "transistorCount": {"title": "Transistor Count", "type": "integer"}, "fabricationProcess": {"title": "Fabrication Process", "type": "string"}}}, "estimatedProductionCost": {"title": "Estimated Production Cost", "type": "number"}}, "required": ["designID", "designerName", "designSpecifications", "estimatedProductionCost"], "title": "NewSemiconductorDesignSubmission", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Construct a JSON object for tracking semiconductor manufacturing process, with properties like batchID, startDate, endDate, yieldRate, and defects.", "Schema": {"properties": {"batchID": {"title": "Batch ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "yieldRate": {"title": "Yield Rate", "type": "number"}, "defects": {"title": "Defects", "type": "array", "items": {"type": "string"}}}, "required": ["batchID", "startDate", "endDate", "yieldRate", "defects"], "title": "SemiconductorManufacturingTracking", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Design a JSON object for a semiconductor equipment maintenance log, including properties like equipmentID, lastMaintenanceDate, nextScheduledMaintenance, and maintenanceNotes.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "lastMaintenanceDate": {"title": "Last Maintenance Date", "type": "string", "format": "date"}, "nextScheduledMaintenance": {"title": "Next Scheduled Maintenance", "type": "string", "format": "date"}, "maintenanceNotes": {"title": "Maintenance Notes", "type": "string"}}, "required": ["equipmentID", "lastMaintenanceDate", "nextScheduledMaintenance", "maintenanceNotes"], "title": "SemiconductorEquipmentMaintenanceLog", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Generate a JSON object for semiconductor inventory management, with properties like inventoryID, items, totalValue, and restockThreshold.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "unitPrice": {"title": "Unit Price", "type": "number"}}, "required": ["itemID", "quantity", "unitPrice"]}}, "totalValue": {"title": "Total Value", "type": "number"}, "restockThreshold": {"title": "Restock Threshold", "type": "integer"}}, "required": ["inventoryID", "items", "totalValue", "restockThreshold"], "title": "SemiconductorInventoryManagement", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Create a JSON object for a new mobile subscriber, including properties like subscriberID, phoneNumber, planType, and activationDate.", "Schema": {"properties": {"subscriberID": {"title": "Subscriber ID", "type": "string"}, "phoneNumber": {"title": "Phone Number", "type": "string"}, "planType": {"title": "Plan Type", "type": "string"}, "activationDate": {"title": "Activation Date", "type": "string", "format": "date"}}, "required": ["subscriberID", "phoneNumber", "planType", "activationDate"], "title": "MobileSubscriber", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Develop a JSON schema for a network coverage query, including properties like location, signalStrength, and networkType.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "signalStrength": {"title": "Signal Strength", "type": "number"}, "networkType": {"title": "Network Type", "type": "string"}}, "required": ["location", "signalStrength", "networkType"], "title": "NetworkCoverageQuery", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Construct a JSON object for a data usage report, including properties like subscriberID, billingCycle, dataUsed, and dataLimit.", "Schema": {"properties": {"subscriberID": {"title": "Subscriber ID", "type": "string"}, "billingCycle": {"title": "Billing Cycle", "type": "string"}, "dataUsed": {"title": "Data Used", "type": "number"}, "dataLimit": {"title": "Data Limit", "type": "number"}}, "required": ["subscriberID", "billingCycle", "dataUsed", "dataLimit"], "title": "DataUsageReport", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Design a JSON object for a customer support ticket, including properties like ticketID, customerID, issueDescription, and resolutionStatus.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["ticketID", "customerID", "issueDescription", "resolutionStatus"], "title": "CustomerSupportTicket", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Generate a JSON object for tracking a device repair, including properties like repairID, deviceModel, issueReported, and repairStatus.", "Schema": {"properties": {"repairID": {"title": "Repair ID", "type": "string"}, "deviceModel": {"title": "Device Model", "type": "string"}, "issueReported": {"title": "Issue Reported", "type": "string"}, "repairStatus": {"title": "Repair Status", "type": "string"}}, "required": ["repairID", "deviceModel", "issueReported", "repairStatus"], "title": "DeviceRepairTracking", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for storing electronic component details, including properties like componentID, componentName, specifications, and manufacturer details.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"size": {"title": "Size", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "powerRequirements": {"title": "Power Requirements", "type": "string"}}, "required": ["size", "weight", "powerRequirements"]}, "manufacturerDetails": {"title": "Manufacturer Details", "type": "object", "properties": {"manufacturerID": {"title": "Manufacturer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["manufacturerID", "name", "location"]}}, "required": ["componentID", "componentName", "specifications", "manufacturerDetails"], "title": "ElectronicComponent", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON schema for a product catalog query, including filters such as category, price range, availability, and manufacturer.", "Schema": {"properties": {"category": {"title": "Category", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"minPrice": {"title": "Minimum Price", "type": "number"}, "maxPrice": {"title": "Maximum Price", "type": "number"}}, "required": ["minPrice", "maxPrice"]}, "availability": {"title": "Availability", "type": "boolean"}, "manufacturer": {"title": "Manufacturer", "type": "string"}}, "required": ["category", "priceRange", "availability", "manufacturer"], "title": "ProductCatalogQuery", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for inventory management, including properties like inventoryID, items, restockThreshold, and supplier information.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "items": {"title": "Items", "type": "array", "items": {"type": "object", "properties": {"itemID": {"title": "Item ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["itemID", "quantity"]}}, "restockThreshold": {"title": "Restock Threshold", "type": "integer"}, "supplierInformation": {"title": "Supplier Information", "type": "object", "properties": {"supplierID": {"title": "Supplier ID", "type": "string"}, "contactDetails": {"title": "Contact Details", "type": "string"}}, "required": ["supplierID", "contactDetails"]}}, "required": ["inventoryID", "items", "restockThreshold", "supplierInformation"], "title": "InventoryManagement", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for tracking shipment of electronic components, including properties such as shipmentID, contents, origin, destination, and expected delivery date.", "Schema": {"properties": {"shipmentID": {"title": "Shipment ID", "type": "string"}, "contents": {"title": "Contents", "type": "array", "items": {"type": "object", "properties": {"componentID": {"title": "Component ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}}, "required": ["componentID", "quantity"]}}, "origin": {"title": "Origin", "type": "string"}, "destination": {"title": "Destination", "type": "string"}, "expectedDeliveryDate": {"title": "Expected Delivery Date", "type": "string", "format": "date"}}, "required": ["shipmentID", "contents", "origin", "destination", "expectedDeliveryDate"], "title": "ShipmentTracking", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for a warranty claim submission, including properties like claimID, productDetails, issueDescription, purchaseDate, and customerContact.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "productDetails": {"title": "Product Details", "type": "object", "properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}}, "required": ["productID", "productName"]}, "issueDescription": {"title": "Issue Description", "type": "string"}, "purchaseDate": {"title": "Purchase Date", "type": "string", "format": "date"}, "customerContact": {"title": "Customer Contact", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["name", "phone", "email"]}}, "required": ["claimID", "productDetails", "issueDescription", "purchaseDate", "customerContact"], "title": "WarrantyClaimSubmission", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Create a JSON object for storing electronic component specifications, including properties like componentID, componentName, specifications, and manufacturer details.", "Schema": {"properties": {"componentID": {"title": "Component ID", "type": "string"}, "componentName": {"title": "Component Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"dimension": {"title": "Dimension", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "material": {"title": "Material", "type": "string"}}, "required": ["dimension", "weight", "material"]}, "manufacturer": {"title": "Manufacturer", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["name", "location"]}}, "required": ["componentID", "componentName", "specifications", "manufacturer"], "title": "ElectronicComponent", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Develop a JSON object for tracking inventory of electronic components, including properties like inventoryID, componentID, quantity, location, and lastAuditDate.", "Schema": {"properties": {"inventoryID": {"title": "Inventory ID", "type": "string"}, "componentID": {"title": "Component ID", "type": "string"}, "quantity": {"title": "Quantity", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "lastAuditDate": {"title": "Last Audit Date", "type": "string", "format": "date"}}, "required": ["inventoryID", "componentID", "quantity", "location", "lastAuditDate"], "title": "InventoryTracking", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Construct a JSON object for a product catalog entry, including properties like productID, productName, category, price, and availability status.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "category": {"title": "Category", "type": "string"}, "price": {"title": "Price", "type": "number"}, "availabilityStatus": {"title": "Availability Status", "type": "boolean"}}, "required": ["productID", "productName", "category", "price", "availabilityStatus"], "title": "ProductCatalogEntry", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Design a JSON object for a warranty claim, including properties like claimID, productID, customerDetails, issueDescription, and claimStatus.", "Schema": {"properties": {"claimID": {"title": "Claim ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "customerDetails": {"title": "Customer Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}, "issueDescription": {"title": "Issue Description", "type": "string"}, "claimStatus": {"title": "Claim Status", "type": "string", "enum": ["Submitted", "In Review", "Approved", "Rejected"]}}, "required": ["claimID", "productID", "customerDetails", "issueDescription", "claimStatus"], "title": "WarrantyClaim", "type": "object"}}
{"Category": "Technology Hardware & Equipment", "SubCategory": "Electronic Equipment, Instruments & Components", "Task": "Generate a JSON object for a service request ticket, including properties like ticketID, productID, issueReported, serviceType, and resolutionStatus.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "productID": {"title": "Product ID", "type": "string"}, "issueReported": {"title": "Issue Reported", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["ticketID", "productID", "issueReported", "serviceType", "resolutionStatus"], "title": "ServiceRequestTicket", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Create a JSON object for storing customer subscription details, including properties like customerID, planType, subscriptionStartDate, and dataUsage.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "planType": {"title": "Plan Type", "type": "string"}, "subscriptionStartDate": {"format": "date", "title": "Subscription Start Date", "type": "string"}, "dataUsage": {"title": "Data Usage", "type": "number"}}, "required": ["customerID", "planType", "subscriptionStartDate", "dataUsage"], "title": "CustomerSubscription", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Develop a JSON object for tracking network outage incidents, with properties such as incidentID, affectedArea, startTime, endTime, and resolutionStatus.", "Schema": {"properties": {"incidentID": {"title": "Incident ID", "type": "string"}, "affectedArea": {"title": "Affected Area", "type": "string"}, "startTime": {"format": "date-time", "title": "Start Time", "type": "string"}, "endTime": {"format": "date-time", "title": "End Time", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["incidentID", "affectedArea", "startTime", "endTime", "resolutionStatus"], "title": "NetworkOutageIncident", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Construct a JSON object for a service ticket, including properties like ticketID, customerID, issueDescription, priority, and status.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string"}, "status": {"title": "Status", "type": "string"}}, "required": ["ticketID", "customerID", "issueDescription", "priority", "status"], "title": "ServiceTicket", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Design a JSON object for a billing record, including properties such as billID, customerID, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"billID": {"title": "Bill ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string"}, "amountDue": {"title": "Amount Due", "type": "number"}, "paymentStatus": {"title": "Payment Status", "type": "string"}}, "required": ["billID", "customerID", "billingPeriod", "amountDue", "paymentStatus"], "title": "BillingRecord", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Generate a JSON object representing a network equipment inventory item, including properties like equipmentID, modelNumber, location, status, and lastMaintenanceDate.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "modelNumber": {"title": "Model Number", "type": "string"}, "location": {"title": "Location", "type": "string"}, "status": {"title": "Status", "type": "string"}, "lastMaintenanceDate": {"format": "date", "title": "Last Maintenance Date", "type": "string"}}, "required": ["equipmentID", "modelNumber", "location", "status", "lastMaintenanceDate"], "title": "NetworkEquipmentInventory", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Create a JSON object for storing customer subscription details, including properties like customerID, planType, subscriptionDate, and dataUsage.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "planType": {"title": "Plan Type", "type": "string"}, "subscriptionDate": {"format": "date", "title": "Subscription Date", "type": "string"}, "dataUsage": {"title": "Data Usage (GB)", "type": "number"}}, "required": ["customerID", "planType", "subscriptionDate", "dataUsage"], "title": "CustomerSubscription", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Develop a JSON schema for a network traffic report, including properties such as reportID, timestamp, peakTrafficLoad, and affectedRegions.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "timestamp": {"format": "date-time", "title": "Timestamp", "type": "string"}, "peakTrafficLoad": {"title": "Peak Traffic Load (Mbps)", "type": "number"}, "affectedRegions": {"items": {"type": "string"}, "title": "Affected Regions", "type": "array"}}, "required": ["reportID", "timestamp", "peakTrafficLoad", "affectedRegions"], "title": "NetworkTrafficReport", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Construct a JSON object representing a service outage incident, including properties like incidentID, startTime, endTime, servicesAffected, and resolutionStatus.", "Schema": {"properties": {"incidentID": {"title": "Incident ID", "type": "string"}, "startTime": {"format": "date-time", "title": "Start Time", "type": "string"}, "endTime": {"format": "date-time", "title": "End Time", "type": "string"}, "servicesAffected": {"items": {"type": "string"}, "title": "Services Affected", "type": "array"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["incidentID", "startTime", "servicesAffected", "resolutionStatus"], "title": "ServiceOutageIncident", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Design a JSON object for a customer feedback form, including properties such as feedbackID, customerID, serviceRating, comments, and submissionDate.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "serviceRating": {"title": "Service Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}, "submissionDate": {"format": "date", "title": "Submission Date", "type": "string"}}, "required": ["feedbackID", "customerID", "serviceRating", "submissionDate"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Generate a JSON object representing a billing record, including properties like billID, customerID, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"billID": {"title": "Bill ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string"}, "amountDue": {"title": "Amount Due", "type": "number"}, "paymentStatus": {"title": "Payment Status", "type": "string", "enum": ["Paid", "Unpaid", "Overdue"]}}, "required": ["billID", "customerID", "billingPeriod", "amountDue", "paymentStatus"], "title": "BillingRecord", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Create a JSON object for storing semiconductor product details, including properties like productName, productCode, specifications, and manufacturingDate.", "Schema": {"properties": {"productName": {"title": "Product Name", "type": "string"}, "productCode": {"title": "Product Code", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"size": {"title": "Size", "type": "string"}, "capacity": {"title": "Capacity", "type": "string"}, "powerConsumption": {"title": "Power Consumption", "type": "string"}}, "required": ["size", "capacity", "powerConsumption"]}, "manufacturingDate": {"title": "Manufacturing Date", "type": "string", "format": "date"}}, "required": ["productName", "productCode", "specifications", "manufacturingDate"], "title": "SemiconductorProduct", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Develop a JSON schema for a semiconductor equipment maintenance log, including properties such as equipmentId, lastMaintenanceDate, technician, and maintenanceNotes.", "Schema": {"properties": {"equipmentId": {"title": "Equipment ID", "type": "string"}, "lastMaintenanceDate": {"title": "Last Maintenance Date", "type": "string", "format": "date-time"}, "technician": {"title": "Technician", "type": "string"}, "maintenanceNotes": {"title": "Maintenance Notes", "type": "string"}}, "required": ["equipmentId", "lastMaintenanceDate", "technician", "maintenanceNotes"], "title": "EquipmentMaintenanceLog", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Construct a JSON object for tracking semiconductor chip inventory, including properties like chipId, quantityAvailable, location, and reorderThreshold.", "Schema": {"properties": {"chipId": {"title": "Chip ID", "type": "string"}, "quantityAvailable": {"title": "Quantity Available", "type": "integer"}, "location": {"title": "Location", "type": "string"}, "reorderThreshold": {"title": "Reorder Threshold", "type": "integer"}}, "required": ["chipId", "quantityAvailable", "location", "reorderThreshold"], "title": "ChipInventory", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Design a JSON object for a semiconductor production batch record, including properties such as batchId, productionDate, quantityProduced, and qualityCheckPassed.", "Schema": {"properties": {"batchId": {"title": "Batch ID", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "quantityProduced": {"title": "Quantity Produced", "type": "integer"}, "qualityCheckPassed": {"title": "Quality Check Passed", "type": "boolean"}}, "required": ["batchId", "productionDate", "quantityProduced", "qualityCheckPassed"], "title": "ProductionBatchRecord", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Generate a JSON object representing a solar module's performance metrics, including properties like moduleId, efficiencyRating, temperatureCoefficient, and nominalPower.", "Schema": {"properties": {"moduleId": {"title": "Module ID", "type": "string"}, "efficiencyRating": {"title": "Efficiency Rating", "type": "string"}, "temperatureCoefficient": {"title": "Temperature Coefficient", "type": "string"}, "nominalPower": {"title": "Nominal Power", "type": "string"}}, "required": ["moduleId", "efficiencyRating", "temperatureCoefficient", "nominalPower"], "title": "SolarModulePerformance", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Create a JSON object for storing customer mobile plans, including properties like planName, monthlyCost, dataLimit, and internationalRoaming.", "Schema": {"properties": {"planName": {"title": "Plan Name", "type": "string"}, "monthlyCost": {"title": "Monthly Cost", "type": "number"}, "dataLimit": {"title": "Data Limit", "type": "number"}, "internationalRoaming": {"title": "International Roaming", "type": "boolean"}}, "required": ["planName", "monthlyCost", "dataLimit", "internationalRoaming"], "title": "CustomerMobilePlan", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Develop a JSON schema for a user query to check network coverage in a specific area, including properties like areaCode, networkType, and coverageStatus.", "Schema": {"properties": {"areaCode": {"title": "Area Code", "type": "string"}, "networkType": {"title": "Network Type", "type": "string", "enum": ["2G", "3G", "4G", "5G"]}, "coverageStatus": {"title": "Coverage Status", "type": "string", "enum": ["Available", "Unavailable", "Partial"]}}, "required": ["areaCode", "networkType"], "title": "NetworkCoverageQuery", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Construct a JSON object for logging customer service interactions, including properties like interactionID, customerID, issueType, resolutionStatus, and interactionTimestamp.", "Schema": {"properties": {"interactionID": {"title": "Interaction ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "issueType": {"title": "Issue Type", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string", "enum": ["Resolved", "Pending", "Escalated"]}, "interactionTimestamp": {"title": "Interaction Timestamp", "type": "string", "format": "date-time"}}, "required": ["interactionID", "customerID", "issueType", "resolutionStatus", "interactionTimestamp"], "title": "CustomerServiceInteraction", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Design a JSON object for tracking network outages, including properties like outageID, affectedAreas, outageStartTime, outageEndTime, and causeOfOutage.", "Schema": {"properties": {"outageID": {"title": "Outage ID", "type": "string"}, "affectedAreas": {"title": "Affected Areas", "type": "array", "items": {"type": "string"}}, "outageStartTime": {"title": "Outage Start Time", "type": "string", "format": "date-time"}, "outageEndTime": {"title": "Outage End Time", "type": "string", "format": "date-time"}, "causeOfOutage": {"title": "Cause of Outage", "type": "string"}}, "required": ["outageID", "affectedAreas", "outageStartTime", "causeOfOutage"], "title": "NetworkOutageTracking", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Wireless Telecommunication Services", "Task": "Generate a JSON object for a customer's billing inquiry, including properties like accountNumber, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"accountNumber": {"title": "Account Number", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string"}, "amountDue": {"title": "Amount Due", "type": "number"}, "paymentStatus": {"title": "Payment Status", "type": "string", "enum": ["Paid", "Unpaid", "Overdue"]}}, "required": ["accountNumber", "billingPeriod", "amountDue", "paymentStatus"], "title": "CustomerBillingInquiry", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for storing advertising campaign details, including properties like campaignName, startDate, endDate, budget, and targetAudience.", "Schema": {"properties": {"campaignName": {"title": "Campaign Name", "type": "string"}, "startDate": {"title": "Start Date", "format": "date", "type": "string"}, "endDate": {"title": "End Date", "format": "date", "type": "string"}, "budget": {"title": "Budget", "type": "number"}, "targetAudience": {"title": "Target Audience", "type": "string"}}, "required": ["campaignName", "startDate", "endDate", "budget", "targetAudience"], "title": "AdvertisingCampaign", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Develop a JSON schema for a marketing survey result, with properties such as surveyId, questions, responses, and respondent demographics.", "Schema": {"properties": {"surveyId": {"title": "Survey ID", "type": "string"}, "questions": {"title": "Questions", "type": "array", "items": {"type": "string"}}, "responses": {"title": "Responses", "type": "array", "items": {"type": "string"}}, "respondentDemographics": {"title": "Respondent Demographics", "type": "object"}}, "required": ["surveyId", "questions", "responses", "respondentDemographics"], "title": "MarketingSurveyResult", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object for public relations event management, including properties like eventName, location, date, attendees, and pressCoverage.", "Schema": {"properties": {"eventName": {"title": "Event Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "date": {"title": "Date", "format": "date", "type": "string"}, "attendees": {"title": "Attendees", "type": "array", "items": {"type": "string"}}, "pressCoverage": {"title": "Press Coverage", "type": "array", "items": {"type": "string"}}}, "required": ["eventName", "location", "date", "attendees", "pressCoverage"], "title": "PublicRelationsEvent", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for tracking media asset distribution, with properties such as assetId, distributionChannels, licensePeriod, and usageMetrics.", "Schema": {"properties": {"assetId": {"title": "Asset ID", "type": "string"}, "distributionChannels": {"title": "Distribution Channels", "type": "array", "items": {"type": "string"}}, "licensePeriod": {"title": "License Period", "type": "object", "properties": {"start": {"format": "date", "type": "string"}, "end": {"format": "date", "type": "string"}}}, "usageMetrics": {"title": "Usage Metrics", "type": "object"}}, "required": ["assetId", "distributionChannels", "licensePeriod"], "title": "MediaAssetDistribution", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object representing a content creator's profile, including properties like creatorId, name, contentGenre, followers, and sponsoredBrands.", "Schema": {"properties": {"creatorId": {"title": "Creator ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "contentGenre": {"title": "Content Genre", "type": "string"}, "followers": {"title": "Followers", "type": "integer"}, "sponsoredBrands": {"title": "Sponsored Brands", "type": "array", "items": {"type": "string"}}}, "required": ["creatorId", "name", "contentGenre", "followers"], "title": "ContentCreatorProfile", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Create a JSON object for storing alternative carrier service details, including properties like carrierName, serviceType, coverageArea, and pricing.", "Schema": {"properties": {"carrierName": {"title": "Carrier Name", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "coverageArea": {"title": "Coverage Area", "type": "string"}, "pricing": {"title": "Pricing", "type": "object", "properties": {"currency": {"title": "Currency", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["currency", "amount"]}}, "required": ["carrierName", "serviceType", "coverageArea", "pricing"], "title": "AlternativeCarrierServiceDetails", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Develop a JSON schema for a customer's telecommunication service subscription, including properties like customerID, subscribedServices, and billingInformation.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "subscribedServices": {"title": "Subscribed Services", "type": "array", "items": {"type": "string"}}, "billingInformation": {"title": "Billing Information", "type": "object", "properties": {"billingAddress": {"title": "Billing Address", "type": "string"}, "paymentMethod": {"title": "Payment Method", "type": "string"}}, "required": ["billingAddress", "paymentMethod"]}}, "required": ["customerID", "subscribedServices", "billingInformation"], "title": "CustomerTelecommunicationSubscription", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Construct a JSON object for a network outage report, including properties like outageID, affectedArea, startTime, endTime, and status.", "Schema": {"properties": {"outageID": {"title": "Outage ID", "type": "string"}, "affectedArea": {"title": "Affected Area", "type": "string"}, "startTime": {"title": "Start Time", "type": "string", "format": "date-time"}, "endTime": {"title": "End Time", "type": "string", "format": "date-time"}, "status": {"title": "Status", "type": "string"}}, "required": ["outageID", "affectedArea", "startTime", "status"], "title": "NetworkOutageReport", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Design a JSON object for tracking a telecommunication tower's maintenance schedule, including properties like towerID, maintenanceDate, maintenanceType, and technicianDetails.", "Schema": {"properties": {"towerID": {"title": "Tower ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "technicianDetails": {"title": "Technician Details", "type": "object", "properties": {"technicianID": {"title": "Technician ID", "type": "string"}, "name": {"title": "Name", "type": "string"}}, "required": ["technicianID", "name"]}}, "required": ["towerID", "maintenanceDate", "maintenanceType", "technicianDetails"], "title": "TelecommunicationTowerMaintenance", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Generate a JSON object for a customer feedback form on telecommunication services, including properties like feedbackID, customerID, serviceRating, comments, and submissionDate.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "serviceRating": {"title": "Service Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comments": {"title": "Comments", "type": "string"}, "submissionDate": {"title": "Submission Date", "type": "string", "format": "date-time"}}, "required": ["feedbackID", "customerID", "serviceRating", "submissionDate"], "title": "CustomerFeedbackForm", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Create a JSON object for a new customer subscription, including properties like customerID, planType, startDate, and dataUsageLimit.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "planType": {"title": "Plan Type", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "dataUsageLimit": {"title": "Data Usage Limit (GB)", "type": "number"}}, "required": ["customerID", "planType", "startDate", "dataUsageLimit"], "title": "CustomerSubscription", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Develop a JSON schema for a service outage report, including properties such as reportID, affectedArea, startTime, endTime, and status.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "affectedArea": {"title": "Affected Area", "type": "string"}, "startTime": {"format": "date-time", "title": "Start Time", "type": "string"}, "endTime": {"format": "date-time", "title": "End Time", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Resolved", "Ongoing", "Identified"]}}, "required": ["reportID", "affectedArea", "startTime", "status"], "title": "ServiceOutageReport", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Construct a JSON object for tracking network traffic, including properties like deviceID, timestamp, uploadSpeed, downloadSpeed, and dataUsage.", "Schema": {"properties": {"deviceID": {"title": "Device ID", "type": "string"}, "timestamp": {"format": "date-time", "title": "Timestamp", "type": "string"}, "uploadSpeed": {"title": "Upload Speed (Mbps)", "type": "number"}, "downloadSpeed": {"title": "Download Speed (Mbps)", "type": "number"}, "dataUsage": {"title": "Data Usage (MB)", "type": "number"}}, "required": ["deviceID", "timestamp", "uploadSpeed", "downloadSpeed", "dataUsage"], "title": "NetworkTraffic", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Design a JSON object for a customer support ticket, including properties such as ticketID, customerID, issueDescription, priority, and resolutionStatus.", "Schema": {"properties": {"ticketID": {"title": "Ticket ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High", "Urgent"]}, "resolutionStatus": {"title": "Resolution Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["ticketID", "customerID", "issueDescription", "priority"], "title": "CustomerSupportTicket", "type": "object"}}
{"Category": "Telecommunication Services", "SubCategory": "Diversified Telecommunication Services", "Task": "Generate a JSON object representing a billing record, including properties like billID, customerID, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"billID": {"title": "Bill ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string"}, "amountDue": {"title": "Amount Due", "type": "number"}, "paymentStatus": {"title": "Payment Status", "type": "string", "enum": ["Paid", "Unpaid", "Overdue"]}}, "required": ["billID", "customerID", "billingPeriod", "amountDue", "paymentStatus"], "title": "BillingRecord", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for storing television program details, including properties like programTitle, genre, broadcastTime, and associated FCC content rating.", "Schema": {"properties": {"programTitle": {"title": "Program Title", "type": "string"}, "genre": {"title": "Genre", "type": "string"}, "broadcastTime": {"title": "Broadcast Time", "type": "string", "format": "date-time"}, "fccContentRating": {"title": "FCC Content Rating", "type": "string"}}, "required": ["programTitle", "genre", "broadcastTime", "fccContentRating"], "title": "TelevisionProgramDetails", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Develop a JSON schema for a radio station profile, including properties such as stationName, frequency, format, and license information.", "Schema": {"properties": {"stationName": {"title": "Station Name", "type": "string"}, "frequency": {"title": "Frequency", "type": "string"}, "format": {"title": "Format", "type": "string"}, "licenseInformation": {"title": "License Information", "type": "object", "properties": {"licenseNumber": {"title": "License Number", "type": "string"}, "expirationDate": {"title": "Expiration Date", "type": "string", "format": "date"}}, "required": ["licenseNumber", "expirationDate"]}}, "required": ["stationName", "frequency", "format", "licenseInformation"], "title": "RadioStationProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object for tracking a network's television ratings, including properties like networkName, showId, viewerCount, and demographic data.", "Schema": {"properties": {"networkName": {"title": "Network Name", "type": "string"}, "showId": {"title": "Show ID", "type": "string"}, "viewerCount": {"title": "Viewer Count", "type": "integer"}, "demographicData": {"title": "Demographic Data", "type": "object", "properties": {"ageRange": {"title": "Age Range", "type": "string"}, "genderRatio": {"title": "Gender Ratio", "type": "string"}}}}, "required": ["networkName", "showId", "viewerCount", "demographicData"], "title": "TelevisionRatings", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for a media content library, including properties such as contentId, title, description, duration, and content type.", "Schema": {"properties": {"contentId": {"title": "Content ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}, "duration": {"title": "Duration", "type": "integer"}, "contentType": {"title": "Content Type", "type": "string"}}, "required": ["contentId", "title", "description", "duration", "contentType"], "title": "MediaContentLibrary", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object representing a broadcaster's advertising slots, including properties like slotId, timeSlot, duration, and price.", "Schema": {"properties": {"slotId": {"title": "Slot ID", "type": "string"}, "timeSlot": {"title": "Time Slot", "type": "string", "format": "date-time"}, "duration": {"title": "Duration", "type": "integer"}, "price": {"title": "Price", "type": "number"}}, "required": ["slotId", "timeSlot", "duration", "price"], "title": "AdvertisingSlots", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for storing advertising campaign details, including properties like campaignName, startDate, endDate, budget, and targetAudience.", "Schema": {"properties": {"campaignName": {"title": "Campaign Name", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "budget": {"title": "Budget", "type": "number"}, "targetAudience": {"title": "Target Audience", "type": "string"}}, "required": ["campaignName", "startDate", "endDate", "budget", "targetAudience"], "title": "AdvertisingCampaign", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Develop a JSON object for tracking viewer engagement metrics, with properties such as contentId, viewCount, likeCount, and shareCount.", "Schema": {"properties": {"contentId": {"title": "Content ID", "type": "string"}, "viewCount": {"title": "View Count", "type": "integer"}, "likeCount": {"title": "Like Count", "type": "integer"}, "shareCount": {"title": "Share Count", "type": "integer"}}, "required": ["contentId", "viewCount", "likeCount", "shareCount"], "title": "ViewerEngagementMetrics", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object for a media content library, including properties like contentId, title, genre, releaseDate, and director.", "Schema": {"properties": {"contentId": {"title": "Content ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "genre": {"title": "Genre", "type": "string"}, "releaseDate": {"title": "Release Date", "type": "string", "format": "date"}, "director": {"title": "Director", "type": "string"}}, "required": ["contentId", "title", "genre", "releaseDate", "director"], "title": "MediaContentLibrary", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for a user profile on a media platform, with properties such as userId, username, email, preferences, and watchHistory.", "Schema": {"properties": {"userId": {"title": "User ID", "type": "string"}, "username": {"title": "Username", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "preferences": {"title": "Preferences", "type": "array", "items": {"type": "string"}}, "watchHistory": {"title": "Watch History", "type": "array", "items": {"type": "string"}}}, "required": ["userId", "username", "email", "preferences", "watchHistory"], "title": "UserProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object representing a subscription plan for a streaming service, including properties like planId, planName, price, duration, and features.", "Schema": {"properties": {"planId": {"title": "Plan ID", "type": "string"}, "planName": {"title": "Plan Name", "type": "string"}, "price": {"title": "Price", "type": "number"}, "duration": {"title": "Duration", "type": "string"}, "features": {"title": "Features", "type": "array", "items": {"type": "string"}}}, "required": ["planId", "planName", "price", "duration", "features"], "title": "SubscriptionPlan", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for storing cable subscription details, including properties like subscriberId, packageType, channels, and billing information.", "Schema": {"properties": {"subscriberId": {"title": "Subscriber ID", "type": "string"}, "packageType": {"title": "Package Type", "type": "string"}, "channels": {"title": "Channels", "type": "array", "items": {"type": "string"}}, "billingInformation": {"title": "Billing Information", "type": "object", "properties": {"billingCycle": {"title": "Billing Cycle", "type": "string"}, "amountDue": {"title": "Amount Due", "type": "number"}}, "required": ["billingCycle", "amountDue"]}}, "required": ["subscriberId", "packageType", "channels", "billingInformation"], "title": "CableSubscription", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Develop a JSON object for a movie database entry, including properties like movieId, title, genre, director, and cast.", "Schema": {"properties": {"movieId": {"title": "Movie ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "genre": {"title": "Genre", "type": "string"}, "director": {"title": "Director", "type": "string"}, "cast": {"title": "Cast", "type": "array", "items": {"type": "string"}}}, "required": ["movieId", "title", "genre", "director", "cast"], "title": "MovieDatabaseEntry", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object for tracking viewer ratings and reviews for shows, including properties like showId, viewerId, rating, and reviewText.", "Schema": {"properties": {"showId": {"title": "Show ID", "type": "string"}, "viewerId": {"title": "Viewer ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "Review Text", "type": "string"}}, "required": ["showId", "viewerId", "rating", "reviewText"], "title": "ViewerRatingsReviews", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for a music playlist, including properties like playlistId, name, description, and tracks.", "Schema": {"properties": {"playlistId": {"title": "Playlist ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "description": {"title": "Description", "type": "string"}, "tracks": {"title": "Tracks", "type": "array", "items": {"type": "object", "properties": {"trackId": {"title": "Track ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "artist": {"title": "Artist", "type": "string"}}, "required": ["trackId", "title", "artist"]}}}, "required": ["playlistId", "name", "description", "tracks"], "title": "MusicPlaylist", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object for a video game inventory system, including properties like gameId, title, platform, availability, and price.", "Schema": {"properties": {"gameId": {"title": "Game ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "platform": {"title": "Platform", "type": "string"}, "availability": {"title": "Availability", "type": "boolean"}, "price": {"title": "Price", "type": "number"}}, "required": ["gameId", "title", "platform", "availability", "price"], "title": "VideoGameInventory", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Create a JSON object for a semiconductor product catalog entry, including properties like productID, productName, specifications, and price.", "Schema": {"properties": {"productID": {"title": "Product ID", "type": "string"}, "productName": {"title": "Product Name", "type": "string"}, "specifications": {"title": "Specifications", "type": "object", "properties": {"size": {"title": "Size", "type": "string"}, "weight": {"title": "Weight", "type": "string"}, "powerConsumption": {"title": "Power Consumption", "type": "string"}}, "required": ["size", "weight", "powerConsumption"]}, "price": {"title": "Price", "type": "number"}}, "required": ["productID", "productName", "specifications", "price"], "title": "SemiconductorProductCatalogEntry", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Develop a JSON object for tracking semiconductor equipment inventory, including properties like equipmentID, location, status, and lastMaintenanceDate.", "Schema": {"properties": {"equipmentID": {"title": "Equipment ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Available", "In Use", "Maintenance", "Decommissioned"]}, "lastMaintenanceDate": {"title": "Last Maintenance Date", "type": "string", "format": "date"}}, "required": ["equipmentID", "location", "status", "lastMaintenanceDate"], "title": "SemiconductorEquipmentInventory", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Construct a JSON object for a solar panel specification sheet, including properties like panelID, efficiency, warrantyPeriod, and manufacturer.", "Schema": {"properties": {"panelID": {"title": "Panel ID", "type": "string"}, "efficiency": {"title": "Efficiency", "type": "string"}, "warrantyPeriod": {"title": "Warranty Period", "type": "string"}, "manufacturer": {"title": "Manufacturer", "type": "string"}}, "required": ["panelID", "efficiency", "warrantyPeriod", "manufacturer"], "title": "SolarPanelSpecificationSheet", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Design a JSON object for a semiconductor manufacturing process log, including properties like processID, startTime, endTime, and yieldRate.", "Schema": {"properties": {"processID": {"title": "Process ID", "type": "string"}, "startTime": {"title": "Start Time", "type": "string", "format": "date-time"}, "endTime": {"title": "End Time", "type": "string", "format": "date-time"}, "yieldRate": {"title": "Yield Rate", "type": "number"}}, "required": ["processID", "startTime", "endTime", "yieldRate"], "title": "SemiconductorManufacturingProcessLog", "type": "object"}}
{"Category": "Semiconductors & Semiconductor Equipment", "SubCategory": "Semiconductors & Semiconductor Equipment", "Task": "Generate a JSON object for a semiconductor material safety data sheet, including properties like materialID, hazardInformation, handlingProcedures, and emergencyContact.", "Schema": {"properties": {"materialID": {"title": "Material ID", "type": "string"}, "hazardInformation": {"title": "Hazard Information", "type": "string"}, "handlingProcedures": {"title": "Handling Procedures", "type": "string"}, "emergencyContact": {"title": "Emergency Contact", "type": "string"}}, "required": ["materialID", "hazardInformation", "handlingProcedures", "emergencyContact"], "title": "SemiconductorMaterialSafetyDataSheet", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for a movie catalog entry, including properties like title, director, releaseDate, genre, and IMDB rating.", "Schema": {"properties": {"title": {"title": "Title", "type": "string"}, "director": {"title": "Director", "type": "string"}, "releaseDate": {"format": "date", "title": "ReleaseDate", "type": "string"}, "genre": {"title": "Genre", "type": "string"}, "imdbRating": {"title": "IMDB Rating", "type": "number", "minimum": 0, "maximum": 10}}, "required": ["title", "director", "releaseDate", "genre", "imdbRating"], "title": "MovieCatalogEntry", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Develop a JSON object for a music album, including properties such as albumName, artist, releaseYear, trackList, and genre.", "Schema": {"properties": {"albumName": {"title": "AlbumName", "type": "string"}, "artist": {"title": "Artist", "type": "string"}, "releaseYear": {"title": "ReleaseYear", "type": "integer", "minimum": 1900}, "trackList": {"type": "array", "items": {"type": "string"}, "title": "TrackList"}, "genre": {"title": "Genre", "type": "string"}}, "required": ["albumName", "artist", "releaseYear", "trackList", "genre"], "title": "MusicAlbum", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object for a TV show episode guide, with properties like episodeTitle, seasonNumber, episodeNumber, synopsis, and airDate.", "Schema": {"properties": {"episodeTitle": {"title": "EpisodeTitle", "type": "string"}, "seasonNumber": {"title": "SeasonNumber", "type": "integer"}, "episodeNumber": {"title": "EpisodeNumber", "type": "integer"}, "synopsis": {"title": "Synopsis", "type": "string"}, "airDate": {"format": "date", "title": "AirDate", "type": "string"}}, "required": ["episodeTitle", "seasonNumber", "episodeNumber", "synopsis", "airDate"], "title": "TvShowEpisodeGuide", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for a video game profile, including properties such as gameTitle, platform, releaseDate, developer, and ESRB rating.", "Schema": {"properties": {"gameTitle": {"title": "GameTitle", "type": "string"}, "platform": {"title": "Platform", "type": "string"}, "releaseDate": {"format": "date", "title": "ReleaseDate", "type": "string"}, "developer": {"title": "Developer", "type": "string"}, "esrbRating": {"title": "ESRB Rating", "type": "string"}}, "required": ["gameTitle", "platform", "releaseDate", "developer", "esrbRating"], "title": "VideoGameProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object representing a book review, with properties like bookTitle, author, reviewText, rating, and publicationDate.", "Schema": {"properties": {"bookTitle": {"title": "BookTitle", "type": "string"}, "author": {"title": "Author", "type": "string"}, "reviewText": {"title": "ReviewText", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "publicationDate": {"format": "date", "title": "PublicationDate", "type": "string"}}, "required": ["bookTitle", "author", "reviewText", "rating", "publicationDate"], "title": "BookReview", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for storing subscriber information for cable television services, including properties like subscriberId, name, address, and package details.", "Schema": {"properties": {"subscriberId": {"title": "Subscriber ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "packageDetails": {"title": "Package Details", "type": "object", "properties": {"packageName": {"title": "Package Name", "type": "string"}, "channels": {"title": "Channels", "type": "array", "items": {"type": "string"}}, "price": {"title": "Price", "type": "number"}}, "required": ["packageName", "channels", "price"]}}, "required": ["subscriberId", "name", "address", "packageDetails"], "title": "SubscriberInformation", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Develop a JSON schema for a program guide that includes properties such as programId, title, description, duration, and genre.", "Schema": {"properties": {"programId": {"title": "Program ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}, "duration": {"title": "Duration", "type": "string"}, "genre": {"title": "Genre", "type": "string"}}, "required": ["programId", "title", "description", "duration", "genre"], "title": "ProgramGuide", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object for tracking viewer ratings of shows, including properties like showId, rating, totalVotes, and viewerComments.", "Schema": {"properties": {"showId": {"title": "Show ID", "type": "string"}, "rating": {"title": "Rating", "type": "number"}, "totalVotes": {"title": "Total Votes", "type": "integer"}, "viewerComments": {"title": "Viewer Comments", "type": "array", "items": {"type": "string"}}}, "required": ["showId", "rating", "totalVotes"], "title": "ViewerRatings", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for a content distribution deal, including properties such as dealId, contentProvider, licensePeriod, and contentList.", "Schema": {"properties": {"dealId": {"title": "Deal ID", "type": "string"}, "contentProvider": {"title": "Content Provider", "type": "string"}, "licensePeriod": {"title": "License Period", "type": "object", "properties": {"startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["startDate", "endDate"]}, "contentList": {"title": "Content List", "type": "array", "items": {"type": "string"}}}, "required": ["dealId", "contentProvider", "licensePeriod"], "title": "ContentDistributionDeal", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object representing advertising campaign data, including properties like campaignId, targetAudience, budget, and adSlots.", "Schema": {"properties": {"campaignId": {"title": "Campaign ID", "type": "string"}, "targetAudience": {"title": "Target Audience", "type": "object", "properties": {"ageRange": {"title": "Age Range", "type": "string"}, "interests": {"title": "Interests", "type": "array", "items": {"type": "string"}}, "location": {"title": "Location", "type": "string"}}, "required": ["ageRange", "interests", "location"]}, "budget": {"title": "Budget", "type": "number"}, "adSlots": {"title": "Ad Slots", "type": "array", "items": {"type": "object", "properties": {"slotId": {"title": "Slot ID", "type": "string"}, "time": {"title": "Time", "type": "string"}, "duration": {"title": "Duration", "type": "string"}}, "required": ["slotId", "time", "duration"]}}}, "required": ["campaignId", "targetAudience", "budget", "adSlots"], "title": "AdvertisingCampaign", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for storing a newspaper article, including properties like title, author, publicationDate, and content.", "Schema": {"properties": {"title": {"title": "Title", "type": "string"}, "author": {"title": "Author", "type": "string"}, "publicationDate": {"format": "date", "title": "PublicationDate", "type": "string"}, "content": {"title": "Content", "type": "string"}}, "required": ["title", "author", "publicationDate", "content"], "title": "NewspaperArticle", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Develop a JSON schema for a magazine issue, with properties such as issueNumber, date, articles, and editor.", "Schema": {"properties": {"issueNumber": {"title": "IssueNumber", "type": "integer"}, "date": {"format": "date", "title": "Date", "type": "string"}, "articles": {"type": "array", "items": {"type": "object", "properties": {"title": {"type": "string"}, "author": {"type": "string"}}, "required": ["title", "author"]}, "title": "Articles"}, "editor": {"title": "Editor", "type": "string"}}, "required": ["issueNumber", "date", "articles", "editor"], "title": "MagazineIssue", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object representing an eBook, including properties like eBookTitle, author, ISBN, and genre.", "Schema": {"properties": {"eBookTitle": {"title": "EBookTitle", "type": "string"}, "author": {"title": "Author", "type": "string"}, "ISBN": {"title": "ISBN", "type": "string"}, "genre": {"title": "Genre", "type": "string"}}, "required": ["eBookTitle", "author", "ISBN", "genre"], "title": "EBook", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for a book review, including properties such as reviewTitle, bookTitle, reviewer, rating, and reviewText.", "Schema": {"properties": {"reviewTitle": {"title": "ReviewTitle", "type": "string"}, "bookTitle": {"title": "BookTitle", "type": "string"}, "reviewer": {"title": "Reviewer", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "reviewText": {"title": "ReviewText", "type": "string"}}, "required": ["reviewTitle", "bookTitle", "reviewer", "rating", "reviewText"], "title": "BookReview", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object representing a publisher's catalog entry, including properties like catalogID, publisherName, books, and publicationYear.", "Schema": {"properties": {"catalogID": {"title": "CatalogID", "type": "string"}, "publisherName": {"title": "PublisherName", "type": "string"}, "books": {"type": "array", "items": {"type": "object", "properties": {"title": {"type": "string"}, "author": {"type": "string"}, "ISBN": {"type": "string"}}, "required": ["title", "author", "ISBN"]}, "title": "Books"}, "publicationYear": {"title": "PublicationYear", "type": "integer"}}, "required": ["catalogID", "publisherName", "books", "publicationYear"], "title": "PublisherCatalog", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Create a JSON object for storing user profiles in a mobile gaming application, including properties like username, level, and achievements.", "Schema": {"properties": {"username": {"title": "Username", "type": "string"}, "level": {"title": "Level", "type": "integer"}, "achievements": {"items": {"type": "string"}, "title": "Achievements", "type": "array"}}, "required": ["username", "level", "achievements"], "title": "UserProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Develop a JSON schema for representing in-game purchases, including properties such as itemID, itemName, price, and currency.", "Schema": {"properties": {"itemID": {"title": "ItemID", "type": "string"}, "itemName": {"title": "ItemName", "type": "string"}, "price": {"title": "Price", "type": "number"}, "currency": {"title": "Currency", "type": "string"}}, "required": ["itemID", "itemName", "price", "currency"], "title": "InGamePurchase", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Construct a JSON object for tracking user game sessions, including properties like sessionID, startTime, endTime, and duration.", "Schema": {"properties": {"sessionID": {"title": "SessionID", "type": "string"}, "startTime": {"format": "date-time", "title": "StartTime", "type": "string"}, "endTime": {"format": "date-time", "title": "EndTime", "type": "string"}, "duration": {"title": "Duration", "type": "integer"}}, "required": ["sessionID", "startTime", "endTime", "duration"], "title": "GameSession", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Design a JSON object for a leaderboard entry, including properties such as playerID, score, rank, and timestamp.", "Schema": {"properties": {"playerID": {"title": "PlayerID", "type": "string"}, "score": {"title": "Score", "type": "integer"}, "rank": {"title": "Rank", "type": "integer"}, "timestamp": {"format": "date-time", "title": "Timestamp", "type": "string"}}, "required": ["playerID", "score", "rank", "timestamp"], "title": "LeaderboardEntry", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Generate a JSON object representing educational software settings, including properties like difficultyLevel, subjectArea, and userProgress.", "Schema": {"properties": {"difficultyLevel": {"title": "DifficultyLevel", "type": "string"}, "subjectArea": {"title": "SubjectArea", "type": "string"}, "userProgress": {"title": "UserProgress", "type": "object", "properties": {"percentageComplete": {"title": "PercentageComplete", "type": "number"}, "currentModule": {"title": "CurrentModule", "type": "string"}}, "required": ["percentageComplete", "currentModule"]}}, "required": ["difficultyLevel", "subjectArea", "userProgress"], "title": "EducationalSoftwareSettings", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Create a JSON object for storing movie details, including properties like title, releaseDate, genre, director, and cast members.", "Schema": {"properties": {"title": {"title": "Title", "type": "string"}, "releaseDate": {"title": "ReleaseDate", "type": "string", "format": "date"}, "genre": {"title": "Genre", "type": "string"}, "director": {"title": "Director", "type": "string"}, "castMembers": {"title": "CastMembers", "type": "array", "items": {"type": "string"}}}, "required": ["title", "releaseDate", "genre", "director", "castMembers"], "title": "MovieDetails", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Develop a JSON schema for a music album, including properties such as albumName, artist, releaseYear, genre, and trackList.", "Schema": {"properties": {"albumName": {"title": "AlbumName", "type": "string"}, "artist": {"title": "Artist", "type": "string"}, "releaseYear": {"title": "ReleaseYear", "type": "integer"}, "genre": {"title": "Genre", "type": "string"}, "trackList": {"title": "TrackList", "type": "array", "items": {"type": "string"}}}, "required": ["albumName", "artist", "releaseYear", "genre", "trackList"], "title": "MusicAlbum", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Construct a JSON object for a television show, including properties like showName, seasons, episodes, network, and showrunners.", "Schema": {"properties": {"showName": {"title": "ShowName", "type": "string"}, "seasons": {"title": "Seasons", "type": "integer"}, "episodes": {"title": "Episodes", "type": "integer"}, "network": {"title": "Network", "type": "string"}, "showrunners": {"title": "Showrunners", "type": "array", "items": {"type": "string"}}}, "required": ["showName", "seasons", "episodes", "network", "showrunners"], "title": "TelevisionShow", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Design a JSON object for a live theater performance, including properties such as performanceTitle, venue, duration, director, and cast.", "Schema": {"properties": {"performanceTitle": {"title": "PerformanceTitle", "type": "string"}, "venue": {"title": "Venue", "type": "string"}, "duration": {"title": "Duration", "type": "string"}, "director": {"title": "Director", "type": "string"}, "cast": {"title": "Cast", "type": "array", "items": {"type": "string"}}}, "required": ["performanceTitle", "venue", "duration", "director", "cast"], "title": "LiveTheaterPerformance", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Generate a JSON object representing a sports team profile, including properties like teamName, sport, league, coach, and roster of players.", "Schema": {"properties": {"teamName": {"title": "TeamName", "type": "string"}, "sport": {"title": "Sport", "type": "string"}, "league": {"title": "League", "type": "string"}, "coach": {"title": "Coach", "type": "string"}, "roster": {"title": "Roster", "type": "array", "items": {"type": "object", "properties": {"playerName": {"title": "PlayerName", "type": "string"}, "position": {"title": "Position", "type": "string"}}, "required": ["playerName", "position"]}}}, "required": ["teamName", "sport", "league", "coach", "roster"], "title": "SportsTeamProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Create a JSON object for querying a movie database, including properties like movieTitle, genre, releaseYear, and director.", "Schema": {"properties": {"movieTitle": {"title": "Movie Title", "type": "string"}, "genre": {"title": "Genre", "type": "string"}, "releaseYear": {"title": "Release Year", "type": "integer", "minimum": 1878}, "director": {"title": "Director", "type": "string"}}, "required": ["movieTitle", "genre", "releaseYear", "director"], "title": "MovieQuery", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Develop a JSON object for a music track search, with properties such as trackName, artist, album, and releaseDate.", "Schema": {"properties": {"trackName": {"title": "Track Name", "type": "string"}, "artist": {"title": "Artist", "type": "string"}, "album": {"title": "Album", "type": "string"}, "releaseDate": {"title": "Release Date", "type": "string", "format": "date"}}, "required": ["trackName", "artist", "album", "releaseDate"], "title": "MusicTrackSearch", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Construct a JSON object for retrieving TV show details, including properties like showTitle, seasons, network, and cast members.", "Schema": {"properties": {"showTitle": {"title": "Show Title", "type": "string"}, "seasons": {"title": "Seasons", "type": "integer", "minimum": 1}, "network": {"title": "Network", "type": "string"}, "castMembers": {"title": "Cast Members", "type": "array", "items": {"type": "string"}}}, "required": ["showTitle", "seasons", "network", "castMembers"], "title": "TVShowDetails", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Design a JSON object for a video game information query, including properties like gameTitle, platform, developer, and ESRB rating.", "Schema": {"properties": {"gameTitle": {"title": "Game Title", "type": "string"}, "platform": {"title": "Platform", "type": "string"}, "developer": {"title": "Developer", "type": "string"}, "esrbRating": {"title": "ESRB Rating", "type": "string"}}, "required": ["gameTitle", "platform", "developer", "esrbRating"], "title": "VideoGameInfoQuery", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Generate a JSON object for an event listing query, with properties such as eventName, venue, date, and performers.", "Schema": {"properties": {"eventName": {"title": "Event Name", "type": "string"}, "venue": {"title": "Venue", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "performers": {"title": "Performers", "type": "array", "items": {"type": "string"}}}, "required": ["eventName", "venue", "date", "performers"], "title": "EventListingQuery", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Create a JSON object for storing user profile data for a social media platform, including properties like username, email, date of birth, and bio.", "Schema": {"properties": {"username": {"title": "Username", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "dateOfBirth": {"title": "DateOfBirth", "type": "string", "format": "date"}, "bio": {"title": "Bio", "type": "string"}}, "required": ["username", "email", "dateOfBirth"], "title": "UserProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Develop a JSON schema for an online review, including properties such as reviewerID, rating, comment, and timestamp.", "Schema": {"properties": {"reviewerID": {"title": "ReviewerID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comment": {"title": "Comment", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}}, "required": ["reviewerID", "rating", "timestamp"], "title": "OnlineReview", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Construct a JSON object for an advertisement click event, including properties like adID, userID, clickTimestamp, and clickLocation.", "Schema": {"properties": {"adID": {"title": "AdID", "type": "string"}, "userID": {"title": "UserID", "type": "string"}, "clickTimestamp": {"title": "ClickTimestamp", "type": "string", "format": "date-time"}, "clickLocation": {"title": "ClickLocation", "type": "string"}}, "required": ["adID", "userID", "clickTimestamp"], "title": "AdClickEvent", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Design a JSON object for tracking user engagement metrics on a content platform, including properties such as contentID, userID, engagementType, and duration.", "Schema": {"properties": {"contentID": {"title": "ContentID", "type": "string"}, "userID": {"title": "UserID", "type": "string"}, "engagementType": {"title": "EngagementType", "type": "string", "enum": ["view", "like", "share", "comment"]}, "duration": {"title": "Duration", "type": "integer", "description": "Duration in seconds"}}, "required": ["contentID", "userID", "engagementType"], "title": "UserEngagementMetrics", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Generate a JSON object representing a content item on a proprietary platform, including properties like contentID, title, creatorID, publishDate, and tags.", "Schema": {"properties": {"contentID": {"title": "ContentID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "creatorID": {"title": "CreatorID", "type": "string"}, "publishDate": {"title": "PublishDate", "type": "string", "format": "date-time"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}}}, "required": ["contentID", "title", "creatorID", "publishDate"], "title": "ContentItem", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Create a JSON object for a movie database entry, including properties like title, director, releaseDate, genre, and IMDB rating.", "Schema": {"properties": {"title": {"title": "Title", "type": "string"}, "director": {"title": "Director", "type": "string"}, "releaseDate": {"format": "date", "title": "ReleaseDate", "type": "string"}, "genre": {"title": "Genre", "type": "string"}, "imdbRating": {"title": "IMDB Rating", "type": "number", "minimum": 0, "maximum": 10}}, "required": ["title", "director", "releaseDate", "genre", "imdbRating"], "title": "MovieDatabaseEntry", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Generate a JSON object for a music album entry, with properties such as albumName, artist, releaseYear, trackList, and recordLabel.", "Schema": {"properties": {"albumName": {"title": "AlbumName", "type": "string"}, "artist": {"title": "Artist", "type": "string"}, "releaseYear": {"title": "ReleaseYear", "type": "integer"}, "trackList": {"type": "array", "items": {"type": "string"}, "title": "TrackList"}, "recordLabel": {"title": "RecordLabel", "type": "string"}}, "required": ["albumName", "artist", "releaseYear", "trackList", "recordLabel"], "title": "MusicAlbumEntry", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Construct a JSON object for a video game release, including properties like gameTitle, platform, developer, publisher, and ESRB rating.", "Schema": {"properties": {"gameTitle": {"title": "GameTitle", "type": "string"}, "platform": {"title": "Platform", "type": "string"}, "developer": {"title": "Developer", "type": "string"}, "publisher": {"title": "Publisher", "type": "string"}, "esrbRating": {"title": "ESRB Rating", "type": "string"}}, "required": ["gameTitle", "platform", "developer", "publisher", "esrbRating"], "title": "VideoGameRelease", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Design a JSON object for a book publication, with properties such as title, author, ISBN, publisher, and publicationDate.", "Schema": {"properties": {"title": {"title": "Title", "type": "string"}, "author": {"title": "Author", "type": "string"}, "ISBN": {"title": "ISBN", "type": "string", "pattern": "^(?:ISBN(?:-13)?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$"}, "publisher": {"title": "Publisher", "type": "string"}, "publicationDate": {"format": "date", "title": "PublicationDate", "type": "string"}}, "required": ["title", "author", "ISBN", "publisher", "publicationDate"], "title": "BookPublication", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Media", "Task": "Formulate a JSON object for a TV show episode guide, including properties like episodeTitle, seasonNumber, episodeNumber, synopsis, and airDate.", "Schema": {"properties": {"episodeTitle": {"title": "EpisodeTitle", "type": "string"}, "seasonNumber": {"title": "SeasonNumber", "type": "integer"}, "episodeNumber": {"title": "EpisodeNumber", "type": "integer"}, "synopsis": {"title": "Synopsis", "type": "string"}, "airDate": {"format": "date", "title": "AirDate", "type": "string"}}, "required": ["episodeTitle", "seasonNumber", "episodeNumber", "synopsis", "airDate"], "title": "TvShowEpisodeGuide", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Create a JSON object for storing electricity consumption data, with properties like customerID, consumptionDate, kWhUsed, and peakDemand.", "Schema": {"properties": {"customerID": {"title": "CustomerID", "type": "string"}, "consumptionDate": {"title": "ConsumptionDate", "type": "string", "format": "date"}, "kWhUsed": {"title": "KwhUsed", "type": "number"}, "peakDemand": {"title": "PeakDemand", "type": "number"}}, "required": ["customerID", "consumptionDate", "kWhUsed", "peakDemand"], "title": "ElectricityConsumption", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Develop a JSON schema for outage reporting, including properties such as reportID, startTime, endTime, affectedAreas, and cause.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "startTime": {"title": "StartTime", "type": "string", "format": "date-time"}, "endTime": {"title": "EndTime", "type": "string", "format": "date-time"}, "affectedAreas": {"title": "AffectedAreas", "type": "array", "items": {"type": "string"}}, "cause": {"title": "Cause", "type": "string"}}, "required": ["reportID", "startTime", "endTime", "affectedAreas", "cause"], "title": "OutageReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Construct a JSON object for tracking power plant maintenance schedules, including properties like plantID, maintenanceDate, typeOfMaintenance, and status.", "Schema": {"properties": {"plantID": {"title": "PlantID", "type": "string"}, "maintenanceDate": {"title": "MaintenanceDate", "type": "string", "format": "date"}, "typeOfMaintenance": {"title": "TypeOfMaintenance", "type": "string"}, "status": {"title": "Status", "type": "string"}}, "required": ["plantID", "maintenanceDate", "typeOfMaintenance", "status"], "title": "PowerPlantMaintenance", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Design a JSON object for electric utility billing information, including properties such as accountNumber, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"accountNumber": {"title": "AccountNumber", "type": "string"}, "billingPeriod": {"title": "BillingPeriod", "type": "string"}, "amountDue": {"title": "AmountDue", "type": "number"}, "paymentStatus": {"title": "PaymentStatus", "type": "string"}}, "required": ["accountNumber", "billingPeriod", "amountDue", "paymentStatus"], "title": "UtilityBillingInfo", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Generate a JSON object representing a grid load forecast, including properties like forecastDate, expectedLoad, peakLoadTime, and recommendedActions.", "Schema": {"properties": {"forecastDate": {"title": "ForecastDate", "type": "string", "format": "date"}, "expectedLoad": {"title": "ExpectedLoad", "type": "number"}, "peakLoadTime": {"title": "PeakLoadTime", "type": "string", "format": "time"}, "recommendedActions": {"title": "RecommendedActions", "type": "array", "items": {"type": "string"}}}, "required": ["forecastDate", "expectedLoad", "peakLoadTime", "recommendedActions"], "title": "GridLoadForecast", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Create a JSON object for storing user preferences for interactive home entertainment, including properties like preferredGenres, platform, and contentRating.", "Schema": {"properties": {"preferredGenres": {"items": {"type": "string"}, "title": "Preferred Genres", "type": "array"}, "platform": {"title": "Platform", "type": "string"}, "contentRating": {"title": "Content Rating", "type": "string"}}, "required": ["preferredGenres", "platform", "contentRating"], "title": "UserPreferences", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Develop a JSON schema for a movie database query, including properties such as title, releaseYear, and director.", "Schema": {"properties": {"title": {"title": "Title", "type": "string"}, "releaseYear": {"title": "Release Year", "type": "integer"}, "director": {"title": "Director", "type": "string"}}, "required": ["title", "releaseYear", "director"], "title": "MovieQuery", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Construct a JSON object for a music playlist, including properties like playlistName, songs, and duration.", "Schema": {"properties": {"playlistName": {"title": "Playlist Name", "type": "string"}, "songs": {"items": {"type": "object", "properties": {"title": {"type": "string"}, "artist": {"type": "string"}, "duration": {"type": "integer"}}, "required": ["title", "artist", "duration"]}, "title": "Songs", "type": "array"}, "duration": {"title": "Total Duration", "type": "integer"}}, "required": ["playlistName", "songs"], "title": "MusicPlaylist", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Design a JSON object for a video game user profile, including properties such as username, gameStatistics, and achievements.", "Schema": {"properties": {"username": {"title": "Username", "type": "string"}, "gameStatistics": {"type": "object", "properties": {"totalPlayTime": {"type": "integer", "title": "Total Play Time"}, "highestScore": {"type": "integer", "title": "Highest Score"}}, "title": "Game Statistics"}, "achievements": {"items": {"type": "string"}, "title": "Achievements", "type": "array"}}, "required": ["username", "gameStatistics"], "title": "VideoGameUserProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Entertainment", "Task": "Generate a JSON object representing a virtual event ticket, including properties like eventTitle, date, venue, and seatNumber.", "Schema": {"properties": {"eventTitle": {"title": "Event Title", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "venue": {"title": "Venue", "type": "string"}, "seatNumber": {"title": "Seat Number", "type": "string"}}, "required": ["eventTitle", "date", "venue", "seatNumber"], "title": "VirtualEventTicket", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Create a JSON object for querying customer gas usage data, including properties like customerID, billingPeriod, usageAmount, and unitOfMeasure.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string", "pattern": "^\\d{4}-\\d{2}$"}, "usageAmount": {"title": "Usage Amount", "type": "number"}, "unitOfMeasure": {"title": "Unit of Measure", "type": "string", "enum": ["Cubic Meters", "Cubic Feet"]}}, "required": ["customerID", "billingPeriod", "usageAmount", "unitOfMeasure"], "title": "CustomerGasUsageQuery", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Develop a JSON object for reporting a gas leak incident, including properties such as incidentID, location, severity, and reportTime.", "Schema": {"properties": {"incidentID": {"title": "Incident ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "severity": {"title": "Severity", "type": "string", "enum": ["Minor", "Moderate", "Severe"]}, "reportTime": {"title": "Report Time", "type": "string", "format": "date-time"}}, "required": ["incidentID", "location", "severity", "reportTime"], "title": "GasLeakIncidentReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Construct a JSON object for a gas meter reading submission, including properties like meterID, readDate, readValue, and technicianID.", "Schema": {"properties": {"meterID": {"title": "Meter ID", "type": "string"}, "readDate": {"title": "Read Date", "type": "string", "format": "date"}, "readValue": {"title": "Read Value", "type": "number"}, "technicianID": {"title": "Technician ID", "type": "string"}}, "required": ["meterID", "readDate", "readValue", "technicianID"], "title": "GasMeterReadingSubmission", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Design a JSON object for tracking gas utility work orders, including properties such as workOrderID, assignedTo, status, and expectedCompletionDate.", "Schema": {"properties": {"workOrderID": {"title": "Work Order ID", "type": "string"}, "assignedTo": {"title": "Assigned To", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Completed", "Cancelled"]}, "expectedCompletionDate": {"title": "Expected Completion Date", "type": "string", "format": "date"}}, "required": ["workOrderID", "assignedTo", "status", "expectedCompletionDate"], "title": "GasUtilityWorkOrderTracking", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Generate a JSON object for a new gas service connection request, including properties like requestID, customerName, serviceAddress, and connectionDate.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "customerName": {"title": "Customer Name", "type": "string"}, "serviceAddress": {"title": "Service Address", "type": "string"}, "connectionDate": {"title": "Connection Date", "type": "string", "format": "date"}}, "required": ["requestID", "customerName", "serviceAddress", "connectionDate"], "title": "NewGasServiceConnectionRequest", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Create a JSON object for a customer's electricity usage report, including properties like customerID, billingPeriod, kWhUsed, and totalCost.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string", "pattern": "^\\d{4}-\\d{2}$"}, "kWhUsed": {"title": "Kilowatt Hours Used", "type": "number"}, "totalCost": {"title": "Total Cost", "type": "number"}}, "required": ["customerID", "billingPeriod", "kWhUsed", "totalCost"], "title": "ElectricityUsageReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Develop a JSON object for outage reporting, including properties such as reportID, affectedArea, startTime, endTime, and cause.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "affectedArea": {"title": "Affected Area", "type": "string"}, "startTime": {"title": "Start Time", "type": "string", "format": "date-time"}, "endTime": {"title": "End Time", "type": "string", "format": "date-time"}, "cause": {"title": "Cause", "type": "string"}}, "required": ["reportID", "affectedArea", "startTime", "cause"], "title": "OutageReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Construct a JSON object for a new service connection request, including customer details, service address, and expected installation date.", "Schema": {"properties": {"customerDetails": {"title": "Customer Details", "type": "object", "properties": {"customerName": {"title": "Customer Name", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}}, "required": ["customerName", "customerID"]}, "serviceAddress": {"title": "Service Address", "type": "string"}, "expectedInstallationDate": {"title": "Expected Installation Date", "type": "string", "format": "date"}}, "required": ["customerDetails", "serviceAddress", "expectedInstallationDate"], "title": "NewServiceConnectionRequest", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Design a JSON object for tracking power plant maintenance schedules, including properties like plantID, maintenanceType, scheduledDate, and status.", "Schema": {"properties": {"plantID": {"title": "Power Plant ID", "type": "string"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "scheduledDate": {"title": "Scheduled Date", "type": "string", "format": "date"}, "status": {"title": "Status", "type": "string", "enum": ["Scheduled", "In Progress", "Completed", "Postponed"]}}, "required": ["plantID", "maintenanceType", "scheduledDate", "status"], "title": "PowerPlantMaintenanceSchedule", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Electric Utilities", "Task": "Generate a JSON object for electric meter readings submission, including meterID, readingDate, kWhReading, and photoProof.", "Schema": {"properties": {"meterID": {"title": "Meter ID", "type": "string"}, "readingDate": {"title": "Reading Date", "type": "string", "format": "date"}, "kWhReading": {"title": "Kilowatt Hour Reading", "type": "number"}, "photoProof": {"title": "Photo Proof", "type": "string", "contentEncoding": "base64", "contentMediaType": "image/jpeg"}}, "required": ["meterID", "readingDate", "kWhReading"], "title": "ElectricMeterReadingSubmission", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Create a JSON object for a utility outage report, including properties like reportID, startTime, estimatedResolutionTime, affectedAreas, and cause.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "startTime": {"title": "Start Time", "type": "string", "format": "date-time"}, "estimatedResolutionTime": {"title": "Estimated Resolution Time", "type": "string", "format": "date-time"}, "affectedAreas": {"title": "Affected Areas", "type": "array", "items": {"type": "string"}}, "cause": {"title": "Cause", "type": "string"}}, "required": ["reportID", "startTime", "affectedAreas"], "title": "UtilityOutageReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Develop a JSON object for customer utility usage, including properties like customerID, billingPeriod, electricityUsage, waterUsage, and totalCost.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string"}, "electricityUsage": {"title": "Electricity Usage", "type": "number"}, "waterUsage": {"title": "Water Usage", "type": "number"}, "totalCost": {"title": "Total Cost", "type": "number"}}, "required": ["customerID", "billingPeriod", "electricityUsage", "waterUsage", "totalCost"], "title": "CustomerUtilityUsage", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Construct a JSON object for a utility service request, including properties like requestID, customerID, serviceType, requestDate, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "requestDate": {"title": "Request Date", "type": "string", "format": "date"}, "status": {"title": "Status", "type": "string"}}, "required": ["requestID", "customerID", "serviceType", "requestDate"], "title": "UtilityServiceRequest", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Design a JSON object for tracking utility maintenance schedules, including properties like scheduleID, utilityType, maintenanceDate, crewAssigned, and notes.", "Schema": {"properties": {"scheduleID": {"title": "Schedule ID", "type": "string"}, "utilityType": {"title": "Utility Type", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "crewAssigned": {"title": "Crew Assigned", "type": "string"}, "notes": {"title": "Notes", "type": "string"}}, "required": ["scheduleID", "utilityType", "maintenanceDate", "crewAssigned"], "title": "UtilityMaintenanceSchedule", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Generate a JSON object for utility billing inquiries, including properties like inquiryID, customerID, inquiryDate, issueDescription, and resolutionStatus.", "Schema": {"properties": {"inquiryID": {"title": "Inquiry ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "inquiryDate": {"title": "Inquiry Date", "type": "string", "format": "date"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["inquiryID", "customerID", "inquiryDate", "issueDescription"], "title": "UtilityBillingInquiry", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Create a JSON object for a gas meter reading entry, including properties like meterID, readingDate, and usage in cubic feet.", "Schema": {"properties": {"meterID": {"title": "Meter ID", "type": "string"}, "readingDate": {"title": "Reading Date", "type": "string", "format": "date"}, "usage": {"title": "Usage", "type": "number"}}, "required": ["meterID", "readingDate", "usage"], "title": "GasMeterReading", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Develop a JSON object for reporting a gas leak incident, with properties such as incidentID, reportedTime, location, and severity level.", "Schema": {"properties": {"incidentID": {"title": "Incident ID", "type": "string"}, "reportedTime": {"title": "Reported Time", "type": "string", "format": "date-time"}, "location": {"title": "Location", "type": "string"}, "severityLevel": {"title": "Severity Level", "type": "string"}}, "required": ["incidentID", "reportedTime", "location", "severityLevel"], "title": "GasLeakIncident", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Construct a JSON object for a customer's gas service request, including properties like requestID, customerID, serviceType, and requestedDate.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string"}, "requestedDate": {"title": "Requested Date", "type": "string", "format": "date"}}, "required": ["requestID", "customerID", "serviceType", "requestedDate"], "title": "GasServiceRequest", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Design a JSON object for tracking gas utility maintenance schedules, with properties such as scheduleID, maintenanceDate, equipmentID, and maintenanceType.", "Schema": {"properties": {"scheduleID": {"title": "Schedule ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "equipmentID": {"title": "Equipment ID", "type": "string"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}}, "required": ["scheduleID", "maintenanceDate", "equipmentID", "maintenanceType"], "title": "GasUtilityMaintenanceSchedule", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Gas Utilities", "Task": "Generate a JSON object for a gas utility billing record, including properties like billID, customerID, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"billID": {"title": "Bill ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string"}, "amountDue": {"title": "Amount Due", "type": "number"}, "paymentStatus": {"title": "Payment Status", "type": "string"}}, "required": ["billID", "customerID", "billingPeriod", "amountDue", "paymentStatus"], "title": "GasUtilityBillingRecord", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Create a JSON object for a customer's water usage data, including properties like customerID, meterReading, usageDate, and usageAmount.", "Schema": {"properties": {"customerID": {"title": "CustomerID", "type": "string"}, "meterReading": {"title": "MeterReading", "type": "number"}, "usageDate": {"format": "date", "title": "UsageDate", "type": "string"}, "usageAmount": {"title": "UsageAmount", "type": "number"}}, "required": ["customerID", "meterReading", "usageDate", "usageAmount"], "title": "WaterUsageData", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Develop a JSON schema for a water quality report, including properties such as reportID, collectionDate, pH, contaminants, and safetyLevel.", "Schema": {"properties": {"reportID": {"title": "ReportID", "type": "string"}, "collectionDate": {"format": "date", "title": "CollectionDate", "type": "string"}, "pH": {"title": "PH", "type": "number"}, "contaminants": {"items": {"type": "string"}, "title": "Contaminants", "type": "array"}, "safetyLevel": {"title": "SafetyLevel", "type": "string"}}, "required": ["reportID", "collectionDate", "pH", "contaminants", "safetyLevel"], "title": "WaterQualityReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Construct a JSON object for tracking water supply sources, including properties like sourceID, sourceName, location, capacity, and currentLevel.", "Schema": {"properties": {"sourceID": {"title": "SourceID", "type": "string"}, "sourceName": {"title": "SourceName", "type": "string"}, "location": {"title": "Location", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "currentLevel": {"title": "CurrentLevel", "type": "number"}}, "required": ["sourceID", "sourceName", "location", "capacity", "currentLevel"], "title": "WaterSupplySource", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Design a JSON object for a water utility billing record, including properties such as billID, customerID, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"billID": {"title": "BillID", "type": "string"}, "customerID": {"title": "CustomerID", "type": "string"}, "billingPeriod": {"title": "BillingPeriod", "type": "string"}, "amountDue": {"title": "AmountDue", "type": "number"}, "paymentStatus": {"title": "PaymentStatus", "type": "string"}}, "required": ["billID", "customerID", "billingPeriod", "amountDue", "paymentStatus"], "title": "BillingRecord", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Generate a JSON object representing a water outage incident, including properties like incidentID, startTime, estimatedResolutionTime, affectedAreas, and cause.", "Schema": {"properties": {"incidentID": {"title": "IncidentID", "type": "string"}, "startTime": {"format": "date-time", "title": "StartTime", "type": "string"}, "estimatedResolutionTime": {"format": "date-time", "title": "EstimatedResolutionTime", "type": "string"}, "affectedAreas": {"items": {"type": "string"}, "title": "AffectedAreas", "type": "array"}, "cause": {"title": "Cause", "type": "string"}}, "required": ["incidentID", "startTime", "estimatedResolutionTime", "affectedAreas", "cause"], "title": "WaterOutageIncident", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Create a JSON object for storing utility customer details, including properties like customerID, fullName, address, and utilityAccounts.", "Schema": {"properties": {"customerID": {"title": "Customer ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "utilityAccounts": {"title": "Utility Accounts", "type": "array", "items": {"type": "object", "properties": {"accountType": {"title": "Account Type", "type": "string", "enum": ["Electric", "Gas", "Water"]}, "accountNumber": {"title": "Account Number", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Active", "Closed"]}}, "required": ["accountType", "accountNumber", "status"]}}}, "required": ["customerID", "fullName", "address", "utilityAccounts"], "title": "CustomerDetails", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Develop a JSON object for a utility bill, including properties such as billID, customerID, billingPeriod, amountDue, and paymentStatus.", "Schema": {"properties": {"billID": {"title": "Bill ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "billingPeriod": {"title": "Billing Period", "type": "string", "pattern": "^\\d{4}-\\d{2}$"}, "amountDue": {"title": "Amount Due", "type": "number"}, "paymentStatus": {"title": "Payment Status", "type": "string", "enum": ["Paid", "Unpaid", "Overdue"]}}, "required": ["billID", "customerID", "billingPeriod", "amountDue", "paymentStatus"], "title": "UtilityBill", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Construct a JSON object for tracking utility outages, with properties like outageID, affectedAreas, startTime, estimatedResolutionTime, and cause.", "Schema": {"properties": {"outageID": {"title": "Outage ID", "type": "string"}, "affectedAreas": {"title": "Affected Areas", "type": "array", "items": {"type": "string"}}, "startTime": {"title": "Start Time", "type": "string", "format": "date-time"}, "estimatedResolutionTime": {"title": "Estimated Resolution Time", "type": "string", "format": "date-time"}, "cause": {"title": "Cause", "type": "string"}}, "required": ["outageID", "affectedAreas", "startTime", "estimatedResolutionTime", "cause"], "title": "UtilityOutage", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Design a JSON object for utility service requests, including properties such as requestID, customerID, serviceType, requestDate, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "serviceType": {"title": "Service Type", "type": "string", "enum": ["New Connection", "Disconnection", "Maintenance", "Complaint"]}, "requestDate": {"title": "Request Date", "type": "string", "format": "date"}, "status": {"title": "Status", "type": "string", "enum": ["Received", "In Progress", "Completed", "Cancelled"]}}, "required": ["requestID", "customerID", "serviceType", "requestDate", "status"], "title": "ServiceRequest", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Multi-Utilities", "Task": "Generate a JSON object for utility meter readings, with properties like meterID, customerID, readingDate, readingValue, and unitOfMeasure.", "Schema": {"properties": {"meterID": {"title": "Meter ID", "type": "string"}, "customerID": {"title": "Customer ID", "type": "string"}, "readingDate": {"title": "Reading Date", "type": "string", "format": "date"}, "readingValue": {"title": "Reading Value", "type": "number"}, "unitOfMeasure": {"title": "Unit of Measure", "type": "string", "enum": ["kWh", "ccf", "gallons"]}}, "required": ["meterID", "customerID", "readingDate", "readingValue", "unitOfMeasure"], "title": "MeterReading", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Create a JSON object for a water quality report, including properties like location, reportDate, pH level, contaminants, and safetyStatus.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "reportDate": {"title": "ReportDate", "type": "string", "format": "date"}, "pHLevel": {"title": "PH Level", "type": "number"}, "contaminants": {"title": "Contaminants", "type": "array", "items": {"type": "string"}}, "safetyStatus": {"title": "SafetyStatus", "type": "string", "enum": ["Safe", "Unsafe", "Conditionally Safe"]}}, "required": ["location", "reportDate", "pHLevel", "safetyStatus"], "title": "WaterQualityReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Develop a JSON object for tracking water usage per household, including properties like householdID, meterReading, billingPeriod, and usageInGallons.", "Schema": {"properties": {"householdID": {"title": "HouseholdID", "type": "string"}, "meterReading": {"title": "MeterReading", "type": "number"}, "billingPeriod": {"title": "BillingPeriod", "type": "string"}, "usageInGallons": {"title": "UsageInGallons", "type": "number"}}, "required": ["householdID", "meterReading", "billingPeriod", "usageInGallons"], "title": "WaterUsage", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Construct a JSON object for a water outage incident, detailing properties such as incidentID, startTime, estimatedResolutionTime, affectedAreas, and cause.", "Schema": {"properties": {"incidentID": {"title": "IncidentID", "type": "string"}, "startTime": {"title": "StartTime", "type": "string", "format": "date-time"}, "estimatedResolutionTime": {"title": "EstimatedResolutionTime", "type": "string", "format": "date-time"}, "affectedAreas": {"title": "AffectedAreas", "type": "array", "items": {"type": "string"}}, "cause": {"title": "Cause", "type": "string"}}, "required": ["incidentID", "startTime", "affectedAreas", "cause"], "title": "WaterOutageIncident", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Design a JSON object for water utility customer feedback, including properties like feedbackID, customerID, submissionDate, comments, and satisfactionRating.", "Schema": {"properties": {"feedbackID": {"title": "FeedbackID", "type": "string"}, "customerID": {"title": "CustomerID", "type": "string"}, "submissionDate": {"title": "SubmissionDate", "type": "string", "format": "date"}, "comments": {"title": "Comments", "type": "string"}, "satisfactionRating": {"title": "SatisfactionRating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackID", "customerID", "submissionDate", "satisfactionRating"], "title": "CustomerFeedback", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Water Utilities", "Task": "Generate a JSON object for a water supply forecast, including properties like forecastDate, region, expectedDemand, expectedSupply, and advisoryNotes.", "Schema": {"properties": {"forecastDate": {"title": "ForecastDate", "type": "string", "format": "date"}, "region": {"title": "Region", "type": "string"}, "expectedDemand": {"title": "ExpectedDemand", "type": "number"}, "expectedSupply": {"title": "ExpectedSupply", "type": "number"}, "advisoryNotes": {"title": "AdvisoryNotes", "type": "string"}}, "required": ["forecastDate", "region", "expectedDemand", "expectedSupply"], "title": "WaterSupplyForecast", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Create a JSON object for storing IPP company profiles, including properties like companyName, operationalRegion, capacityMW, and primaryEnergySource.", "Schema": {"properties": {"companyName": {"title": "Company Name", "type": "string"}, "operationalRegion": {"title": "Operational Region", "type": "string"}, "capacityMW": {"title": "Capacity (MW)", "type": "number"}, "primaryEnergySource": {"title": "Primary Energy Source", "type": "string"}}, "required": ["companyName", "operationalRegion", "capacityMW", "primaryEnergySource"], "title": "IPPCompanyProfile", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Develop a JSON schema for energy trading data, including properties such as tradeID, timestamp, commodity, volume, and price.", "Schema": {"properties": {"tradeID": {"title": "Trade ID", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "commodity": {"title": "Commodity", "type": "string"}, "volume": {"title": "Volume", "type": "number"}, "price": {"title": "Price", "type": "number"}}, "required": ["tradeID", "timestamp", "commodity", "volume", "price"], "title": "EnergyTradingData", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Construct a JSON object for tracking power plant maintenance schedules, including properties like plantID, maintenanceDate, maintenanceType, and durationHours.", "Schema": {"properties": {"plantID": {"title": "Plant ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "durationHours": {"title": "Duration (Hours)", "type": "number"}}, "required": ["plantID", "maintenanceDate", "maintenanceType", "durationHours"], "title": "PowerPlantMaintenanceSchedule", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Design a JSON object for renewable energy certificates (RECs), including properties such as certificateID, generationDate, energySource, and associatedPlant.", "Schema": {"properties": {"certificateID": {"title": "Certificate ID", "type": "string"}, "generationDate": {"title": "Generation Date", "type": "string", "format": "date"}, "energySource": {"title": "Energy Source", "type": "string"}, "associatedPlant": {"title": "Associated Plant", "type": "string"}}, "required": ["certificateID", "generationDate", "energySource", "associatedPlant"], "title": "RenewableEnergyCertificate", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Generate a JSON object representing emission data reports, including properties like reportID, reportingPeriod, CO2Emissions, NOxEmissions, and SO2Emissions.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "reportingPeriod": {"title": "Reporting Period", "type": "string"}, "CO2Emissions": {"title": "CO2 Emissions (Metric Tons)", "type": "number"}, "NOxEmissions": {"title": "NOx Emissions (Metric Tons)", "type": "number"}, "SO2Emissions": {"title": "SO2 Emissions (Metric Tons)", "type": "number"}}, "required": ["reportID", "reportingPeriod", "CO2Emissions", "NOxEmissions", "SO2Emissions"], "title": "EmissionDataReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Create a JSON object for querying available properties, including filters like location, price range, and property type.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number"}, "max": {"title": "Maximum Price", "type": "number"}}, "required": ["min", "max"]}, "propertyType": {"title": "Property Type", "type": "string", "enum": ["commercial", "residential", "industrial", "land"]}}, "required": ["location", "priceRange", "propertyType"], "title": "PropertyQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Develop a JSON object for submitting a maintenance request, including details like property ID, issue description, and urgency level.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["low", "medium", "high", "emergency"]}}, "required": ["propertyID", "issueDescription", "urgencyLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Construct a JSON object for a tenant's rent payment, including tenant ID, property ID, amount, and payment date.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "paymentDate": {"title": "Payment Date", "type": "string", "format": "date"}}, "required": ["tenantID", "propertyID", "amount", "paymentDate"], "title": "RentPayment", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Design a JSON object for tracking a property's occupancy status, including property ID, current occupancy, and maximum occupancy.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "currentOccupancy": {"title": "Current Occupancy", "type": "integer"}, "maximumOccupancy": {"title": "Maximum Occupancy", "type": "integer"}}, "required": ["propertyID", "currentOccupancy", "maximumOccupancy"], "title": "OccupancyStatus", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Generate a JSON object for a new property listing, including details like property ID, listing date, price, and property details.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "listingDate": {"title": "Listing Date", "type": "string", "format": "date"}, "price": {"title": "Price", "type": "number"}, "propertyDetails": {"title": "Property Details", "type": "object", "properties": {"type": {"title": "Type", "type": "string"}, "size": {"title": "Size", "type": "number"}, "location": {"title": "Location", "type": "string"}}, "required": ["type", "size", "location"]}}, "required": ["propertyID", "listingDate", "price", "propertyDetails"], "title": "NewPropertyListing", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Create a JSON object for a user's movie preferences, including properties like favoriteGenres, dislikedMovies, and preferredLanguages.", "Schema": {"properties": {"favoriteGenres": {"items": {"type": "string"}, "title": "Favorite Genres", "type": "array"}, "dislikedMovies": {"items": {"type": "string"}, "title": "Disliked Movies", "type": "array"}, "preferredLanguages": {"items": {"type": "string"}, "title": "Preferred Languages", "type": "array"}}, "required": ["favoriteGenres", "preferredLanguages"], "title": "UserMoviePreferences", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Develop a JSON object for a video game profile, including properties such as gamerTag, platform, achievements, and playtimeHours.", "Schema": {"properties": {"gamerTag": {"title": "Gamer Tag", "type": "string"}, "platform": {"title": "Platform", "type": "string"}, "achievements": {"items": {"type": "string"}, "title": "Achievements", "type": "array"}, "playtimeHours": {"title": "Playtime Hours", "type": "number"}}, "required": ["gamerTag", "platform"], "title": "VideoGameProfile", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Construct a JSON object for tracking user engagement on a streaming platform, with properties like userId, watchHistory, and recommendedGenres.", "Schema": {"properties": {"userId": {"title": "User ID", "type": "string"}, "watchHistory": {"items": {"type": "object", "properties": {"contentId": {"title": "Content ID", "type": "string"}, "watchedOn": {"title": "Watched On", "type": "string", "format": "date-time"}, "durationMinutes": {"title": "Duration Minutes", "type": "number"}}, "required": ["contentId", "watchedOn", "durationMinutes"]}, "title": "Watch History", "type": "array"}, "recommendedGenres": {"items": {"type": "string"}, "title": "Recommended Genres", "type": "array"}}, "required": ["userId", "watchHistory"], "title": "UserEngagement", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Design a JSON object for a content creator's analytics, including properties such as creatorId, totalViews, subscriberCount, and averageWatchTime.", "Schema": {"properties": {"creatorId": {"title": "Creator ID", "type": "string"}, "totalViews": {"title": "Total Views", "type": "number"}, "subscriberCount": {"title": "Subscriber Count", "type": "number"}, "averageWatchTime": {"title": "Average Watch Time", "type": "number"}}, "required": ["creatorId", "totalViews", "subscriberCount"], "title": "ContentCreatorAnalytics", "type": "object"}}
{"Category": "Media & Entertainment", "SubCategory": "Interactive Media & Services", "Task": "Generate a JSON object for a music streaming service's playlist, including properties like playlistId, songs, creator, and totalDuration.", "Schema": {"properties": {"playlistId": {"title": "Playlist ID", "type": "string"}, "songs": {"items": {"type": "object", "properties": {"songId": {"title": "Song ID", "type": "string"}, "title": {"title": "Title", "type": "string"}, "artist": {"title": "Artist", "type": "string"}, "durationSeconds": {"title": "Duration Seconds", "type": "number"}}, "required": ["songId", "title", "artist"]}, "title": "Songs", "type": "array"}, "creator": {"title": "Creator", "type": "string"}, "totalDuration": {"title": "Total Duration", "type": "number"}}, "required": ["playlistId", "songs", "creator"], "title": "MusicPlaylist", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Create a JSON object for querying renewable electricity production data, including properties like productionDate, energySource, and totalOutput.", "Schema": {"properties": {"productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "energySource": {"title": "Energy Source", "type": "string"}, "totalOutput": {"title": "Total Output", "type": "number"}}, "required": ["productionDate", "energySource", "totalOutput"], "title": "RenewableElectricityProduction", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Develop a JSON object for tracking solar panel installations, with properties such as installationDate, location, capacity, and installer details.", "Schema": {"properties": {"installationDate": {"title": "Installation Date", "type": "string", "format": "date"}, "location": {"title": "Location", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "installerDetails": {"title": "Installer Details", "type": "object", "properties": {"companyName": {"title": "Company Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["companyName", "contact"]}}, "required": ["installationDate", "location", "capacity", "installerDetails"], "title": "SolarPanelInstallation", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Construct a JSON object for a wind farm performance report, including properties like reportDate, windSpeed, turbineEfficiency, and energyProduced.", "Schema": {"properties": {"reportDate": {"title": "Report Date", "type": "string", "format": "date"}, "windSpeed": {"title": "Wind Speed", "type": "number"}, "turbineEfficiency": {"title": "Turbine Efficiency", "type": "number"}, "energyProduced": {"title": "Energy Produced", "type": "number"}}, "required": ["reportDate", "windSpeed", "turbineEfficiency", "energyProduced"], "title": "WindFarmPerformanceReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Design a JSON object for monitoring hydroelectric power generation, with properties such as monitoringDate, waterFlow, turbineCount, and powerOutput.", "Schema": {"properties": {"monitoringDate": {"title": "Monitoring Date", "type": "string", "format": "date"}, "waterFlow": {"title": "Water Flow", "type": "number"}, "turbineCount": {"title": "Turbine Count", "type": "integer"}, "powerOutput": {"title": "Power Output", "type": "number"}}, "required": ["monitoringDate", "waterFlow", "turbineCount", "powerOutput"], "title": "HydroelectricPowerGeneration", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Generate a JSON object for an energy storage system's status, including properties like storageSystemId, chargeLevel, inputSource, and maintenanceSchedule.", "Schema": {"properties": {"storageSystemId": {"title": "Storage System ID", "type": "string"}, "chargeLevel": {"title": "Charge Level", "type": "number"}, "inputSource": {"title": "Input Source", "type": "string"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "object", "properties": {"nextMaintenanceDate": {"title": "Next Maintenance Date", "type": "string", "format": "date"}, "maintenanceFrequency": {"title": "Maintenance Frequency", "type": "string"}}, "required": ["nextMaintenanceDate", "maintenanceFrequency"]}}, "required": ["storageSystemId", "chargeLevel", "inputSource", "maintenanceSchedule"], "title": "EnergyStorageSystemStatus", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Create a JSON object for storing information about a solar power generation facility, including properties like facilityName, capacity, location, and operational status.", "Schema": {"properties": {"facilityName": {"title": "Facility Name", "type": "string"}, "capacity": {"title": "Capacity", "type": "number"}, "location": {"title": "Location", "type": "string"}, "operationalStatus": {"title": "Operational Status", "type": "string", "enum": ["operational", "under construction", "non-operational"]}}, "required": ["facilityName", "capacity", "location", "operationalStatus"], "title": "SolarPowerFacility", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Develop a JSON object for tracking wind farm production data, including properties such as farmName, turbines, averageOutput, and maintenanceSchedule.", "Schema": {"properties": {"farmName": {"title": "Farm Name", "type": "string"}, "turbines": {"title": "Turbines", "type": "integer"}, "averageOutput": {"title": "Average Output", "type": "number"}, "maintenanceSchedule": {"title": "Maintenance Schedule", "type": "string"}}, "required": ["farmName", "turbines", "averageOutput", "maintenanceSchedule"], "title": "WindFarmProduction", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Construct a JSON object for a geothermal energy project, detailing properties like projectID, estimatedReserves, currentOutput, and environmentalImpact.", "Schema": {"properties": {"projectID": {"title": "Project ID", "type": "string"}, "estimatedReserves": {"title": "Estimated Reserves", "type": "number"}, "currentOutput": {"title": "Current Output", "type": "number"}, "environmentalImpact": {"title": "Environmental Impact", "type": "string"}}, "required": ["projectID", "estimatedReserves", "currentOutput", "environmentalImpact"], "title": "GeothermalEnergyProject", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Design a JSON object for a biomass energy production report, including properties like reportID, plantType, energyProduced, and sustainabilityRating.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "plantType": {"title": "Plant Type", "type": "string"}, "energyProduced": {"title": "Energy Produced", "type": "number"}, "sustainabilityRating": {"title": "Sustainability Rating", "type": "string"}}, "required": ["reportID", "plantType", "energyProduced", "sustainabilityRating"], "title": "BiomassEnergyProductionReport", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Generate a JSON object representing a hydropower plant's operational metrics, including properties like plantID, waterFlow, energyOutput, and regulatoryCompliance.", "Schema": {"properties": {"plantID": {"title": "Plant ID", "type": "string"}, "waterFlow": {"title": "Water Flow", "type": "number"}, "energyOutput": {"title": "Energy Output", "type": "number"}, "regulatoryCompliance": {"title": "Regulatory Compliance", "type": "string"}}, "required": ["plantID", "waterFlow", "energyOutput", "regulatoryCompliance"], "title": "HydropowerPlantOperationalMetrics", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Create a JSON object for storing power production data, including properties like plantId, productionDate, energyType, and producedMWh.", "Schema": {"properties": {"plantId": {"title": "Plant ID", "type": "string"}, "productionDate": {"title": "Production Date", "type": "string", "format": "date"}, "energyType": {"title": "Energy Type", "type": "string"}, "producedMWh": {"title": "Produced MWh", "type": "number"}}, "required": ["plantId", "productionDate", "energyType", "producedMWh"], "title": "PowerProductionData", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Develop a JSON schema for energy trading, including properties such as tradeId, tradeDate, energyType, quantityMWh, and pricePerMWh.", "Schema": {"properties": {"tradeId": {"title": "Trade ID", "type": "string"}, "tradeDate": {"title": "Trade Date", "type": "string", "format": "date-time"}, "energyType": {"title": "Energy Type", "type": "string"}, "quantityMWh": {"title": "Quantity MWh", "type": "number"}, "pricePerMWh": {"title": "Price Per MWh", "type": "number"}}, "required": ["tradeId", "tradeDate", "energyType", "quantityMWh", "pricePerMWh"], "title": "EnergyTrading", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Construct a JSON object for tracking renewable energy certificates, including properties like certificateId, issueDate, energyType, and validityPeriod.", "Schema": {"properties": {"certificateId": {"title": "Certificate ID", "type": "string"}, "issueDate": {"title": "Issue Date", "type": "string", "format": "date"}, "energyType": {"title": "Energy Type", "type": "string"}, "validityPeriod": {"title": "Validity Period", "type": "string"}}, "required": ["certificateId", "issueDate", "energyType", "validityPeriod"], "title": "RenewableEnergyCertificate", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Design a JSON object for a power plant maintenance log, including properties such as logId, plantId, maintenanceDate, maintenanceType, and notes.", "Schema": {"properties": {"logId": {"title": "Log ID", "type": "string"}, "plantId": {"title": "Plant ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date-time"}, "maintenanceType": {"title": "Maintenance Type", "type": "string"}, "notes": {"title": "Notes", "type": "string"}}, "required": ["logId", "plantId", "maintenanceDate", "maintenanceType"], "title": "MaintenanceLog", "type": "object"}}
{"Category": "Utilities", "SubCategory": "Independent Power and Renewable Electricity Producers", "Task": "Generate a JSON object representing an energy consumption report, including properties like reportId, consumerId, consumptionDate, consumedMWh, and peakLoad.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "consumerId": {"title": "Consumer ID", "type": "string"}, "consumptionDate": {"title": "Consumption Date", "type": "string", "format": "date"}, "consumedMWh": {"title": "Consumed MWh", "type": "number"}, "peakLoad": {"title": "Peak Load", "type": "number"}}, "required": ["reportId", "consumerId", "consumptionDate", "consumedMWh", "peakLoad"], "title": "EnergyConsumptionReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Create a JSON object for storing diversified REITs property portfolio, with properties like propertyID, propertyName, propertyType, location, and valuation.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "propertyName": {"title": "Property Name", "type": "string"}, "propertyType": {"title": "Property Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "valuation": {"title": "Valuation", "type": "number"}}, "required": ["propertyID", "propertyName", "propertyType", "location", "valuation"], "title": "REITsPropertyPortfolio", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Develop a JSON object for querying REITs investment performance, including properties like investmentID, startDate, endDate, ROI, and netIncome.", "Schema": {"properties": {"investmentID": {"title": "Investment ID", "type": "string"}, "startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}, "ROI": {"title": "Return on Investment (ROI)", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}}, "required": ["investmentID", "startDate", "endDate", "ROI", "netIncome"], "title": "REITsInvestmentPerformance", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Construct a JSON object representing a REITs tenant profile, including properties like tenantID, tenantName, leaseStart, leaseEnd, and monthlyRent.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStart": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEnd": {"format": "date", "title": "Lease End Date", "type": "string"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["tenantID", "tenantName", "leaseStart", "leaseEnd", "monthlyRent"], "title": "REITsTenantProfile", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Design a JSON object for REITs property maintenance records, including properties such as recordID, propertyID, maintenanceDate, description, and cost.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "maintenanceDate": {"format": "date", "title": "Maintenance Date", "type": "string"}, "description": {"title": "Description", "type": "string"}, "cost": {"title": "Cost", "type": "number"}}, "required": ["recordID", "propertyID", "maintenanceDate", "description", "cost"], "title": "REITsPropertyMaintenance", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Diversified REITs (New Name)", "Task": "Generate a JSON object representing a REITs financial summary, including properties like summaryID, fiscalYear, totalRevenue, totalExpenses, and netIncome.", "Schema": {"properties": {"summaryID": {"title": "Summary ID", "type": "string"}, "fiscalYear": {"title": "Fiscal Year", "type": "string"}, "totalRevenue": {"title": "Total Revenue", "type": "number"}, "totalExpenses": {"title": "Total Expenses", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}}, "required": ["summaryID", "fiscalYear", "totalRevenue", "totalExpenses", "netIncome"], "title": "REITsFinancialSummary", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Create a JSON object for storing hotel property details, including properties like propertyID, propertyName, location, number of rooms, and amenities offered.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "propertyName": {"title": "Property Name", "type": "string"}, "location": {"title": "Location", "type": "string"}, "numberOfRooms": {"title": "Number of Rooms", "type": "integer"}, "amenities": {"items": {"type": "string"}, "title": "Amenities", "type": "array"}}, "required": ["propertyID", "propertyName", "location", "numberOfRooms"], "title": "HotelPropertyDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Develop a JSON schema for representing a lease agreement with properties such as leaseID, tenantName, leaseStartDate, leaseEndDate, and monthlyRent.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStartDate": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["leaseID", "tenantName", "leaseStartDate", "leaseEndDate", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Construct a JSON object representing a maintenance request, including properties like requestID, propertyID, issueDescription, priority, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved"]}}, "required": ["requestID", "propertyID", "issueDescription", "priority", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Design a JSON object for a guest profile, including properties such as guestID, fullName, contactInformation, loyaltyProgramNumber, and pastStays.", "Schema": {"properties": {"guestID": {"title": "Guest ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}}, "required": ["phone", "email"]}, "loyaltyProgramNumber": {"title": "Loyalty Program Number", "type": "string"}, "pastStays": {"items": {"type": "object", "properties": {"stayID": {"title": "Stay ID", "type": "string"}, "checkInDate": {"format": "date", "title": "Check-In Date", "type": "string"}, "checkOutDate": {"format": "date", "title": "Check-Out Date", "type": "string"}}, "required": ["stayID", "checkInDate", "checkOutDate"]}, "title": "Past Stays", "type": "array"}}, "required": ["guestID", "fullName", "contactInformation"], "title": "GuestProfile", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Generate a JSON object representing a financial transaction, including properties like transactionID, propertyID, amount, transactionDate, and transactionType.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "transactionDate": {"format": "date-time", "title": "Transaction Date", "type": "string"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["Rental Income", "Maintenance Expense", "Capital Expenditure", "Other"]}}, "required": ["transactionID", "propertyID", "amount", "transactionDate", "transactionType"], "title": "FinancialTransaction", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Create a JSON object for querying available properties, including filters like location, propertyType, and priceRange.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "propertyType": {"title": "PropertyType", "type": "string"}, "priceRange": {"title": "PriceRange", "type": "object", "properties": {"minPrice": {"title": "MinPrice", "type": "number"}, "maxPrice": {"title": "MaxPrice", "type": "number"}}, "required": ["minPrice", "maxPrice"]}}, "required": ["location", "propertyType", "priceRange"], "title": "PropertyQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Develop a JSON object for submitting a maintenance request, including details like propertyID, issueDescription, and urgencyLevel.", "Schema": {"properties": {"propertyID": {"title": "PropertyID", "type": "string"}, "issueDescription": {"title": "IssueDescription", "type": "string"}, "urgencyLevel": {"title": "UrgencyLevel", "type": "string", "enum": ["Low", "Medium", "High"]}}, "required": ["propertyID", "issueDescription", "urgencyLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Construct a JSON object for tracking tenant payments, including tenantID, amountPaid, paymentDate, and paymentMethod.", "Schema": {"properties": {"tenantID": {"title": "TenantID", "type": "string"}, "amountPaid": {"title": "AmountPaid", "type": "number"}, "paymentDate": {"title": "PaymentDate", "type": "string", "format": "date"}, "paymentMethod": {"title": "PaymentMethod", "type": "string"}}, "required": ["tenantID", "amountPaid", "paymentDate", "paymentMethod"], "title": "TenantPayment", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Design a JSON object for a lease agreement, including leaseID, tenantDetails, leaseTerms, and leaseStartDate.", "Schema": {"properties": {"leaseID": {"title": "LeaseID", "type": "string"}, "tenantDetails": {"title": "TenantDetails", "type": "object", "properties": {"tenantName": {"title": "TenantName", "type": "string"}, "tenantContact": {"title": "TenantContact", "type": "string"}}, "required": ["tenantName", "tenantContact"]}, "leaseTerms": {"title": "LeaseTerms", "type": "string"}, "leaseStartDate": {"title": "LeaseStartDate", "type": "string", "format": "date"}}, "required": ["leaseID", "tenantDetails", "leaseTerms", "leaseStartDate"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Generate a JSON object for property valuation data, including propertyID, valuationDate, appraisedValue, and valuationMethod.", "Schema": {"properties": {"propertyID": {"title": "PropertyID", "type": "string"}, "valuationDate": {"title": "ValuationDate", "type": "string", "format": "date"}, "appraisedValue": {"title": "AppraisedValue", "type": "number"}, "valuationMethod": {"title": "ValuationMethod", "type": "string"}}, "required": ["propertyID", "valuationDate", "appraisedValue", "valuationMethod"], "title": "PropertyValuation", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Create a JSON object for storing property details of a health care facility, including properties like facilityName, facilityType, address, leaseStatus, and operationalStatus.", "Schema": {"properties": {"facilityName": {"title": "Facility Name", "type": "string"}, "facilityType": {"title": "Facility Type", "type": "string", "enum": ["Hospital", "Nursing Home", "Assisted Living"]}, "address": {"title": "Address", "type": "string"}, "leaseStatus": {"title": "Lease Status", "type": "boolean"}, "operationalStatus": {"title": "Operational Status", "type": "boolean"}}, "required": ["facilityName", "facilityType", "address", "leaseStatus", "operationalStatus"], "title": "HealthCareFacility", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Develop a JSON object for tracking lease agreements, including properties such as leaseID, tenantName, leaseStartDate, leaseEndDate, and monthlyRent.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEndDate": {"title": "Lease End Date", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["leaseID", "tenantName", "leaseStartDate", "leaseEndDate", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Construct a JSON object for a maintenance request, including properties like requestID, facilityID, issueDescription, priorityLevel, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "facilityID": {"title": "Facility ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string", "enum": ["Low", "Medium", "High"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Closed"]}}, "required": ["requestID", "facilityID", "issueDescription", "priorityLevel", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Design a JSON object for tracking property valuations, including properties such as propertyID, valuationDate, appraisedValue, and valuationMethod.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "valuationDate": {"title": "Valuation Date", "type": "string", "format": "date"}, "appraisedValue": {"title": "Appraised Value", "type": "number"}, "valuationMethod": {"title": "Valuation Method", "type": "string"}}, "required": ["propertyID", "valuationDate", "appraisedValue", "valuationMethod"], "title": "PropertyValuation", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Generate a JSON object for managing tenant contacts, including properties such as tenantID, contactName, contactPhone, contactEmail, and emergencyContact.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "contactName": {"title": "Contact Name", "type": "string"}, "contactPhone": {"title": "Contact Phone", "type": "string"}, "contactEmail": {"title": "Contact Email", "type": "string", "format": "email"}, "emergencyContact": {"title": "Emergency Contact", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["name", "phone"]}}, "required": ["tenantID", "contactName", "contactPhone", "contactEmail", "emergencyContact"], "title": "TenantContact", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Create a JSON object for querying available industrial properties, including properties like propertyID, location, squareFootage, and leaseStatus.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "leaseStatus": {"title": "Lease Status", "type": "string", "enum": ["available", "leased", "maintenance"]}}, "required": ["propertyID", "location", "squareFootage", "leaseStatus"], "title": "IndustrialPropertyQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Develop a JSON object for submitting a lease application, including tenant details such as tenantName, tenantID, businessType, and requestedSquareFootage.", "Schema": {"properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "businessType": {"title": "Business Type", "type": "string"}, "requestedSquareFootage": {"title": "Requested Square Footage", "type": "number"}}, "required": ["tenantName", "tenantID", "businessType", "requestedSquareFootage"], "title": "LeaseApplication", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Construct a JSON object for reporting maintenance issues, with properties like issueID, propertyID, issueDescription, and urgencyLevel.", "Schema": {"properties": {"issueID": {"title": "Issue ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["low", "medium", "high"]}}, "required": ["issueID", "propertyID", "issueDescription", "urgencyLevel"], "title": "MaintenanceIssueReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Design a JSON object for tracking rent payments, including properties such as paymentID, tenantID, propertyID, amount, and paymentDate.", "Schema": {"properties": {"paymentID": {"title": "Payment ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "paymentDate": {"format": "date", "title": "Payment Date", "type": "string"}}, "required": ["paymentID", "tenantID", "propertyID", "amount", "paymentDate"], "title": "RentPaymentTracking", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Generate a JSON object for managing property inspections, with fields like inspectionID, propertyID, inspectorName, inspectionDate, and findings.", "Schema": {"properties": {"inspectionID": {"title": "Inspection ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "inspectionDate": {"format": "date", "title": "Inspection Date", "type": "string"}, "findings": {"title": "Findings", "type": "string"}}, "required": ["inspectionID", "propertyID", "inspectorName", "inspectionDate", "findings"], "title": "PropertyInspectionManagement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Create a JSON object for storing office property details, including property ID, address, square footage, and current occupancy status.", "Schema": {"properties": {"propertyId": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "occupancyStatus": {"title": "Occupancy Status", "type": "string", "enum": ["occupied", "vacant", "under maintenance", "reserved"]}}, "required": ["propertyId", "address", "squareFootage", "occupancyStatus"], "title": "OfficePropertyDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Develop a JSON schema for representing lease agreements with properties such as leaseId, tenantName, leaseStartDate, leaseEndDate, and monthlyRent.", "Schema": {"properties": {"leaseId": {"title": "Lease ID", "type": "string"}, "tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStartDate": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["leaseId", "tenantName", "leaseStartDate", "leaseEndDate", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Construct a JSON object for tracking maintenance requests, including request ID, property ID, issue description, date reported, and status.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "dateReported": {"format": "date-time", "title": "Date Reported", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "in progress", "completed", "closed"]}}, "required": ["requestId", "propertyId", "issueDescription", "dateReported", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Design a JSON object for a tenant profile, including tenant ID, company name, contact information, and lease details.", "Schema": {"properties": {"tenantId": {"title": "Tenant ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}}, "required": ["phone", "email"]}, "leaseDetails": {"title": "Lease Details", "type": "object", "properties": {"leaseId": {"title": "Lease ID", "type": "string"}, "leaseStartDate": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}}, "required": ["leaseId", "leaseStartDate", "leaseEndDate"]}}, "required": ["tenantId", "companyName", "contactInformation", "leaseDetails"], "title": "TenantProfile", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Generate a JSON object representing a financial summary for a property, including property ID, year, total revenue, total expenses, and net operating income.", "Schema": {"properties": {"propertyId": {"title": "Property ID", "type": "string"}, "year": {"title": "Year", "type": "integer"}, "totalRevenue": {"title": "Total Revenue", "type": "number"}, "totalExpenses": {"title": "Total Expenses", "type": "number"}, "netOperatingIncome": {"title": "Net Operating Income", "type": "number"}}, "required": ["propertyId", "year", "totalRevenue", "totalExpenses", "netOperatingIncome"], "title": "FinancialSummary", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Create a JSON object for querying available office spaces, including properties like location, square footage, lease terms, and price per square foot.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "leaseTerms": {"title": "Lease Terms", "type": "string"}, "pricePerSquareFoot": {"title": "Price Per Square Foot", "type": "number"}}, "required": ["location", "squareFootage", "leaseTerms", "pricePerSquareFoot"], "title": "AvailableOfficeSpaceQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Generate a JSON object for submitting a maintenance request, including properties such as tenantID, issueDescription, urgency, and preferred times for maintenance.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgency": {"title": "Urgency", "type": "string", "enum": ["low", "medium", "high"]}, "preferredTimes": {"title": "Preferred Times", "type": "string"}}, "required": ["tenantID", "issueDescription", "urgency"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Construct a JSON object for a lease agreement, detailing properties like tenantName, leaseStartDate, leaseEndDate, and monthlyRent.", "Schema": {"properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEndDate": {"title": "Lease End Date", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["tenantName", "leaseStartDate", "leaseEndDate", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Design a JSON object for tracking office building amenities, including properties such as buildingID, amenitiesList, and accessibility features.", "Schema": {"properties": {"buildingID": {"title": "Building ID", "type": "string"}, "amenitiesList": {"title": "Amenities List", "type": "array", "items": {"type": "string"}}, "accessibilityFeatures": {"title": "Accessibility Features", "type": "array", "items": {"type": "string"}}}, "required": ["buildingID", "amenitiesList"], "title": "OfficeBuildingAmenities", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Office REITs (New)", "Task": "Formulate a JSON object for office space reservation requests, including tenantID, requestedSpaceID, reservationStartDate, and reservationEndDate.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "requestedSpaceID": {"title": "Requested Space ID", "type": "string"}, "reservationStartDate": {"title": "Reservation Start Date", "type": "string", "format": "date"}, "reservationEndDate": {"title": "Reservation End Date", "type": "string", "format": "date"}}, "required": ["tenantID", "requestedSpaceID", "reservationStartDate", "reservationEndDate"], "title": "OfficeSpaceReservationRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Create a JSON object for querying available properties, including filters like location, price range, and property type.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "priceRange": {"title": "PriceRange", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number"}, "max": {"title": "Maximum Price", "type": "number"}}, "required": ["min", "max"]}, "propertyType": {"title": "PropertyType", "type": "string", "enum": ["hospital", "clinic", "nursing home", "specialized care facility"]}}, "required": ["location", "priceRange", "propertyType"], "title": "PropertyQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Develop a JSON object for submitting a maintenance request, including details like property ID, issue description, and urgency level.", "Schema": {"properties": {"propertyID": {"title": "PropertyID", "type": "string"}, "issueDescription": {"title": "IssueDescription", "type": "string"}, "urgencyLevel": {"title": "UrgencyLevel", "type": "string", "enum": ["low", "medium", "high", "emergency"]}}, "required": ["propertyID", "issueDescription", "urgencyLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Construct a JSON object for tracking tenant payments, including tenant ID, amount paid, payment date, and payment method.", "Schema": {"properties": {"tenantID": {"title": "TenantID", "type": "string"}, "amountPaid": {"title": "AmountPaid", "type": "number"}, "paymentDate": {"title": "PaymentDate", "type": "string", "format": "date"}, "paymentMethod": {"title": "PaymentMethod", "type": "string", "enum": ["credit card", "bank transfer", "check", "cash"]}}, "required": ["tenantID", "amountPaid", "paymentDate", "paymentMethod"], "title": "TenantPayment", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Design a JSON object for a lease agreement, including tenant details, lease terms, property details, and signatures.", "Schema": {"properties": {"tenantDetails": {"title": "TenantDetails", "type": "object", "properties": {"tenantID": {"title": "TenantID", "type": "string"}, "tenantName": {"title": "TenantName", "type": "string"}}, "required": ["tenantID", "tenantName"]}, "leaseTerms": {"title": "LeaseTerms", "type": "object", "properties": {"startDate": {"title": "StartDate", "type": "string", "format": "date"}, "endDate": {"title": "EndDate", "type": "string", "format": "date"}, "rentAmount": {"title": "RentAmount", "type": "number"}}, "required": ["startDate", "endDate", "rentAmount"]}, "propertyDetails": {"title": "PropertyDetails", "type": "object", "properties": {"propertyID": {"title": "PropertyID", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["propertyID", "address"]}, "signatures": {"title": "Signatures", "type": "array", "items": {"type": "string"}}}, "required": ["tenantDetails", "leaseTerms", "propertyDetails", "signatures"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Generate a JSON object for property inspection reports, including inspector details, inspection date, findings, and recommendations.", "Schema": {"properties": {"inspectorDetails": {"title": "InspectorDetails", "type": "object", "properties": {"inspectorID": {"title": "InspectorID", "type": "string"}, "inspectorName": {"title": "InspectorName", "type": "string"}}, "required": ["inspectorID", "inspectorName"]}, "inspectionDate": {"title": "InspectionDate", "type": "string", "format": "date"}, "findings": {"title": "Findings", "type": "array", "items": {"type": "string"}}, "recommendations": {"title": "Recommendations", "type": "array", "items": {"type": "string"}}}, "required": ["inspectorDetails", "inspectionDate", "findings", "recommendations"], "title": "PropertyInspectionReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Create a JSON object for storing property details, including property ID, location, square footage, and occupancy status.", "Schema": {"properties": {"propertyId": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "occupancyStatus": {"title": "Occupancy Status", "type": "string", "enum": ["occupied", "vacant", "under_maintenance"]}}, "required": ["propertyId", "location", "squareFootage", "occupancyStatus"], "title": "PropertyDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Develop a JSON object for tracking tenant information, including tenant ID, company name, lease start date, and lease end date.", "Schema": {"properties": {"tenantId": {"title": "Tenant ID", "type": "string"}, "companyName": {"title": "Company Name", "type": "string"}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEndDate": {"title": "Lease End Date", "type": "string", "format": "date"}}, "required": ["tenantId", "companyName", "leaseStartDate", "leaseEndDate"], "title": "TenantInformation", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Construct a JSON object for a maintenance request, including request ID, property ID, issue description, and priority level.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string", "enum": ["low", "medium", "high", "urgent"]}}, "required": ["requestId", "propertyId", "issueDescription", "priorityLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Design a JSON object for recording a financial transaction, including transaction ID, date, amount, and transaction type.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["rent", "maintenance", "tax", "other"]}}, "required": ["transactionId", "date", "amount", "transactionType"], "title": "FinancialTransaction", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Industrial REITs (New)", "Task": "Generate a JSON object for an investment portfolio, including portfolio ID, asset details, total value, and performance metrics.", "Schema": {"properties": {"portfolioId": {"title": "Portfolio ID", "type": "string"}, "assetDetails": {"title": "Asset Details", "type": "array", "items": {"type": "object", "properties": {"assetId": {"title": "Asset ID", "type": "string"}, "assetType": {"title": "Asset Type", "type": "string"}, "assetValue": {"title": "Asset Value", "type": "number"}}, "required": ["assetId", "assetType", "assetValue"]}}, "totalValue": {"title": "Total Value", "type": "number"}, "performanceMetrics": {"title": "Performance Metrics", "type": "object", "properties": {"roi": {"title": "Return on Investment (ROI)", "type": "number"}, "capRate": {"title": "Capitalization Rate", "type": "number"}}, "required": ["roi", "capRate"]}}, "required": ["portfolioId", "assetDetails", "totalValue", "performanceMetrics"], "title": "InvestmentPortfolio", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Create a JSON object for storing property details, including fields like propertyID, address, propertyType, and leaseStatus.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "propertyType": {"title": "Property Type", "type": "string", "enum": ["multifamily", "apartment", "manufactured home", "student housing"]}, "leaseStatus": {"title": "Lease Status", "type": "string", "enum": ["leased", "vacant", "under maintenance"]}}, "required": ["propertyID", "address", "propertyType", "leaseStatus"], "title": "PropertyDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Develop a JSON object for a lease agreement, including tenant details, lease terms, payment schedule, and associated propertyID.", "Schema": {"properties": {"tenantDetails": {"title": "Tenant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}, "leaseTerms": {"title": "Lease Terms", "type": "string"}, "paymentSchedule": {"title": "Payment Schedule", "type": "object", "properties": {"startDate": {"format": "date", "title": "Start Date", "type": "string"}, "endDate": {"format": "date", "title": "End Date", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["startDate", "endDate", "amount"]}, "propertyID": {"title": "Property ID", "type": "string"}}, "required": ["tenantDetails", "leaseTerms", "paymentSchedule", "propertyID"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Construct a JSON object for tracking maintenance requests, including requestID, propertyID, issueDescription, priority, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["low", "medium", "high"]}, "status": {"title": "Status", "type": "string", "enum": ["open", "in progress", "resolved"]}}, "required": ["requestID", "propertyID", "issueDescription", "priority", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Design a JSON object for a financial report, including reportID, propertyID, income, expenses, and netIncome.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "income": {"title": "Income", "type": "number"}, "expenses": {"title": "Expenses", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}}, "required": ["reportID", "propertyID", "income", "expenses", "netIncome"], "title": "FinancialReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Health Care REITs (New)", "Task": "Generate a JSON object for tenant feedback, including feedbackID, propertyID, tenantID, comments, and rating.", "Schema": {"properties": {"feedbackID": {"title": "Feedback ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "comments": {"title": "Comments", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}}, "required": ["feedbackID", "propertyID", "tenantID", "comments", "rating"], "title": "TenantFeedback", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Create a JSON object for querying multi-family residential unit availability, including properties like unitType, location, priceRange, and amenities.", "Schema": {"properties": {"unitType": {"title": "Unit Type", "type": "string", "enum": ["Studio", "One Bedroom", "Two Bedroom", "Three Bedroom"]}, "location": {"title": "Location", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number"}, "max": {"title": "Maximum Price", "type": "number"}}, "required": ["min", "max"]}, "amenities": {"title": "Amenities", "type": "array", "items": {"type": "string"}}}, "required": ["unitType", "location", "priceRange"], "title": "UnitAvailabilityQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Develop a JSON object for submitting a maintenance request, including properties like unitNumber, issueDescription, urgencyLevel, and preferredTimeSlot.", "Schema": {"properties": {"unitNumber": {"title": "Unit Number", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["Low", "Medium", "High", "Emergency"]}, "preferredTimeSlot": {"title": "Preferred Time Slot", "type": "string", "format": "date-time"}}, "required": ["unitNumber", "issueDescription", "urgencyLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Construct a JSON object for a tenant profile, including properties like tenantName, leaseStartDate, leaseEndDate, and paymentHistory.", "Schema": {"properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEndDate": {"title": "Lease End Date", "type": "string", "format": "date"}, "paymentHistory": {"title": "Payment History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "status": {"title": "Status", "type": "string", "enum": ["Paid", "Late", "Pending"]}}, "required": ["date", "amount", "status"]}}}, "required": ["tenantName", "leaseStartDate", "leaseEndDate"], "title": "TenantProfile", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Design a JSON object for tracking building expenses, including properties like expenseType, amount, dateIncurred, and vendorDetails.", "Schema": {"properties": {"expenseType": {"title": "Expense Type", "type": "string"}, "amount": {"title": "Amount", "type": "number"}, "dateIncurred": {"title": "Date Incurred", "type": "string", "format": "date"}, "vendorDetails": {"title": "Vendor Details", "type": "object", "properties": {"vendorName": {"title": "Vendor Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["vendorName"]}}, "required": ["expenseType", "amount", "dateIncurred"], "title": "BuildingExpenses", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Generate a JSON object for a rental application, including properties like applicantName, employmentStatus, creditScore, and references.", "Schema": {"properties": {"applicantName": {"title": "Applicant Name", "type": "string"}, "employmentStatus": {"title": "Employment Status", "type": "string"}, "creditScore": {"title": "Credit Score", "type": "integer"}, "references": {"title": "References", "type": "array", "items": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}, "relationship": {"title": "Relationship", "type": "string"}}, "required": ["name", "contact"]}}}, "required": ["applicantName", "employmentStatus", "creditScore"], "title": "RentalApplication", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Create a JSON object for querying available rooms, with properties like roomType, amenities, and price range.", "Schema": {"properties": {"roomType": {"title": "Room Type", "type": "string", "enum": ["single", "double", "suite"]}, "amenities": {"title": "Amenities", "type": "array", "items": {"type": "string"}}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number"}, "max": {"title": "Maximum Price", "type": "number"}}, "required": ["min", "max"]}}, "required": ["roomType", "amenities", "priceRange"], "title": "AvailableRoomsQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Construct a JSON object for a reservation system, including guest information and booking details.", "Schema": {"properties": {"guestInformation": {"title": "Guest Information", "type": "object", "properties": {"fullName": {"title": "Full Name", "type": "string"}, "contactNumber": {"title": "Contact Number", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["fullName", "contactNumber", "email"]}, "bookingDetails": {"title": "Booking Details", "type": "object", "properties": {"checkIn": {"title": "Check-In Date", "type": "string", "format": "date"}, "checkOut": {"title": "Check-Out Date", "type": "string", "format": "date"}, "roomType": {"title": "Room Type", "type": "string"}}, "required": ["checkIn", "checkOut", "roomType"]}}, "required": ["guestInformation", "bookingDetails"], "title": "Reservation", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Generate a JSON object for guest feedback, including ratings and comments for various services.", "Schema": {"properties": {"ratings": {"title": "Ratings", "type": "object", "properties": {"cleanliness": {"title": "Cleanliness", "type": "integer", "minimum": 1, "maximum": 5}, "service": {"title": "Service", "type": "integer", "minimum": 1, "maximum": 5}, "valueForMoney": {"title": "Value for Money", "type": "integer", "minimum": 1, "maximum": 5}}}, "comments": {"title": "Comments", "type": "string"}}, "required": ["ratings", "comments"], "title": "GuestFeedback", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Design a JSON object for tracking hotel maintenance requests, including issue details and urgency level.", "Schema": {"properties": {"issueDetails": {"title": "Issue Details", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["low", "medium", "high"]}, "reportedBy": {"title": "Reported By", "type": "string"}, "dateReported": {"title": "Date Reported", "type": "string", "format": "date-time"}}, "required": ["issueDetails", "urgencyLevel", "reportedBy", "dateReported"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Hotel & Resort REITs (New)", "Task": "Create a JSON object for managing hotel events, including event details, schedule, and attendee information.", "Schema": {"properties": {"eventDetails": {"title": "Event Details", "type": "string"}, "schedule": {"title": "Schedule", "type": "object", "properties": {"startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["startDate", "endDate"]}, "attendeeInformation": {"title": "Attendee Information", "type": "array", "items": {"type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}}}, "required": ["eventDetails", "schedule", "attendeeInformation"], "title": "HotelEventManagement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Create a JSON object for querying available retail spaces, including properties like location, square footage, price per square foot, and lease terms.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "pricePerSquareFoot": {"title": "Price Per Square Foot", "type": "number"}, "leaseTerms": {"title": "Lease Terms", "type": "string"}}, "required": ["location", "squareFootage", "pricePerSquareFoot", "leaseTerms"], "title": "AvailableRetailSpaceQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Develop a JSON object for submitting a maintenance request, with properties such as tenantID, issueDescription, priority, and preferred service time.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High"]}, "preferredServiceTime": {"title": "Preferred Service Time", "type": "string", "format": "date-time"}}, "required": ["tenantID", "issueDescription", "priority", "preferredServiceTime"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Construct a JSON object for a lease agreement, including details like tenantName, leaseStart, leaseEnd, and monthlyRent.", "Schema": {"properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStart": {"title": "Lease Start", "type": "string", "format": "date"}, "leaseEnd": {"title": "Lease End", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["tenantName", "leaseStart", "leaseEnd", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Generate a JSON object for tracking retail tenant sales, with fields such as tenantID, reportingPeriod, totalSales, and salesPerSquareFoot.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "reportingPeriod": {"title": "Reporting Period", "type": "string", "format": "date"}, "totalSales": {"title": "Total Sales", "type": "number"}, "salesPerSquareFoot": {"title": "Sales Per Square Foot", "type": "number"}}, "required": ["tenantID", "reportingPeriod", "totalSales", "salesPerSquareFoot"], "title": "RetailTenantSalesTracking", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Design a JSON object for a retail property inspection report, including attributes like propertyID, inspectionDate, inspectorName, and a list of issues found.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "inspectionDate": {"title": "Inspection Date", "type": "string", "format": "date"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "issuesFound": {"title": "Issues Found", "type": "array", "items": {"type": "string"}}}, "required": ["propertyID", "inspectionDate", "inspectorName", "issuesFound"], "title": "RetailPropertyInspectionReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for querying self-storage unit availability, including properties like location, size, climateControl, and price.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "size": {"title": "Size", "type": "string"}, "climateControl": {"title": "ClimateControl", "type": "boolean"}, "price": {"title": "Price", "type": "number"}}, "required": ["location", "size", "price"], "title": "SelfStorageUnitQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for submitting a reservation for a self-storage unit, including customer details and unit preferences.", "Schema": {"properties": {"customerName": {"title": "CustomerName", "type": "string"}, "customerContact": {"title": "CustomerContact", "type": "string"}, "preferredSize": {"title": "PreferredSize", "type": "string"}, "preferredLocation": {"title": "PreferredLocation", "type": "string"}, "climateControlRequired": {"title": "ClimateControlRequired", "type": "boolean"}}, "required": ["customerName", "customerContact", "preferredSize", "preferredLocation"], "title": "SelfStorageReservation", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for updating self-storage unit features, including properties like unitID, newFeatures, and updatedPrice.", "Schema": {"properties": {"unitID": {"title": "UnitID", "type": "string"}, "newFeatures": {"title": "NewFeatures", "type": "array", "items": {"type": "string"}}, "updatedPrice": {"title": "UpdatedPrice", "type": "number"}}, "required": ["unitID", "newFeatures", "updatedPrice"], "title": "UpdateSelfStorageUnit", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for a maintenance request for a self-storage facility, including details like facilityID, issueDescription, and urgencyLevel.", "Schema": {"properties": {"facilityID": {"title": "FacilityID", "type": "string"}, "issueDescription": {"title": "IssueDescription", "type": "string"}, "urgencyLevel": {"title": "UrgencyLevel", "type": "string", "enum": ["Low", "Medium", "High"]}}, "required": ["facilityID", "issueDescription", "urgencyLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for tracking self-storage unit occupancy, including properties like unitID, isOccupied, tenantName, and leaseEndDate.", "Schema": {"properties": {"unitID": {"title": "UnitID", "type": "string"}, "isOccupied": {"title": "IsOccupied", "type": "boolean"}, "tenantName": {"title": "TenantName", "type": "string"}, "leaseEndDate": {"title": "LeaseEndDate", "type": "string", "format": "date"}}, "required": ["unitID", "isOccupied"], "title": "OccupancyTracking", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Create a JSON object for storing property details, including property ID, location, square footage, and occupancy status.", "Schema": {"properties": {"propertyId": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "occupancyStatus": {"title": "Occupancy Status", "type": "string", "enum": ["occupied", "vacant", "under renovation"]}}, "required": ["propertyId", "location", "squareFootage", "occupancyStatus"], "title": "PropertyDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Develop a JSON schema for representing lease agreements with properties such as lease ID, tenant details, lease start date, lease end date, and monthly rent.", "Schema": {"properties": {"leaseId": {"title": "Lease ID", "type": "string"}, "tenantDetails": {"title": "Tenant Details", "type": "object", "properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "tenantContact": {"title": "Tenant Contact", "type": "string"}}, "required": ["tenantName", "tenantContact"]}, "leaseStartDate": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["leaseId", "tenantDetails", "leaseStartDate", "leaseEndDate", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Construct a JSON object for tracking maintenance requests, including request ID, property ID, issue description, priority level, and status.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string", "enum": ["low", "medium", "high", "urgent"]}, "status": {"title": "Status", "type": "string", "enum": ["reported", "in progress", "resolved"]}}, "required": ["requestId", "propertyId", "issueDescription", "priorityLevel", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Design a JSON object for a financial summary report, including properties such as report ID, fiscal year, total revenue, net income, and occupancy rate.", "Schema": {"properties": {"reportId": {"title": "Report ID", "type": "string"}, "fiscalYear": {"title": "Fiscal Year", "type": "string"}, "totalRevenue": {"title": "Total Revenue", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}, "occupancyRate": {"title": "Occupancy Rate", "type": "number", "minimum": 0, "maximum": 100}}, "required": ["reportId", "fiscalYear", "totalRevenue", "netIncome", "occupancyRate"], "title": "FinancialSummaryReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Retail REITs (New)", "Task": "Generate a JSON object for tenant feedback, including feedback ID, property ID, tenant ID, feedback text, and date submitted.", "Schema": {"properties": {"feedbackId": {"title": "Feedback ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "tenantId": {"title": "Tenant ID", "type": "string"}, "feedbackText": {"title": "Feedback Text", "type": "string"}, "dateSubmitted": {"format": "date", "title": "Date Submitted", "type": "string"}}, "required": ["feedbackId", "propertyId", "tenantId", "feedbackText", "dateSubmitted"], "title": "TenantFeedback", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Create a JSON object for storing information about a single-family residential property, including property ID, address, square footage, and current occupancy status.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "occupancyStatus": {"title": "Occupancy Status", "type": "string", "enum": ["occupied", "vacant", "under maintenance", "for sale"]}}, "required": ["propertyID", "address", "squareFootage", "occupancyStatus"], "title": "ResidentialProperty", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Develop a JSON object for a lease agreement, including tenant details, lease start and end dates, monthly rent, and security deposit amount.", "Schema": {"properties": {"tenantDetails": {"title": "Tenant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEndDate": {"title": "Lease End Date", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}, "securityDeposit": {"title": "Security Deposit", "type": "number"}}, "required": ["tenantDetails", "leaseStartDate", "leaseEndDate", "monthlyRent", "securityDeposit"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Construct a JSON object for tracking maintenance requests, including request ID, property ID, description of issue, priority level, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priorityLevel": {"title": "Priority Level", "type": "string", "enum": ["low", "medium", "high", "urgent"]}, "status": {"title": "Status", "type": "string", "enum": ["reported", "in progress", "resolved", "closed"]}}, "required": ["requestID", "propertyID", "issueDescription", "priorityLevel", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Design a JSON object for a property inspection report, including inspection ID, property ID, date of inspection, inspector details, and findings.", "Schema": {"properties": {"inspectionID": {"title": "Inspection ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "dateOfInspection": {"title": "Date of Inspection", "type": "string", "format": "date"}, "inspectorDetails": {"title": "Inspector Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "licenseNumber": {"title": "License Number", "type": "string"}}, "required": ["name", "licenseNumber"]}, "findings": {"title": "Findings", "type": "string"}}, "required": ["inspectionID", "propertyID", "dateOfInspection", "inspectorDetails", "findings"], "title": "PropertyInspectionReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Generate a JSON object for a financial transaction record, including transaction ID, property ID, date, amount, and transaction type.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "transactionType": {"title": "Transaction Type", "type": "string", "enum": ["rent payment", "maintenance cost", "property tax", "income"]}}, "required": ["transactionID", "propertyID", "date", "amount", "transactionType"], "title": "FinancialTransactionRecord", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Create a JSON object for storing property details, including fields like propertyID, address, unitCount, and amenities offered.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "unitCount": {"title": "Unit Count", "type": "integer"}, "amenities": {"title": "Amenities", "type": "array", "items": {"type": "string"}}}, "required": ["propertyID", "address", "unitCount"], "title": "PropertyDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Develop a JSON schema for representing lease agreements with fields such as leaseID, tenantID, propertyID, startDate, endDate, and monthlyRent.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["leaseID", "tenantID", "propertyID", "startDate", "endDate", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Construct a JSON object for tenant profiles, including fields like tenantID, fullName, dateOfBirth, contactInformation, and rentalHistory.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "dateOfBirth": {"title": "Date of Birth", "type": "string", "format": "date"}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "rentalHistory": {"title": "Rental History", "type": "array", "items": {"type": "object", "properties": {"propertyID": {"title": "Property ID", "type": "string"}, "duration": {"title": "Duration", "type": "string"}}, "required": ["propertyID", "duration"]}}}, "required": ["tenantID", "fullName", "dateOfBirth", "contactInformation"], "title": "TenantProfile", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Design a JSON object for maintenance requests, with fields such as requestID, propertyID, tenantID, issueDescription, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["requestID", "propertyID", "tenantID", "issueDescription", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Generate a JSON object for tracking rent payments, including fields like paymentID, tenantID, propertyID, paymentDate, amount, and paymentMethod.", "Schema": {"properties": {"paymentID": {"title": "Payment ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "paymentDate": {"title": "Payment Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}, "paymentMethod": {"title": "Payment Method", "type": "string", "enum": ["Credit Card", "Debit Card", "Check", "Cash", "Bank Transfer"]}}, "required": ["paymentID", "tenantID", "propertyID", "paymentDate", "amount", "paymentMethod"], "title": "RentPayment", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Create a JSON object for querying single-family residential properties, including fields like propertyID, address, squareFootage, and currentOccupancyStatus.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "integer"}, "currentOccupancyStatus": {"title": "Current Occupancy Status", "type": "string", "enum": ["occupied", "vacant", "maintenance", "reserved"]}}, "required": ["propertyID", "address", "squareFootage", "currentOccupancyStatus"], "title": "SingleFamilyResidentialQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Develop a JSON object for submitting maintenance requests for a residential property, including fields like requestID, propertyID, issueDescription, priority, and requestedBy.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["low", "medium", "high", "urgent"]}, "requestedBy": {"title": "Requested By", "type": "string"}}, "required": ["requestID", "propertyID", "issueDescription", "priority", "requestedBy"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Construct a JSON object for tracking rental payments, including fields like paymentID, propertyID, tenantID, amount, paymentDate, and paymentMethod.", "Schema": {"properties": {"paymentID": {"title": "Payment ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "amount": {"title": "Amount", "type": "number", "format": "float"}, "paymentDate": {"title": "Payment Date", "type": "string", "format": "date"}, "paymentMethod": {"title": "Payment Method", "type": "string", "enum": ["credit_card", "bank_transfer", "check", "cash"]}}, "required": ["paymentID", "propertyID", "tenantID", "amount", "paymentDate", "paymentMethod"], "title": "RentalPaymentTracking", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Design a JSON object for a tenant profile, including fields like tenantID, fullName, dateOfBirth, contactInformation, and leaseAgreementDetails.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "dateOfBirth": {"title": "Date of Birth", "type": "string", "format": "date"}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "leaseAgreementDetails": {"title": "Lease Agreement Details", "type": "object", "properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number", "format": "float"}}, "required": ["leaseID", "startDate", "endDate", "monthlyRent"]}}, "required": ["tenantID", "fullName", "dateOfBirth", "contactInformation", "leaseAgreementDetails"], "title": "TenantProfile", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Residential REITs (New)", "Task": "Generate a JSON object for listing available properties, including fields like listingID, propertyID, listingDate, monthlyRent, and amenities.", "Schema": {"properties": {"listingID": {"title": "Listing ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "listingDate": {"title": "Listing Date", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number", "format": "float"}, "amenities": {"title": "Amenities", "type": "array", "items": {"type": "string"}}}, "required": ["listingID", "propertyID", "listingDate", "monthlyRent", "amenities"], "title": "AvailablePropertiesListing", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for querying available properties in a specialized REIT portfolio, including filters like propertyType, location, and occupancyStatus.", "Schema": {"properties": {"propertyType": {"title": "Property Type", "type": "string", "enum": ["Commercial", "Residential", "Industrial", "Retail", "Healthcare"]}, "location": {"title": "Location", "type": "string"}, "occupancyStatus": {"title": "Occupancy Status", "type": "string", "enum": ["Occupied", "Vacant", "Under Renovation"]}}, "required": ["propertyType", "location"], "title": "REIT Property Query", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for submitting a maintenance request for a property within a REIT, including details like propertyID, issueDescription, and urgencyLevel.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["Low", "Medium", "High", "Critical"]}}, "required": ["propertyID", "issueDescription", "urgencyLevel"], "title": "Maintenance Request", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for reporting quarterly earnings of a specialized REIT, including metrics like totalRevenue, netIncome, and earningsPerShare.", "Schema": {"properties": {"totalRevenue": {"title": "Total Revenue", "type": "number", "format": "float"}, "netIncome": {"title": "Net Income", "type": "number", "format": "float"}, "earningsPerShare": {"title": "Earnings Per Share", "type": "number", "format": "float"}}, "required": ["totalRevenue", "netIncome", "earningsPerShare"], "title": "Quarterly Earnings Report", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for tracking the occupancy rate of a REIT's property portfolio, including data points like propertyID, totalUnits, and unitsOccupied.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "totalUnits": {"title": "Total Units", "type": "integer"}, "unitsOccupied": {"title": "Units Occupied", "type": "integer"}}, "required": ["propertyID", "totalUnits", "unitsOccupied"], "title": "Occupancy Rate Tracker", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for a REIT investor profile, including information like investorID, investmentPortfolio, and dividendYield.", "Schema": {"properties": {"investorID": {"title": "Investor ID", "type": "string"}, "investmentPortfolio": {"title": "Investment Portfolio", "type": "array", "items": {"type": "object", "properties": {"propertyID": {"title": "Property ID", "type": "string"}, "investmentAmount": {"title": "Investment Amount", "type": "number", "format": "float"}}, "required": ["propertyID", "investmentAmount"]}}, "dividendYield": {"title": "Dividend Yield", "type": "number", "format": "float"}}, "required": ["investorID", "investmentPortfolio"], "title": "Investor Profile", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for storing property details of a pipeline managed by a REIT, including properties like propertyID, location, length, diameter, and material.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "length": {"title": "Length", "type": "number"}, "diameter": {"title": "Diameter", "type": "number"}, "material": {"title": "Material", "type": "string"}}, "required": ["propertyID", "location", "length", "diameter", "material"], "title": "PipelineProperty", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for a gas station managed by a REIT, including details such as stationID, address, number of pumps, services offered, and operating hours.", "Schema": {"properties": {"stationID": {"title": "Station ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "numberOfPumps": {"title": "Number of Pumps", "type": "integer"}, "servicesOffered": {"items": {"type": "string"}, "title": "Services Offered", "type": "array"}, "operatingHours": {"title": "Operating Hours", "type": "string"}}, "required": ["stationID", "address", "numberOfPumps", "servicesOffered", "operatingHours"], "title": "GasStation", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object representing a fiber optic cable network owned by a REIT, with properties such as networkID, totalLength, bandwidthCapacity, and installationDate.", "Schema": {"properties": {"networkID": {"title": "Network ID", "type": "string"}, "totalLength": {"title": "Total Length", "type": "number"}, "bandwidthCapacity": {"title": "Bandwidth Capacity", "type": "string"}, "installationDate": {"format": "date", "title": "Installation Date", "type": "string"}}, "required": ["networkID", "totalLength", "bandwidthCapacity", "installationDate"], "title": "FiberOpticNetwork", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for a prison facility managed by a REIT, including details such as facilityID, location, capacity, securityLevel, and facilityType.", "Schema": {"properties": {"facilityID": {"title": "Facility ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "capacity": {"title": "Capacity", "type": "integer"}, "securityLevel": {"title": "Security Level", "type": "string"}, "facilityType": {"title": "Facility Type", "type": "string"}}, "required": ["facilityID", "location", "capacity", "securityLevel", "facilityType"], "title": "PrisonFacility", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object representing an automobile dealership property owned by a REIT, with properties such as dealershipID, address, showroomSize, lotSize, and brandAffiliation.", "Schema": {"properties": {"dealershipID": {"title": "Dealership ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "showroomSize": {"title": "Showroom Size", "type": "number"}, "lotSize": {"title": "Lot Size", "type": "number"}, "brandAffiliation": {"title": "Brand Affiliation", "type": "string"}}, "required": ["dealershipID", "address", "showroomSize", "lotSize", "brandAffiliation"], "title": "AutomobileDealership", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for storing telecom tower details, including properties like towerID, location, height, and tenant details.", "Schema": {"properties": {"towerID": {"title": "Tower ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "height": {"title": "Height", "type": "number"}, "tenantDetails": {"type": "array", "items": {"type": "object", "properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStart": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEnd": {"title": "Lease End Date", "type": "string", "format": "date"}}, "required": ["tenantName", "leaseStart", "leaseEnd"]}}}, "required": ["towerID", "location", "height", "tenantDetails"], "title": "TelecomTowerDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for a lease agreement, including properties such as leaseID, tenantID, paymentTerms, and leaseDuration.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "paymentTerms": {"title": "Payment Terms", "type": "string"}, "leaseDuration": {"title": "Lease Duration", "type": "object", "properties": {"start": {"title": "Start Date", "type": "string", "format": "date"}, "end": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["start", "end"]}}, "required": ["leaseID", "tenantID", "paymentTerms", "leaseDuration"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object representing maintenance records for a telecom tower, including properties like recordID, towerID, maintenanceDate, and details of the work performed.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "towerID": {"title": "Tower ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "workDetails": {"title": "Work Details", "type": "string"}}, "required": ["recordID", "towerID", "maintenanceDate", "workDetails"], "title": "MaintenanceRecord", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for tracking the financial performance of a telecom tower, including properties such as towerID, revenue, expenses, and netIncome.", "Schema": {"properties": {"towerID": {"title": "Tower ID", "type": "string"}, "revenue": {"title": "Revenue", "type": "number"}, "expenses": {"title": "Expenses", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}}, "required": ["towerID", "revenue", "expenses", "netIncome"], "title": "FinancialPerformance", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object representing the contract details between a telecom tower owner and a wireless service provider, including properties like contractID, towerID, providerID, serviceLevelAgreement, and contractTerm.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "towerID": {"title": "Tower ID", "type": "string"}, "providerID": {"title": "Provider ID", "type": "string"}, "serviceLevelAgreement": {"title": "Service Level Agreement", "type": "string"}, "contractTerm": {"title": "Contract Term", "type": "object", "properties": {"start": {"title": "Start Date", "type": "string", "format": "date"}, "end": {"title": "End Date", "type": "string", "format": "date"}}, "required": ["start", "end"]}}, "required": ["contractID", "towerID", "providerID", "serviceLevelAgreement", "contractTerm"], "title": "ContractDetails", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for querying available self storage properties, including properties like propertyID, location, size, and availability status.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "size": {"title": "Size", "type": "number"}, "availabilityStatus": {"title": "Availability Status", "type": "boolean"}}, "required": ["propertyID", "location", "size", "availabilityStatus"], "title": "SelfStoragePropertyQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for submitting a lease application for a self storage unit, including tenant details and desired unit specifications.", "Schema": {"properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "tenantContact": {"title": "Tenant Contact", "type": "string"}, "desiredSize": {"title": "Desired Size", "type": "number"}, "leaseDuration": {"title": "Lease Duration", "type": "integer"}}, "required": ["tenantName", "tenantContact", "desiredSize", "leaseDuration"], "title": "LeaseApplication", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for updating the maintenance status of a self storage property, including propertyID, maintenance details, and completion status.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "maintenanceDetails": {"title": "Maintenance Details", "type": "string"}, "completionStatus": {"title": "Completion Status", "type": "boolean"}}, "required": ["propertyID", "maintenanceDetails", "completionStatus"], "title": "MaintenanceStatusUpdate", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for tracking rent payments for self storage units, including propertyID, tenantID, paymentDate, and amount.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}, "paymentDate": {"format": "date", "title": "Payment Date", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["propertyID", "tenantID", "paymentDate", "amount"], "title": "RentPaymentTracking", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for a self storage property inspection report, including propertyID, inspectionDate, inspectorName, and findings.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "inspectionDate": {"format": "date", "title": "Inspection Date", "type": "string"}, "inspectorName": {"title": "Inspector Name", "type": "string"}, "findings": {"title": "Findings", "type": "string"}}, "required": ["propertyID", "inspectionDate", "inspectorName", "findings"], "title": "PropertyInspectionReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for storing Timber REITs property data, including properties like propertyID, location, acreage, and estimated value.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "acreage": {"title": "Acreage", "type": "number"}, "estimatedValue": {"title": "Estimated Value", "type": "number"}}, "required": ["propertyID", "location", "acreage", "estimatedValue"], "title": "TimberREITsProperty", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON schema for Timber REITs investment portfolio, including properties such as portfolioID, assets, liabilities, and netAssetValue.", "Schema": {"properties": {"portfolioID": {"title": "Portfolio ID", "type": "string"}, "assets": {"title": "Assets", "type": "array", "items": {"type": "object", "properties": {"assetID": {"title": "Asset ID", "type": "string"}, "value": {"title": "Value", "type": "number"}}, "required": ["assetID", "value"]}}, "liabilities": {"title": "Liabilities", "type": "array", "items": {"type": "object", "properties": {"liabilityID": {"title": "Liability ID", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["liabilityID", "amount"]}}, "netAssetValue": {"title": "Net Asset Value", "type": "number"}}, "required": ["portfolioID", "assets", "liabilities", "netAssetValue"], "title": "TimberREITsInvestmentPortfolio", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for Timber REITs transaction history, including properties like transactionID, date, type, and amount.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "type": {"title": "Type", "type": "string"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["transactionID", "date", "type", "amount"], "title": "TimberREITsTransactionHistory", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for Timber REITs shareholder information, including properties such as shareholderID, name, sharesOwned, and contactInfo.", "Schema": {"properties": {"shareholderID": {"title": "Shareholder ID", "type": "string"}, "name": {"title": "Name", "type": "string"}, "sharesOwned": {"title": "Shares Owned", "type": "number"}, "contactInfo": {"title": "Contact Info", "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "phone": {"title": "Phone", "type": "string"}}, "required": ["email", "phone"]}}, "required": ["shareholderID", "name", "sharesOwned", "contactInfo"], "title": "TimberREITsShareholderInfo", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for Timber REITs environmental impact report, including properties like reportID, assessmentDate, impactDetails, and mitigationPlans.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "assessmentDate": {"title": "Assessment Date", "type": "string", "format": "date"}, "impactDetails": {"title": "Impact Details", "type": "string"}, "mitigationPlans": {"title": "Mitigation Plans", "type": "string"}}, "required": ["reportID", "assessmentDate", "impactDetails", "mitigationPlans"], "title": "TimberREITsEnvironmentalImpactReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for querying Telecom Tower REITs data, including properties like towerID, location, height, and tenantCount.", "Schema": {"properties": {"towerID": {"title": "Tower ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "height": {"title": "Height", "type": "number"}, "tenantCount": {"title": "Tenant Count", "type": "integer"}}, "required": ["towerID", "location", "height", "tenantCount"], "title": "TelecomTowerQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for updating a Telecom Tower REITs record, with properties like towerID, newTenant, and leaseEndDate.", "Schema": {"properties": {"towerID": {"title": "Tower ID", "type": "string"}, "newTenant": {"title": "New Tenant", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}}, "required": ["towerID", "newTenant", "leaseEndDate"], "title": "TelecomTowerUpdate", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for a Telecom Tower REITs maintenance report, including properties like towerID, maintenanceDate, issuesReported, and maintenanceStatus.", "Schema": {"properties": {"towerID": {"title": "Tower ID", "type": "string"}, "maintenanceDate": {"format": "date-time", "title": "Maintenance Date", "type": "string"}, "issuesReported": {"items": {"type": "string"}, "title": "Issues Reported", "type": "array"}, "maintenanceStatus": {"title": "Maintenance Status", "type": "string"}}, "required": ["towerID", "maintenanceDate", "issuesReported", "maintenanceStatus"], "title": "MaintenanceReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for Telecom Tower REITs financial summary, including properties such as towerID, revenue, expenses, and netIncome.", "Schema": {"properties": {"towerID": {"title": "Tower ID", "type": "string"}, "revenue": {"title": "Revenue", "type": "number"}, "expenses": {"title": "Expenses", "type": "number"}, "netIncome": {"title": "Net Income", "type": "number"}}, "required": ["towerID", "revenue", "expenses", "netIncome"], "title": "FinancialSummary", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for Telecom Tower REITs lease agreement details, with properties like leaseID, towerID, tenantName, leaseStartDate, and leaseEndDate.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "towerID": {"title": "Tower ID", "type": "string"}, "tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStartDate": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}}, "required": ["leaseID", "towerID", "tenantName", "leaseStartDate", "leaseEndDate"], "title": "LeaseAgreementDetails", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Create a JSON object for storing real estate property details, including properties like propertyID, address, square footage, and property type.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "propertyType": {"title": "Property Type", "type": "string"}}, "required": ["propertyID", "address", "squareFootage", "propertyType"], "title": "RealEstateProperty", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Develop a JSON schema for a lease agreement, including tenant details, lease start date, lease end date, and monthly rent.", "Schema": {"properties": {"tenantDetails": {"title": "Tenant Details", "type": "object", "properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "tenantID": {"title": "Tenant ID", "type": "string"}}, "required": ["tenantName", "tenantID"]}, "leaseStartDate": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["tenantDetails", "leaseStartDate", "leaseEndDate", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Construct a JSON object for a real estate transaction, including buyer, seller, transaction date, property details, and sale price.", "Schema": {"properties": {"buyer": {"title": "Buyer", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["name", "contactInfo"]}, "seller": {"title": "Seller", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Info", "type": "string"}}, "required": ["name", "contactInfo"]}, "transactionDate": {"format": "date", "title": "Transaction Date", "type": "string"}, "propertyDetails": {"title": "Property Details", "type": "object", "properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["propertyID", "address"]}, "salePrice": {"title": "Sale Price", "type": "number"}}, "required": ["buyer", "seller", "transactionDate", "propertyDetails", "salePrice"], "title": "RealEstateTransaction", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Design a JSON object for a property maintenance request, including request ID, property ID, issue description, priority, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved", "Closed"]}}, "required": ["requestID", "propertyID", "issueDescription", "priority", "status"], "title": "PropertyMaintenanceRequest", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Generate a JSON object for a real estate appraisal report, including appraisal ID, property ID, appraiser details, appraisal date, and estimated value.", "Schema": {"properties": {"appraisalID": {"title": "Appraisal ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "appraiserDetails": {"title": "Appraiser Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "licenseNumber": {"title": "License Number", "type": "string"}}, "required": ["name", "licenseNumber"]}, "appraisalDate": {"format": "date", "title": "Appraisal Date", "type": "string"}, "estimatedValue": {"title": "Estimated Value", "type": "number"}}, "required": ["appraisalID", "propertyID", "appraiserDetails", "appraisalDate", "estimatedValue"], "title": "RealEstateAppraisalReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for querying available data center locations, including properties like locationID, address, totalCapacity, and currentUtilization.", "Schema": {"properties": {"locationID": {"title": "Location ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "totalCapacity": {"title": "Total Capacity", "type": "number"}, "currentUtilization": {"title": "Current Utilization", "type": "number"}}, "required": ["locationID", "address", "totalCapacity", "currentUtilization"], "title": "DataCenterLocationQuery", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for a data center's energy consumption report, with properties such as reportID, period, energyUsed, and energySaved.", "Schema": {"properties": {"reportID": {"title": "Report ID", "type": "string"}, "period": {"title": "Reporting Period", "type": "string"}, "energyUsed": {"title": "Energy Used", "type": "number"}, "energySaved": {"title": "Energy Saved", "type": "number"}}, "required": ["reportID", "period", "energyUsed", "energySaved"], "title": "EnergyConsumptionReport", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for tracking data center maintenance schedules, including properties like scheduleID, locationID, maintenanceDate, and maintenanceActivities.", "Schema": {"properties": {"scheduleID": {"title": "Schedule ID", "type": "string"}, "locationID": {"title": "Location ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "maintenanceActivities": {"title": "Maintenance Activities", "type": "array", "items": {"type": "string"}}}, "required": ["scheduleID", "locationID", "maintenanceDate", "maintenanceActivities"], "title": "MaintenanceSchedule", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for data center client contracts, with properties such as contractID, clientName, serviceLevelAgreement, and contractDuration.", "Schema": {"properties": {"contractID": {"title": "Contract ID", "type": "string"}, "clientName": {"title": "Client Name", "type": "string"}, "serviceLevelAgreement": {"title": "Service Level Agreement", "type": "string"}, "contractDuration": {"title": "Contract Duration", "type": "string"}}, "required": ["contractID", "clientName", "serviceLevelAgreement", "contractDuration"], "title": "ClientContract", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Formulate a JSON object for monitoring data center security incidents, including properties like incidentID, detectedTime, incidentType, and resolutionStatus.", "Schema": {"properties": {"incidentID": {"title": "Incident ID", "type": "string"}, "detectedTime": {"title": "Detected Time", "type": "string", "format": "date-time"}, "incidentType": {"title": "Incident Type", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["incidentID", "detectedTime", "incidentType", "resolutionStatus"], "title": "SecurityIncident", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Create a JSON object for a real estate property listing, including details such as propertyID, address, square footage, and price.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "price": {"title": "Price", "type": "number"}}, "required": ["propertyID", "address", "squareFootage", "price"], "title": "PropertyListing", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Develop a JSON object for a tenant profile, including tenantID, fullName, leaseStart, leaseEnd, and monthlyRent.", "Schema": {"properties": {"tenantID": {"title": "Tenant ID", "type": "string"}, "fullName": {"title": "Full Name", "type": "string"}, "leaseStart": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEnd": {"format": "date", "title": "Lease End Date", "type": "string"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["tenantID", "fullName", "leaseStart", "leaseEnd", "monthlyRent"], "title": "TenantProfile", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Construct a JSON object for a maintenance request, including requestID, propertyID, issueDescription, priority, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved"]}}, "required": ["requestID", "propertyID", "issueDescription", "priority", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Design a JSON object for tracking real estate transactions, including transactionID, buyerID, sellerID, propertyID, saleDate, and salePrice.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "buyerID": {"title": "Buyer ID", "type": "string"}, "sellerID": {"title": "Seller ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "saleDate": {"format": "date", "title": "Sale Date", "type": "string"}, "salePrice": {"title": "Sale Price", "type": "number"}}, "required": ["transactionID", "buyerID", "sellerID", "propertyID", "saleDate", "salePrice"], "title": "RealEstateTransaction", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Generate a JSON object for a real estate appraisal report, including appraisalID, propertyID, appraiserName, appraisalDate, and estimatedValue.", "Schema": {"properties": {"appraisalID": {"title": "Appraisal ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "appraiserName": {"title": "Appraiser Name", "type": "string"}, "appraisalDate": {"format": "date", "title": "Appraisal Date", "type": "string"}, "estimatedValue": {"title": "Estimated Value", "type": "number"}}, "required": ["appraisalID", "propertyID", "appraiserName", "appraisalDate", "estimatedValue"], "title": "RealEstateAppraisalReport", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Create a JSON object for storing property details, including location, size, amenities, and sale status.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "size": {"title": "Size", "type": "number"}, "amenities": {"items": {"type": "string"}, "title": "Amenities", "type": "array"}, "saleStatus": {"title": "SaleStatus", "type": "string", "enum": ["For Sale", "Sold", "Not for Sale"]}}, "required": ["location", "size", "saleStatus"], "title": "PropertyDetails", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Develop a JSON schema for a real estate project, including project name, developer details, expected completion date, and units available.", "Schema": {"properties": {"projectName": {"title": "ProjectName", "type": "string"}, "developerDetails": {"title": "DeveloperDetails", "type": "object", "properties": {"developerName": {"title": "DeveloperName", "type": "string"}, "developerContact": {"title": "DeveloperContact", "type": "string"}}, "required": ["developerName", "developerContact"]}, "expectedCompletionDate": {"format": "date", "title": "ExpectedCompletionDate", "type": "string"}, "unitsAvailable": {"title": "UnitsAvailable", "type": "integer"}}, "required": ["projectName", "developerDetails", "expectedCompletionDate", "unitsAvailable"], "title": "RealEstateProject", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Construct a JSON object for tracking real estate sales, including property ID, buyer details, sale date, and sale price.", "Schema": {"properties": {"propertyID": {"title": "PropertyID", "type": "string"}, "buyerDetails": {"title": "BuyerDetails", "type": "object", "properties": {"buyerName": {"title": "BuyerName", "type": "string"}, "buyerContact": {"title": "BuyerContact", "type": "string"}}, "required": ["buyerName", "buyerContact"]}, "saleDate": {"format": "date", "title": "SaleDate", "type": "string"}, "salePrice": {"title": "SalePrice", "type": "number"}}, "required": ["propertyID", "buyerDetails", "saleDate", "salePrice"], "title": "RealEstateSales", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Design a JSON object for a real estate listing, including listing ID, agent details, property details, and listing date.", "Schema": {"properties": {"listingID": {"title": "ListingID", "type": "string"}, "agentDetails": {"title": "AgentDetails", "type": "object", "properties": {"agentName": {"title": "AgentName", "type": "string"}, "agentLicense": {"title": "AgentLicense", "type": "string"}}, "required": ["agentName", "agentLicense"]}, "propertyDetails": {"title": "PropertyDetails", "type": "object", "properties": {"location": {"title": "Location", "type": "string"}, "size": {"title": "Size", "type": "number"}}, "required": ["location", "size"]}, "listingDate": {"format": "date", "title": "ListingDate", "type": "string"}}, "required": ["listingID", "agentDetails", "propertyDetails", "listingDate"], "title": "RealEstateListing", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Generate a JSON object for real estate investment analysis, including investment ID, property details, expected ROI, and risk assessment.", "Schema": {"properties": {"investmentID": {"title": "InvestmentID", "type": "string"}, "propertyDetails": {"title": "PropertyDetails", "type": "object", "properties": {"location": {"title": "Location", "type": "string"}, "size": {"title": "Size", "type": "number"}}, "required": ["location", "size"]}, "expectedROI": {"title": "ExpectedROI", "type": "number"}, "riskAssessment": {"title": "RiskAssessment", "type": "string"}}, "required": ["investmentID", "propertyDetails", "expectedROI", "riskAssessment"], "title": "RealEstateInvestmentAnalysis", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Create a JSON object for a property listing, including details such as propertyID, address, square footage, and price.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "price": {"title": "Price", "type": "number"}}, "required": ["propertyID", "address", "squareFootage", "price"], "title": "PropertyListing", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Generate a JSON object for a lease agreement, with fields such as leaseID, tenantName, leaseStart, leaseEnd, and monthlyRent.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStart": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEnd": {"format": "date", "title": "Lease End Date", "type": "string"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["leaseID", "tenantName", "leaseStart", "leaseEnd", "monthlyRent"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Construct a JSON object for a maintenance request, including attributes like requestID, propertyID, issueDescription, priority, and status.", "Schema": {"properties": {"requestID": {"title": "Request ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "priority": {"title": "Priority", "type": "string", "enum": ["Low", "Medium", "High"]}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Resolved"]}}, "required": ["requestID", "propertyID", "issueDescription", "priority", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Design a JSON object for tracking real estate agent performance, with fields such as agentID, propertiesSold, totalSalesValue, and customerSatisfactionScore.", "Schema": {"properties": {"agentID": {"title": "Agent ID", "type": "string"}, "propertiesSold": {"title": "Properties Sold", "type": "integer"}, "totalSalesValue": {"title": "Total Sales Value", "type": "number"}, "customerSatisfactionScore": {"title": "Customer Satisfaction Score", "type": "number", "minimum": 0, "maximum": 100}}, "required": ["agentID", "propertiesSold", "totalSalesValue", "customerSatisfactionScore"], "title": "AgentPerformance", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Formulate a JSON object for a real estate investment analysis, including metrics such as investmentID, propertyID, capRate, cashOnCashReturn, and netOperatingIncome.", "Schema": {"properties": {"investmentID": {"title": "Investment ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "capRate": {"title": "Capitalization Rate", "type": "number"}, "cashOnCashReturn": {"title": "Cash on Cash Return", "type": "number"}, "netOperatingIncome": {"title": "Net Operating Income", "type": "number"}}, "required": ["investmentID", "propertyID", "capRate", "cashOnCashReturn", "netOperatingIncome"], "title": "InvestmentAnalysis", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for storing data center property details, including properties like propertyID, location, totalArea, leaseStatus, and tenantDetails.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "totalArea": {"title": "Total Area", "type": "number"}, "leaseStatus": {"title": "Lease Status", "type": "string"}, "tenantDetails": {"type": "object", "properties": {"tenantName": {"title": "Tenant Name", "type": "string"}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "leaseEndDate": {"title": "Lease End Date", "type": "string", "format": "date"}}, "required": ["tenantName", "leaseStartDate", "leaseEndDate"]}}, "required": ["propertyID", "location", "totalArea", "leaseStatus", "tenantDetails"], "title": "DataCenterProperty", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for tracking data center lease agreements, including properties such as leaseID, propertyID, leaseTerms, and paymentSchedule.", "Schema": {"properties": {"leaseID": {"title": "Lease ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "leaseTerms": {"title": "Lease Terms", "type": "string"}, "paymentSchedule": {"title": "Payment Schedule", "type": "array", "items": {"type": "object", "properties": {"paymentDate": {"title": "Payment Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["paymentDate", "amount"]}}}, "required": ["leaseID", "propertyID", "leaseTerms", "paymentSchedule"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for a data center maintenance log, including properties like logID, propertyID, maintenanceDate, issuesReported, and actionsTaken.", "Schema": {"properties": {"logID": {"title": "Log ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "maintenanceDate": {"title": "Maintenance Date", "type": "string", "format": "date"}, "issuesReported": {"title": "Issues Reported", "type": "array", "items": {"type": "string"}}, "actionsTaken": {"title": "Actions Taken", "type": "array", "items": {"type": "string"}}}, "required": ["logID", "propertyID", "maintenanceDate", "issuesReported", "actionsTaken"], "title": "MaintenanceLog", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for data center energy consumption records, including properties such as recordID, propertyID, date, energyUsage, and cost.", "Schema": {"properties": {"recordID": {"title": "Record ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "date": {"title": "Date", "type": "string", "format": "date"}, "energyUsage": {"title": "Energy Usage", "type": "number"}, "cost": {"title": "Cost", "type": "number"}}, "required": ["recordID", "propertyID", "date", "energyUsage", "cost"], "title": "EnergyConsumptionRecord", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for data center security incidents, including properties like incidentID, propertyID, incidentDate, description, and resolutionStatus.", "Schema": {"properties": {"incidentID": {"title": "Incident ID", "type": "string"}, "propertyID": {"title": "Property ID", "type": "string"}, "incidentDate": {"title": "Incident Date", "type": "string", "format": "date"}, "description": {"title": "Description", "type": "string"}, "resolutionStatus": {"title": "Resolution Status", "type": "string"}}, "required": ["incidentID", "propertyID", "incidentDate", "description", "resolutionStatus"], "title": "SecurityIncident", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Create a JSON object for storing information about a timberland property, including property ID, location, size in acres, and timber volume estimates.", "Schema": {"properties": {"propertyId": {"title": "Property ID", "type": "string"}, "location": {"title": "Location", "type": "string"}, "sizeInAcres": {"title": "Size in Acres", "type": "number"}, "timberVolumeEstimates": {"title": "Timber Volume Estimates", "type": "number"}}, "required": ["propertyId", "location", "sizeInAcres", "timberVolumeEstimates"], "title": "TimberlandProperty", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Develop a JSON object for tracking a timber sale transaction, including transaction ID, property ID, volume sold, sale date, and buyer information.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "volumeSold": {"title": "Volume Sold", "type": "number"}, "saleDate": {"format": "date", "title": "Sale Date", "type": "string"}, "buyerInformation": {"title": "Buyer Information", "type": "object", "properties": {"buyerName": {"title": "Buyer Name", "type": "string"}, "buyerContact": {"title": "Buyer Contact", "type": "string"}}, "required": ["buyerName", "buyerContact"]}}, "required": ["transactionId", "propertyId", "volumeSold", "saleDate", "buyerInformation"], "title": "TimberSaleTransaction", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Construct a JSON object for a lease agreement on timberland property, including lease ID, property ID, lessee information, lease start date, and lease end date.", "Schema": {"properties": {"leaseId": {"title": "Lease ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "lesseeInformation": {"title": "Lessee Information", "type": "object", "properties": {"lesseeName": {"title": "Lessee Name", "type": "string"}, "lesseeContact": {"title": "Lessee Contact", "type": "string"}}, "required": ["lesseeName", "lesseeContact"]}, "leaseStartDate": {"format": "date", "title": "Lease Start Date", "type": "string"}, "leaseEndDate": {"format": "date", "title": "Lease End Date", "type": "string"}}, "required": ["leaseId", "propertyId", "lesseeInformation", "leaseStartDate", "leaseEndDate"], "title": "TimberlandLeaseAgreement", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Design a JSON object for a forest management plan, including plan ID, property ID, objectives, planned activities, and expected outcomes.", "Schema": {"properties": {"planId": {"title": "Plan ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "objectives": {"title": "Objectives", "type": "array", "items": {"type": "string"}}, "plannedActivities": {"title": "Planned Activities", "type": "array", "items": {"type": "string"}}, "expectedOutcomes": {"title": "Expected Outcomes", "type": "array", "items": {"type": "string"}}}, "required": ["planId", "propertyId", "objectives", "plannedActivities", "expectedOutcomes"], "title": "ForestManagementPlan", "type": "object"}}
{"Category": "Equity Real Estate Investment Trusts (REITs) (New Name)", "SubCategory": "Specialized REITs (New)", "Task": "Generate a JSON object for recording environmental impact assessments on timberland properties, including assessment ID, property ID, date of assessment, findings, and recommendations.", "Schema": {"properties": {"assessmentId": {"title": "Assessment ID", "type": "string"}, "propertyId": {"title": "Property ID", "type": "string"}, "dateOfAssessment": {"format": "date", "title": "Date of Assessment", "type": "string"}, "findings": {"title": "Findings", "type": "array", "items": {"type": "string"}}, "recommendations": {"title": "Recommendations", "type": "array", "items": {"type": "string"}}}, "required": ["assessmentId", "propertyId", "dateOfAssessment", "findings", "recommendations"], "title": "EnvironmentalImpactAssessment", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Create a JSON object for storing property details, including address, square footage, type, and lease status.", "Schema": {"properties": {"address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "type": {"title": "Type", "type": "string"}, "leaseStatus": {"title": "Lease Status", "type": "boolean"}}, "required": ["address", "squareFootage", "type", "leaseStatus"], "title": "PropertyDetails", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Develop a JSON object for a lease agreement, including tenant details, lease term, rent amount, and payment schedule.", "Schema": {"properties": {"tenantDetails": {"title": "Tenant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}, "leaseTerm": {"title": "Lease Term", "type": "string"}, "rentAmount": {"title": "Rent Amount", "type": "number"}, "paymentSchedule": {"title": "Payment Schedule", "type": "string"}}, "required": ["tenantDetails", "leaseTerm", "rentAmount", "paymentSchedule"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Construct a JSON object for tracking maintenance requests, including request ID, property address, issue description, and status.", "Schema": {"properties": {"requestId": {"title": "Request ID", "type": "string"}, "propertyAddress": {"title": "Property Address", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["Open", "In Progress", "Closed"]}}, "required": ["requestId", "propertyAddress", "issueDescription", "status"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Design a JSON object for a tenant profile, including name, lease start date, contact information, and payment history.", "Schema": {"properties": {"name": {"title": "Name", "type": "string"}, "leaseStartDate": {"title": "Lease Start Date", "type": "string", "format": "date"}, "contactInformation": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "paymentHistory": {"title": "Payment History", "type": "array", "items": {"type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["date", "amount"]}}}, "required": ["name", "leaseStartDate", "contactInformation", "paymentHistory"], "title": "TenantProfile", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Generate a JSON object for a real estate portfolio, including a list of properties, total value, and performance metrics.", "Schema": {"properties": {"propertiesList": {"title": "Properties List", "type": "array", "items": {"type": "object", "properties": {"address": {"title": "Address", "type": "string"}, "value": {"title": "Value", "type": "number"}}, "required": ["address", "value"]}}, "totalValue": {"title": "Total Value", "type": "number"}, "performanceMetrics": {"title": "Performance Metrics", "type": "object", "properties": {"roi": {"title": "ROI", "type": "number"}, "occupancyRate": {"title": "Occupancy Rate", "type": "number"}}, "required": ["roi", "occupancyRate"]}}, "required": ["propertiesList", "totalValue", "performanceMetrics"], "title": "RealEstatePortfolio", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Create a JSON object for querying available properties, including filters like location, price range, and property type.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number"}, "max": {"title": "Maximum Price", "type": "number"}}, "required": ["min", "max"]}, "propertyType": {"title": "Property Type", "type": "string", "enum": ["residential", "commercial", "industrial", "land"]}}, "required": ["location", "priceRange", "propertyType"], "title": "AvailablePropertiesQuery", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Develop a JSON object for submitting a maintenance request, including details like propertyID, issueDescription, and urgency level.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["low", "medium", "high", "emergency"]}}, "required": ["propertyID", "issueDescription", "urgencyLevel"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Construct a JSON object for a lease agreement, including tenant details, lease terms, and payment schedule.", "Schema": {"properties": {"tenantDetails": {"title": "Tenant Details", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}}, "required": ["name", "contactInfo"]}, "leaseTerms": {"title": "Lease Terms", "type": "object", "properties": {"startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "rentAmount": {"title": "Rent Amount", "type": "number"}}, "required": ["startDate", "endDate", "rentAmount"]}, "paymentSchedule": {"title": "Payment Schedule", "type": "object", "properties": {"frequency": {"title": "Frequency", "type": "string", "enum": ["monthly", "quarterly", "annually"]}, "dueDate": {"title": "Due Date", "type": "string", "format": "date"}}, "required": ["frequency", "dueDate"]}}, "required": ["tenantDetails", "leaseTerms", "paymentSchedule"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Design a JSON object for real estate property listing, including attributes like propertyID, listingDetails, and agentInfo.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "listingDetails": {"title": "Listing Details", "type": "object", "properties": {"price": {"title": "Price", "type": "number"}, "description": {"title": "Description", "type": "string"}, "photos": {"title": "Photos", "type": "array", "items": {"type": "string", "format": "uri"}}}, "required": ["price", "description", "photos"]}, "agentInfo": {"title": "Agent Information", "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "contact": {"title": "Contact", "type": "string"}}, "required": ["name", "contact"]}}, "required": ["propertyID", "listingDetails", "agentInfo"], "title": "PropertyListing", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Generate a JSON object for tracking real estate investment performance, including metrics like propertyID, investmentAmount, and ROI.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "investmentAmount": {"title": "Investment Amount", "type": "number"}, "ROI": {"title": "Return on Investment", "type": "object", "properties": {"percentage": {"title": "Percentage", "type": "number"}, "calculationDate": {"title": "Calculation Date", "type": "string", "format": "date"}}, "required": ["percentage", "calculationDate"]}}, "required": ["propertyID", "investmentAmount", "ROI"], "title": "InvestmentPerformance", "type": "object"}}
{"Category": "JSON Schema", "SubCategory": "Real Estate Services Schema", "Task": "Create a JSON object for storing real estate agent profiles, including properties like agentName, licenseNumber, contactInfo, and activeListings.", "Schema": {"properties": {"agentName": {"title": "Agent Name", "type": "string"}, "licenseNumber": {"title": "License Number", "type": "string"}, "contactInfo": {"title": "Contact Information", "type": "object", "properties": {"phone": {"title": "Phone", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}, "required": ["phone", "email"]}, "activeListings": {"title": "Active Listings", "type": "array", "items": {"type": "object", "properties": {"listingId": {"title": "Listing ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "price": {"title": "Price", "type": "number"}}, "required": ["listingId", "address", "price"]}}}, "required": ["agentName", "licenseNumber", "contactInfo"], "title": "Real Estate Agent Profile", "type": "object"}}
{"Category": "JSON Schema", "SubCategory": "Real Estate Services Schema", "Task": "Develop a JSON schema for real estate property listings, including properties like propertyId, address, squareFootage, and currentValuation.", "Schema": {"properties": {"propertyId": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}, "squareFootage": {"title": "Square Footage", "type": "number"}, "currentValuation": {"title": "Current Valuation", "type": "number"}}, "required": ["propertyId", "address", "squareFootage", "currentValuation"], "title": "Real Estate Property Listing", "type": "object"}}
{"Category": "JSON Schema", "SubCategory": "Real Estate Services Schema", "Task": "Construct a JSON object for real estate brokers, including properties like brokerName, brokerageFirm, yearsOfExperience, and clientReviews.", "Schema": {"properties": {"brokerName": {"title": "Broker Name", "type": "string"}, "brokerageFirm": {"title": "Brokerage Firm", "type": "string"}, "yearsOfExperience": {"title": "Years of Experience", "type": "integer"}, "clientReviews": {"title": "Client Reviews", "type": "array", "items": {"type": "object", "properties": {"clientId": {"title": "Client ID", "type": "string"}, "rating": {"title": "Rating", "type": "integer", "minimum": 1, "maximum": 5}, "comment": {"title": "Comment", "type": "string"}}, "required": ["clientId", "rating", "comment"]}}}, "required": ["brokerName", "brokerageFirm", "yearsOfExperience"], "title": "Real Estate Broker Profile", "type": "object"}}
{"Category": "JSON Schema", "SubCategory": "Real Estate Services Schema", "Task": "Design a JSON object for real estate appraisals, including properties such as appraisalId, propertyDetails, appraisedValue, and appraiser.", "Schema": {"properties": {"appraisalId": {"title": "Appraisal ID", "type": "string"}, "propertyDetails": {"title": "Property Details", "type": "object", "properties": {"propertyId": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["propertyId", "address"]}, "appraisedValue": {"title": "Appraised Value", "type": "number"}, "appraiser": {"title": "Appraiser", "type": "string"}}, "required": ["appraisalId", "propertyDetails", "appraisedValue", "appraiser"], "title": "Real Estate Appraisal", "type": "object"}}
{"Category": "JSON Schema", "SubCategory": "Real Estate Services Schema", "Task": "Generate a JSON object representing a real estate transaction, including properties like transactionId, buyerProfile, sellerProfile, propertyDetails, and closingDate.", "Schema": {"properties": {"transactionId": {"title": "Transaction ID", "type": "string"}, "buyerProfile": {"title": "Buyer Profile", "type": "object", "properties": {"buyerId": {"title": "Buyer ID", "type": "string"}, "name": {"title": "Name", "type": "string"}}, "required": ["buyerId", "name"]}, "sellerProfile": {"title": "Seller Profile", "type": "object", "properties": {"sellerId": {"title": "Seller ID", "type": "string"}, "name": {"title": "Name", "type": "string"}}, "required": ["sellerId", "name"]}, "propertyDetails": {"title": "Property Details", "type": "object", "properties": {"propertyId": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["propertyId", "address"]}, "closingDate": {"title": "Closing Date", "type": "string", "format": "date"}}, "required": ["transactionId", "buyerProfile", "sellerProfile", "propertyDetails", "closingDate"], "title": "Real Estate Transaction", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Create a JSON object for querying available properties, with filters such as location, price range, and property type.", "Schema": {"properties": {"location": {"title": "Location", "type": "string"}, "priceRange": {"title": "Price Range", "type": "object", "properties": {"min": {"title": "Minimum Price", "type": "number"}, "max": {"title": "Maximum Price", "type": "number"}}, "required": ["min", "max"]}, "propertyType": {"title": "Property Type", "type": "string", "enum": ["residential", "commercial", "industrial", "land"]}}, "required": ["location", "priceRange", "propertyType"], "title": "AvailablePropertiesQuery", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Develop a JSON object for submitting a property listing, including details such as property ID, owner information, and listing status.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "ownerInformation": {"title": "Owner Information", "type": "object", "properties": {"name": {"title": "Owner Name", "type": "string"}, "contact": {"title": "Owner Contact", "type": "string"}}, "required": ["name", "contact"]}, "listingStatus": {"title": "Listing Status", "type": "string", "enum": ["active", "pending", "sold", "withdrawn"]}}, "required": ["propertyID", "ownerInformation", "listingStatus"], "title": "PropertyListingSubmission", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Construct a JSON object for a lease agreement, including tenant details, lease terms, and payment schedule.", "Schema": {"properties": {"tenantDetails": {"title": "Tenant Details", "type": "object", "properties": {"name": {"title": "Tenant Name", "type": "string"}, "contact": {"title": "Tenant Contact", "type": "string"}}, "required": ["name", "contact"]}, "leaseTerms": {"title": "Lease Terms", "type": "object", "properties": {"startDate": {"title": "Start Date", "type": "string", "format": "date"}, "endDate": {"title": "End Date", "type": "string", "format": "date"}, "monthlyRent": {"title": "Monthly Rent", "type": "number"}}, "required": ["startDate", "endDate", "monthlyRent"]}, "paymentSchedule": {"title": "Payment Schedule", "type": "array", "items": {"type": "object", "properties": {"dueDate": {"title": "Due Date", "type": "string", "format": "date"}, "amount": {"title": "Amount", "type": "number"}}, "required": ["dueDate", "amount"]}}}, "required": ["tenantDetails", "leaseTerms", "paymentSchedule"], "title": "LeaseAgreement", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Design a JSON object for a maintenance request, including property ID, issue description, urgency level, and tenant contact information.", "Schema": {"properties": {"propertyID": {"title": "Property ID", "type": "string"}, "issueDescription": {"title": "Issue Description", "type": "string"}, "urgencyLevel": {"title": "Urgency Level", "type": "string", "enum": ["low", "medium", "high", "emergency"]}, "tenantContact": {"title": "Tenant Contact", "type": "string"}}, "required": ["propertyID", "issueDescription", "urgencyLevel", "tenantContact"], "title": "MaintenanceRequest", "type": "object"}}
{"Category": "Real Estate Management & Development (New)", "SubCategory": "Real Estate Management & Development (New Code)", "Task": "Generate a JSON object for tracking real estate transactions, including transaction ID, buyer and seller details, property details, and closing date.", "Schema": {"properties": {"transactionID": {"title": "Transaction ID", "type": "string"}, "buyerDetails": {"title": "Buyer Details", "type": "object", "properties": {"name": {"title": "Buyer Name", "type": "string"}, "contact": {"title": "Buyer Contact", "type": "string"}}, "required": ["name", "contact"]}, "sellerDetails": {"title": "Seller Details", "type": "object", "properties": {"name": {"title": "Seller Name", "type": "string"}, "contact": {"title": "Seller Contact", "type": "string"}}, "required": ["name", "contact"]}, "propertyDetails": {"title": "Property Details", "type": "object", "properties": {"propertyID": {"title": "Property ID", "type": "string"}, "address": {"title": "Address", "type": "string"}}, "required": ["propertyID", "address"]}, "closingDate": {"title": "Closing Date", "type": "string", "format": "date"}}, "required": ["transactionID", "buyerDetails", "sellerDetails", "propertyDetails", "closingDate"], "title": "RealEstateTransactionTracking", "type": "object"}}
